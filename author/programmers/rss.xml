<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>왜안되는거</title>
	  <link>/blog//temp</link>
	  <author></author>
	  <pubDate>2020-03-13T09:00:00+09:00</pubDate>
	  <guid>/blog//temp</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42899">https://programmers.co.kr/learn/courses/30/lessons/42899</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>i번째 도시 j분까지의 최대 모금액을 저장할 배열을 생성한다.</li>
  <li>현재 도시의 도보, 자전거 중 큰 모금액을 선택한다.</li>
  <li>이전 도시까지의 모금액에 더한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">K</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">travel</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">dp</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">travel</span><span class="o">.</span><span class="na">length</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="n">K</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">money</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">wT</span><span class="o">,</span> <span class="n">wM</span><span class="o">,</span> <span class="n">bT</span><span class="o">,</span> <span class="n">bM</span><span class="o">;</span><span class="c1">//walkTime,Money, bikeTime,Money</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">travel</span><span class="o">.</span><span class="na">length</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="c1">//위치</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">K</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span><span class="c1">//시간</span>
                <span class="n">money</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                <span class="n">wT</span><span class="o">=</span><span class="n">travel</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
                <span class="n">wM</span><span class="o">=</span><span class="n">travel</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
                <span class="n">bT</span><span class="o">=</span><span class="n">travel</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="o">];</span>
                <span class="n">bM</span><span class="o">=</span><span class="n">travel</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">];</span>
                <span class="c1">//둘 중 최대 모금액 체크</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">-</span><span class="n">wT</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">wM</span><span class="o">+</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="n">wT</span><span class="o">]&gt;</span><span class="n">money</span><span class="o">){</span><span class="c1">//도보</span>
                    <span class="n">money</span><span class="o">=</span><span class="n">wM</span><span class="o">+</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="n">wT</span><span class="o">];</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">-</span><span class="n">bT</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">bM</span><span class="o">+</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="n">bT</span><span class="o">]&gt;</span><span class="n">money</span><span class="o">){</span><span class="c1">//자전거</span>
                    <span class="n">money</span><span class="o">=</span><span class="n">bM</span><span class="o">+</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="n">bT</span><span class="o">];</span>
                <span class="o">}</span>
                <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">money</span><span class="o">==-</span><span class="mi">1</span><span class="o">?</span> <span class="n">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">:</span><span class="n">money</span><span class="o">;</span><span class="c1">//시간초과로 방문할수없다면 MAX저장, i번째도시 j분까지의 최대 모금액 저장</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">dp</span><span class="o">[</span><span class="n">travel</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">K</span><span class="o">];</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191204_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">for문에서 j는 0분부터 K분까지 모두 순회한다.</span></strong>
    <ul>
      <li>0분부터 시작해서 K까지 증가하며 이전에 방문한 도시가 있는지 체크한다. 있다면 현재 dp[i][j]는 유효하다는 뜻이다. 없다면 현재 dp는 방문할 수 없는 조건이라는 뜻이다.</li>
      <li>이전 도시가 있다면 거기까지의 최댓값에 현재에서 얻을 수 있는 최댓값을 더하는 식으로 알고리즘이 전개된다.</li>
      <li>참고로 i는 dp를 통해 이전 도시까지의 최댓값을 알아야하므로 i-1을 사용해야하고, 따라서 1부터 시작한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">현재 위치에서 도보와 자전거 중 최대 모금액을 찾는다.</span></strong>
    <ul>
      <li>이때 money에 이전 위치까지의 모금액을 포함해 최댓값을 저장한다.</li>
      <li>최대 금액은 이전 위치까지의 모금액에 따라 달라진다. 단순히 현재 위치에서 도보와 자전거 금액을 비교해선 안된다.</li>
      <li>이전까지의 모금액을 알기 위해 dp[i-1][j-wT]를 방문한다. 이때 i-1은 이전 위치, j-wT는 현재 시간j에서 도보시간wT를 뺀 값이다. 그러면 이전 시간으로 돌아갈 수 있다.</li>
      <li>j-wT가 인덱스 범위를 벗어나지 않도록 체크하는 것이 &amp;&amp;앞의 조건문이다.</li>
      <li>인덱스 범위를 벗어난다면 money에는 값이 갱신되지 않는다. 이 경우는 dp[i][j]가 travel의 위치, 시간에 포함되지 않는 경우이다. 우리는 dp배열 크기를 모두 사용하지 않는다. dp배열을 [travel.length+1][K+1]로 선언한 이유는 마지막에 도착하는 [travel.length][K]를 사용하기 위해서이다. 테스트1을 예로 들었을때, 우리는 dp[1][3]은 사용하지 않는다. 도시1일때 3초인 경우는 없다. 이 경우 if문을 만족하지 않아 money가 갱신되지 않는다. 결국 방문할 수 없는 조건이라는 뜻이다.
<img src="./assets/images/191204_3.png" alt="실행결과" width="300" height="300" /></li>
      <li>결국 위 배열 사이에 Integer.MAX_VALUE의 뜻은 dp[i][j]가 방문할 수 없는 잘못된 조건이라는 뜻이고, 해당 위치에 방문했다는 뜻은 특정 j에서 이전에 방문한 도시가 존재하는지 확인하러 왔다는 것인데, MAX가 있으므로 지금 j 위치로 올 수 있는 경우는 없다고 알게 된다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">dp[i][j]에 최대 모금액을 저장한다.</span></strong>
    <ul>
      <li>위에서 if문을 실행했다면 money에는 -1 또는 도보, 자전거를 포함한 모금액이 들어갔을 것이다.</li>
      <li>-1인 경우에는 Integer.MAX_VALUE로 int최댓값을 저장해야한다. 나중에 dp[i][j]를 방문했을때 가장 큰 값이 들어가야 money의 갱신이 일어나지 않기 떄문이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">dp[travel.length][K]에 최댓값이 저장된다.</span></strong>
    <ul>
      <li>해당 값을 answer로 리턴하면 된다.</li>
      <li>사실 이해가 안된다. i야 그렇다 치고 K분 이전에 도착하는게 최적일 수 있는데 그러면 항상 dp[travel.length][K]에 들어간다고 할 수 없지 않나?</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어렵다 어려워…모든 경우의 수를 생각해야하므로 당연히 재귀를 호출할 것이라고 생각했는데, 다른 사람들의 풀이과정에서 재귀를 한 번도 못봤다. 그리고 이게 초등부 문제라니 도대체 2000년대에 무슨 일이 있었던거지</p>

<h3 id="참고">참고</h3>
<ul>
  <li>서울에서 경산까지 <a href="https://webfirewood.tistory.com/97">https://webfirewood.tistory.com/97</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2018 KAKAO BLIND RECRUITMENT: [1차] 다트게임</title>
	  <link>/blog//algo-prog17682</link>
	  <author></author>
	  <pubDate>2019-12-22T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog17682</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/17682">https://programmers.co.kr/learn/courses/30/lessons/17682</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>dartResult를 charAt()으로 문자를 하나씩 확인한다.</li>
  <li>숫자면 int형으로 바꿔서 저장한다.</li>
  <li>D, T가 나오면 제곱, 세제곱을 한다.</li>
  <li><code class="highlighter-rouge">*</code>이면 현재 값과 이전 값에 두배를 곱한다.</li>
  <li>#이면 -1을 곱한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">dartResult</span><span class="o">)</span> <span class="o">{</span>
      <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
      <span class="kt">int</span><span class="o">[]</span> <span class="n">score</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
      <span class="kt">int</span> <span class="n">idx</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
      <span class="kt">char</span> <span class="n">ch</span><span class="o">;</span>
      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
          <span class="n">ch</span><span class="o">=</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
          <span class="k">if</span><span class="o">(</span><span class="sc">'0'</span><span class="o">&lt;=</span><span class="n">ch</span><span class="o">&amp;&amp;</span><span class="n">ch</span><span class="o">&lt;=</span><span class="sc">'9'</span><span class="o">){</span>
              <span class="n">idx</span><span class="o">++;</span>
              <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'1'</span><span class="o">&amp;&amp;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">){</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]+=</span><span class="mi">10</span><span class="o">;</span>
                  <span class="n">i</span><span class="o">++;</span>
              <span class="o">}</span>
              <span class="k">else</span><span class="o">{</span>
                 <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]+=</span><span class="n">ch</span><span class="o">-</span><span class="sc">'0'</span><span class="o">;</span>
              <span class="o">}</span>                  
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'D'</span><span class="o">){</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">],</span><span class="mi">2</span><span class="o">);</span>
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'T'</span><span class="o">)</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">],</span><span class="mi">3</span><span class="o">);</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'*'</span><span class="o">){</span>
              <span class="k">if</span><span class="o">(</span><span class="n">idx</span><span class="o">==</span><span class="mi">0</span><span class="o">){</span>
                  <span class="n">score</span><span class="o">[</span><span class="mi">0</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
              <span class="o">}</span>
              <span class="k">else</span><span class="o">{</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">-</span><span class="mi">1</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
              <span class="o">}</span>
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'#'</span><span class="o">)</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]*=(-</span><span class="mi">1</span><span class="o">);</span>

      <span class="o">}</span>
      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">s:</span><span class="n">score</span><span class="o">)</span>
          <span class="n">answer</span><span class="o">+=</span><span class="n">s</span><span class="o">;</span>
      <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191222_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">dartResult를 charAt으로 문자를 추출한다.</span></strong>
    <ul>
      <li>charAt()으로 뽑은 값은 ch에 저장한다.</li>
      <li>int[] 배열을 이용하여 3번의 게임 점수를 저장한다.</li>
      <li>숫자가 나오면 n번째 게임 점수를 나타내는 것이므로 배열 인덱스를 하나 증가시켜 새 인덱스에 값을 저장하도록 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 숫자인지 체크한다.</span></strong>
    <ul>
      <li>ch==1이라면 뒤에 0이 오는지 따로 체크한다.</li>
      <li>ch를 그대로 int배열에 저장하면 아스키코드 번호가 저장되므로 int형 숫자 값으로 바꿔서 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 보너스인지 확인한다.</span></strong>
    <ul>
      <li>S는 1제곱이므로 값이 바뀌지 않는다. 그래서 따로 코드를 작성하지 않았다.</li>
      <li>D는 현재 값에 제곱을 취한다.</li>
      <li>T는 세제곱이다.</li>
      <li>제곱값은 Math.pow()로 제곱을 계산하였다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 옵션인지 체크한다.</span></strong>
    <ul>
      <li><code class="highlighter-rouge">*</code>이면 이전 값과 현재 값에 2배를 곱한다.</li>
      <li>#은 현재 값에 -1을 곱한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">계산이 끝나면 score배열을 순회하며 최종 합계를 저장한다.</span></strong>
    <ul>
      <li>for-each문을 이용하여 합계를 구했다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어려운 문제는 아니었다. 어떻게 하면 효율적으로 작성할 수 있을까 고민해보았는데 그냥 if문으로 모든 경우를 구해서 푸는 게 정석인 것 같다. 처음에는 보너스나 옵션에 따라 split함수로 쪼개서 기회를 나눠볼까 생각했는데, 이러나 저러나 charAt으로 문자를 뽑아야하는 것은 똑같을 것 같아서 split은 사용하지 않았다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2018 KAKAO BLIND RECRUITMENT: [1차] 비밀지도</title>
	  <link>/blog//algo-prog17681</link>
	  <author></author>
	  <pubDate>2019-12-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog17681</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/17681">https://programmers.co.kr/learn/courses/30/lessons/17681</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>십진수를 이진수로 변환한다.</li>
  <li>변환한 이진수 길이가 n이 되도록 앞에 0을 붙여준다.</li>
  <li>둘다 0일때만 공백을, 아니라면 #을 붙인다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="n">String</span> <span class="nf">makeZero</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">){</span><span class="c1">//이진수 앞에 0을 채워주는 함수</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
         <span class="k">while</span><span class="o">(</span><span class="n">cnt</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
             <span class="n">str</span><span class="o">=</span><span class="s">"0"</span><span class="o">+</span><span class="n">str</span><span class="o">;</span>
             <span class="n">cnt</span><span class="o">--;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
     <span class="o">}</span>
     <span class="kd">public</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
       <span class="n">String</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
       <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
       <span class="n">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
       <span class="n">String</span> <span class="n">str1</span><span class="o">=</span><span class="s">""</span><span class="o">,</span> <span class="n">str2</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">numSize</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
           <span class="n">str1</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span><span class="c1">//이진수 변환</span>
           <span class="n">str2</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>  
           <span class="n">str1</span><span class="o">=</span><span class="n">makeZero</span><span class="o">(</span><span class="n">str1</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>
           <span class="n">str2</span><span class="o">=</span><span class="n">makeZero</span><span class="o">(</span><span class="n">str2</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>
           <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
               <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">&amp;&amp;</span><span class="n">str2</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">)</span>
                   <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="s">" "</span><span class="o">;</span>
               <span class="k">else</span>
                   <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="s">"#"</span><span class="o">;</span>
           <span class="o">}</span>
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191219_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">십진수를 이진수로 변환한 값의 길이가 n보다 작다면 앞에 0을 붙여준다.</span></strong>
    <ul>
      <li>Integer.toBinaryString()함수로 십진수를 이진수로 변환한다.</li>
      <li>바뀐 이진수는 길이 n을 만족해야하므로, 만약 부족하다면 makeZero()함수를 통해 0을 채운다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">완성된 이진수를 비교하며 조건에 맞게 문자열을 만든다.</span></strong>
    <ul>
      <li>charAt()함수로 문자를 하나씩 비교한다.</li>
      <li>둘다 0일 때만 공백을, 나머지는 벽을 뜻하는 #을 만든다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>문제를 꼼꼼하게 안읽어서 살짝 삽질했다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 서머코딩/윈터코딩(~2018): 예산</title>
	  <link>/blog//algo-prog12982</link>
	  <author></author>
	  <pubDate>2019-12-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12982</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12982">https://programmers.co.kr/learn/courses/30/lessons/12982</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>최대한 많은 부서에 지원해야하므로 금액이 담긴 배열d를 오름차순 정렬한다.</li>
  <li>예산이 넘지 않는 한에서 앞에서부터 지원한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">budget</span><span class="o">)</span> <span class="o">{</span>
       <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
       <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">d</span><span class="o">);</span>
       <span class="kt">int</span> <span class="n">money</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">dd:</span><span class="n">d</span><span class="o">){</span>
           <span class="k">if</span><span class="o">(</span><span class="n">money</span><span class="o">+</span><span class="n">dd</span><span class="o">&lt;=</span><span class="n">budget</span><span class="o">){</span>
               <span class="n">money</span><span class="o">+=</span><span class="n">dd</span><span class="o">;</span>
               <span class="n">answer</span><span class="o">++;</span>
           <span class="o">}</span>              
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
   <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191219_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">금액이 적은 곳부터 지원한다.</span></strong>
    <ul>
      <li>최대한 많은 부서에 지원해야하므로 금액이 적은 곳부터 지원해야한다.</li>
      <li>따라서 배열을 오름차순으로 정렬한 후, 앞에서부터 지원한다.</li>
      <li>예산이 넘어가면 지원을 중단한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>문제가 요구하는 것을 파악하니 코드 작성은 어렵지 않았다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2019 KAKAO BLIND RECRUITMENT: 실패율</title>
	  <link>/blog//algo-prog42889</link>
	  <author></author>
	  <pubDate>2019-12-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42889</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42889">https://programmers.co.kr/learn/courses/30/lessons/42889</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>스테이지별 클리어하지 못한 사람 수를 계산한다.</li>
  <li>스테이지별 실패율을 계산한다.</li>
  <li>스테이지 단계와 실패율을 가지는 클래스를 생성, 조건에 맞게 내림차순 정렬한다.</li>
  <li>answer에 스테이지 번호를 옮겨 담아 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Stage</span><span class="o">{</span>
     <span class="kt">int</span> <span class="n">stage</span><span class="o">;</span>
     <span class="kt">double</span> <span class="n">lose</span><span class="o">;</span>
     <span class="kd">public</span> <span class="nf">Stage</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">,</span> <span class="kt">double</span> <span class="n">l</span><span class="o">){</span>
         <span class="k">this</span><span class="o">.</span><span class="na">stage</span><span class="o">=</span><span class="n">s</span><span class="o">;</span>
         <span class="k">this</span><span class="o">.</span><span class="na">lose</span><span class="o">=</span><span class="n">l</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">N</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">stages</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">N</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">player</span><span class="o">=</span><span class="n">stages</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">notClear</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">N</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">stages</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">notClear</span><span class="o">[</span><span class="n">stages</span><span class="o">[</span><span class="n">i</span><span class="o">]]++;</span>
         <span class="o">}</span>
         <span class="kt">double</span><span class="o">[]</span> <span class="n">loseRate</span><span class="o">=</span><span class="k">new</span> <span class="kt">double</span><span class="o">[</span><span class="n">N</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">notClear</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">player</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span>
                 <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">0</span><span class="o">;</span>
             <span class="k">else</span>
                 <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="kt">double</span><span class="o">)</span><span class="n">notClear</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="n">player</span><span class="o">;</span>
             <span class="n">player</span><span class="o">-=</span><span class="n">notClear</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
         <span class="o">}</span>
         <span class="n">Stage</span><span class="o">[]</span> <span class="n">stage</span><span class="o">=</span><span class="k">new</span> <span class="n">Stage</span><span class="o">[</span><span class="n">N</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">stage</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">stage</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Stage</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]);</span>
         <span class="o">}</span>
         <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">stage</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Stage</span><span class="o">&gt;(){</span>
             <span class="nd">@Override</span>
             <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Stage</span> <span class="n">s1</span><span class="o">,</span> <span class="n">Stage</span> <span class="n">s2</span><span class="o">){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">lose</span><span class="o">==</span><span class="n">s2</span><span class="o">.</span><span class="na">lose</span><span class="o">)</span>
                     <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">lose</span><span class="o">&gt;</span><span class="n">s2</span><span class="o">.</span><span class="na">lose</span><span class="o">)</span>
                     <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                 <span class="k">else</span>
                     <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">});</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">stage</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">stage</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191219_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">스테이지별 클리어하지 못한 수를 구한다.</span></strong>
    <ul>
      <li>notClear 배열을 생성하여 인덱스를 스테이지 번호로 생각하여 스테이지별 클리어하짐 못한 사람 수를 저장한다.</li>
      <li>인덱스 0은 사용하지 않고, 스테이지를 모두 클리어하면 N+1의 값을 가지므로 N+2의 크기가 필요하다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">실패율을 계산한다.</span></strong>
    <ul>
      <li>loseRate 배열을 생성하고, 인덱스를 스테이지 번호로 생각하여 각 스테이지별 실패율을 계산해 저장한다.</li>
      <li>이때 실패율은 소수점이 발생하므로 double형 배열에 넣어야한다.</li>
      <li>player가 0인 경우 클리어 못한 사람 수/0이므로 NaN이 발생한다(분모가 0은 수학적 오류임). 따라서 이 경우는 나눗셈 연산을 하지 않고 if문으로 따로 빼주어 loseRate[i]에 0을 넣는다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Stage 클래스를 생성하여 내림차순 정렬한다.</span></strong>
    <ul>
      <li>Stage 클래스는 스테이지 번호 stage와 실패율 lose를 가진다.</li>
      <li>클래스를 생성하여 내림차순으로 정렬하는 까닭은, 실패율으로 우선순위를 부여하되 배열에 저장하는 값은 스테이지 번호여야 되기 때문이다.</li>
      <li>이에 따른 정렬은 Comparator을 이용한다.</li>
      <li>실패율이 같다면 스테이지 번호가 작은 순이 먼저 오도록 해야하므로 0을 리턴한다. 0을 리턴한다는 뜻은 자리 이동이 일어나지 않는다는 뜻인데, 이렇게 해도 문제가 없는 이유는 애초에 비교하는 s1과 s2의 스테이지 번호는 s1이 s2보다 항상 작기 때문이다. 애초에 배열 stage에 스테이지 번호 순으로 1번부터 N까지 차례대로 넣으므로 s1의 스테이지 번호 값이 s2보다 작다는 것이 보장된다.</li>
      <li>s1의 실패율이 더 크다면 -1을 리턴하여 s1이 앞으로 가게 한다.</li>
      <li>s2의 실패율이 더 크다면 1을 리턴해 s1이 뒤로 가게 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">정렬된 stage의 스테이지 번호를 answer에 옮겨 담아 리턴한다.</span></strong>
    <ul>
      <li>answer에는 내림차순으로 정렬된 스테이지 번호를 리턴하면 되므로 배열 stage의 stage값을 answer에 옮겨 담는다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>문제 자체는 어렵지 않았지만 for문을 생각보다 많이 사용하여 코드가 효율적이라는 생각은 들지 않는다. 또한 내림차순으로 정렬할 때 클래스를 생성하지 않고 할 수 있는 방법이 있을까 고민했었는데, 다른 사람들도 모두 클래스를 사용한 걸 보아 이게 최선인 것 같다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 직사각형 별찍기</title>
	  <link>/blog//algo-prog12969</link>
	  <author></author>
	  <pubDate>2019-12-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12969</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12969">https://programmers.co.kr/learn/courses/30/lessons/12969</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>가로 길이, 세로 길이에 맞는 직사각형을 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
         <span class="n">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
         <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
         <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

         <span class="c1">//System.out.println(a + b);</span>

         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">b</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">a</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"*"</span><span class="o">);</span>
             <span class="o">}</span>
             <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
         <span class="o">}</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191218_17.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>쉽다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: x만큼 간격이 있는 n개의 숫자</title>
	  <link>/blog//algo-prog12954</link>
	  <author></author>
	  <pubDate>2019-12-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12954</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12954">https://programmers.co.kr/learn/courses/30/lessons/12954</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>행렬 각 자리끼리 더한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kt">long</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
       <span class="kt">long</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
       <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">long</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
           <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="kt">long</span><span class="o">)</span><span class="n">x</span><span class="o">*(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
   <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191218_16.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">x의 곱이 오버플로우가 발생할 수 있으므로 long으로 형변환 후 저장한다.</span></strong></li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>처음에는 x i+1을 곱한 결과에 long 형변환을 해주었는데 그러면 실패한다. 아마 int*int형 곱으로 이미 오버플로우가 발생하여 잘못 된 값을 long으로 변환해서 그런 것 같다. 처음부터 x를 long으로 큰 곳에 할당해놓고 i+1을 곱하니 성공하였다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 행렬의 덧셈</title>
	  <link>/blog//algo-prog12950</link>
	  <author></author>
	  <pubDate>2019-12-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12950</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12950">https://programmers.co.kr/learn/courses/30/lessons/12950</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>행렬 각 자리끼리 더한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kt">int</span><span class="o">[][]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
       <span class="kt">int</span><span class="o">[][]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
       <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">arr1</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">];</span>
       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
           <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
               <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]+</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
           <span class="o">}</span>
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
   <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191218_15.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">행렬의 각 자릿수끼리 더한다.</span></strong></li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어려운 문제는 아니었다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 핸드폰 번호 가리기</title>
	  <link>/blog//algo-prog12948</link>
	  <author></author>
	  <pubDate>2019-12-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12948</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12948">https://programmers.co.kr/learn/courses/30/lessons/12948</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>뒤에서부터 4개를 answer에 저장한 뒤, 나머지 갯수는 <code class="highlighter-rouge">*</code>을 붙인다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">phone_number</span><span class="o">)</span> <span class="o">{</span>
       <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">lastIdx</span><span class="o">=</span><span class="n">phone_number</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span>
       <span class="k">while</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">){</span>
           <span class="n">answer</span><span class="o">=</span><span class="n">phone_number</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">lastIdx</span><span class="o">-</span><span class="n">i</span><span class="o">)+</span><span class="n">answer</span><span class="o">;</span>
           <span class="n">i</span><span class="o">++;</span>
       <span class="o">}</span>
       <span class="k">while</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">lastIdx</span><span class="o">){</span>
           <span class="n">answer</span><span class="o">=</span><span class="s">"*"</span><span class="o">+</span><span class="n">answer</span><span class="o">;</span>
           <span class="n">i</span><span class="o">++;</span>
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
   <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191218_14.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">뒤에서부터 4개를 answer 앞에 붙인다.</span></strong></li>
  <li><strong><span style="color:navy">나머지 갯수는 전부 *을 넣는다.</span></strong></li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어떤 코드는 String을 split한 후, 배열을 length-4전까지만 순회해 <code class="highlighter-rouge">*</code>로 바꾼 것을 보았다. 그게 더 깔끔한 것 같다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 하샤드 수</title>
	  <link>/blog//algo-prog12947</link>
	  <author></author>
	  <pubDate>2019-12-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12947</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12947">https://programmers.co.kr/learn/courses/30/lessons/12947</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>나머지 연산으로 자릿수의 합을 구해 total에 저장한다.</li>
  <li>x%total==0인지 체크한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
       <span class="kt">boolean</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">total</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">originX</span><span class="o">=</span><span class="n">x</span><span class="o">;</span>
       <span class="k">while</span><span class="o">(</span><span class="n">x</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
           <span class="n">total</span><span class="o">+=</span><span class="n">x</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
           <span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="o">/</span><span class="mi">10</span><span class="o">;</span>
       <span class="o">}</span>
       <span class="n">answer</span><span class="o">=</span> <span class="n">originX</span><span class="o">%</span><span class="n">total</span><span class="o">==</span><span class="mi">0</span> <span class="o">?</span> <span class="kc">true</span> <span class="o">:</span> <span class="kc">false</span><span class="o">;</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
   <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191218_13.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">나머지 연산으로 자릿수의 합을 구한다.</span></strong>
    <ul>
      <li>10으로 나눈 나머지로 각 자릿수를 알 수 있다.</li>
      <li>x의 값은 계속 바뀌므로 최초 x의 값을 originX에 저장해둔다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">하샤드 수인지 검사한다.</span></strong>
    <ul>
      <li>total%originX==0이면 하샤드 수이므로 true, 아니라면 false를 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>int x를 String형변환후 split()로 쪼개어 자릿수 합을 구한 코드도 있었다. 그것보다는 이게 더 간단한 것 같다.</p>

	  ]]></description>
	</item>


</channel>
</rss>
