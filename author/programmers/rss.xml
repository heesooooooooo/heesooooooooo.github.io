<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 2019 카카오 개발자 겨울 인턴십: 튜플</title>
	  <link>/blog//algo-prog64065</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog64065</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/64065">https://programmers.co.kr/learn/courses/30/lessons/64065</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>s안의 중괄호를 없애서 배열에 넣는다.</li>
  <li>원소 길이의 오름차순으로 정렬한다.</li>
  <li>정렬된 String 원소를 순회한다.</li>
  <li>각 원소에서 ‘,’를 지우고 숫자만 남긴 후, 처음 보는 숫자이면 answer에 넣는다.</li>
  <li>숫자 체크는 HashSet을 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="c1">// 중괄호 없애기</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"},|}"</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">str</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"\\{"</span><span class="o">);</span>
        <span class="c1">// 길이 순으로 오름차순 정렬</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">str</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(){</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">String</span> <span class="n">s1</span><span class="o">,</span> <span class="n">String</span> <span class="n">s2</span><span class="o">){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">length</span><span class="o">()&lt;</span><span class="n">s2</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="n">s2</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">});</span>
        
        <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>        
        <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span> <span class="c1">// 숫자 체크 위함</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span> <span class="c1">// 집합 순회</span>
            <span class="n">String</span><span class="o">[]</span> <span class="n">now</span><span class="o">=</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">","</span><span class="o">);</span> <span class="c1">// 숫자만 남기기</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">now</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span> <span class="c1">// 숫자 순회</span>
                <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="k">continue</span><span class="o">;</span> 
                <span class="k">else</span> <span class="o">{</span> <span class="c1">// 처음 보는 숫자이면 answer에 삽입</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
                    <span class="n">map</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span> <span class="c1">// 다음 비교를 위함</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">문자열을 쪼갠다</span></strong>
    <ul>
      <li>집합을 감싸는 ‘{}’를 없앤다.</li>
      <li>집합이 끝나는 지점인 ‘},’과 맨 마지막 끝 ‘}’를 없앤다.</li>
      <li>처음 시작하는 중괄호 ‘{‘를 업앤다.</li>
      <li>’{‘ 기준으로 s를 쪼개서 배열에 저장한다.</li>
      <li>이제 배열에는 숫자와 콤마만 들어가있다. ex) [“1,2”, “3”, …]</li>
      <li>길이가 짧은 것부터 체크해야하므로 Comparator을 이용하여 길이순으로 오름차순 정렬한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">해시셋을 이용하여 숫자를 체크한다</span></strong>
    <ul>
      <li>오름차순 정렬된 str을 인덱스 i로 순회한다.</li>
      <li>i번째 문자열의 숫자만 체크하기 위해 ‘,’ 기준으로 잘라 now 배열에 넣는다.</li>
      <li>now를 인덱스 j로 순회하며 now 집합 안의 숫자를 체크한다.</li>
      <li>HashSet을 이용하여 처음 보는 숫자이면 answer에 넣는다.</li>
      <li>숫자는 중복이 없다고 했으므로 해시셋을 사용할 수 있다.</li>
      <li>다음 비교를 위해 answer[i]에 넣은 값을 해시셋에도 저장해준다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 찾아라 프로그래밍 마에스터: 폰켓몬</title>
	  <link>/blog//algo-prog1845</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog1845</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/1845">https://programmers.co.kr/learn/courses/30/lessons/1845</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>DP를 이용한다.</li>
  <li>dp[i][j]=max(dp[i-1][j] 빼고 나머지 dp[i-1][])+land[i][j]</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c1">// 해시셋에 종류 넣기</span>
        <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">set</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span><span class="n">nums</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">set</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">num</span><span class="o">))</span> <span class="k">continue</span><span class="o">;</span>
            <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">canGet</span><span class="o">=</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 내가 선택할 수 있는 종류 최대 수</span>
        <span class="c1">// 그만큼 종류가 없다면 종류를, 아니면 선택할 수 있는 최대 수를 리턴</span>
        <span class="n">answer</span><span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">()&lt;</span><span class="n">canGet</span> <span class="o">?</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">():</span> <span class="n">canGet</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_5.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">HashSet을 이용하여 종류를 센다</span></strong>
    <ul>
      <li>내가 선택할 수 있는 종류의 수는 nums.length/2 (canGet)</li>
      <li>nums의 종류가 canGet보다 작다면 nums의 종류를, 종류가 더 많다면 canGet을 리턴하면 된다.</li>
      <li>종류를 세기 위해 HashSet을 이용하여 중복을 거르고 종류들을 저장한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] Summer/Winter Coding(~2018): 소수 만들기</title>
	  <link>/blog//algo-prog12977</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12977</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12977">https://programmers.co.kr/learn/courses/30/lessons/12977</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>에라토스테네스의 체로 소수를 미리 계산한다.</li>
  <li>조합을 이용하여 3개를 선택한다.</li>
  <li>선택한 숫자들의 합이 소수인지 확인한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kt">boolean</span><span class="o">[]</span> <span class="n">prime</span><span class="o">,</span> <span class="n">visit</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">n</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">answer</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">n</span><span class="o">=</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">nums</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="n">nums</span><span class="o">[</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// nums에서 제일 큰 값</span>
        <span class="n">prime</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">max</span><span class="o">*</span><span class="mi">3</span><span class="o">];</span> <span class="c1">// 3개의 합이 max*3보다는 작음</span>
        <span class="n">visit</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        
        <span class="c1">// 에라토스테네스의 체</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">prime</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>        
        <span class="kt">int</span> <span class="n">range</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">prime</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">range</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">prime</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">prime</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">+=</span><span class="n">i</span><span class="o">){</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">prime</span><span class="o">[</span><span class="n">j</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>
                <span class="n">prime</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        
        <span class="c1">// 조합으로 3개 선택</span>
        <span class="n">comb</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">nums</span><span class="o">);</span>
        
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">comb</span><span class="o">(</span><span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">cnt</span><span class="o">,</span> <span class="kt">int</span> <span class="n">sum</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="mi">3</span><span class="o">){</span> <span class="c1">// 3개 선택 완료</span>
            <span class="k">if</span><span class="o">(</span><span class="n">prime</span><span class="o">[</span><span class="n">sum</span><span class="o">])</span> <span class="o">{</span> <span class="c1">// 소수 체크</span>
                <span class="n">answer</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">start</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span> <span class="c1">// 조합</span>
            <span class="k">if</span><span class="o">(</span><span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span> <span class="c1">// i를 선택하는 경우</span>
            <span class="n">comb</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">cnt</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">sum</span><span class="o">+</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">nums</span><span class="o">);</span> <span class="c1">// i값을 sum에 더해서 재귀 호출</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span> <span class="c1">// i를 선택하지 않는 경우</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">소수를 미리 구해놓는다</span></strong>
    <ul>
      <li>에라토스테네스의 체를 이용한다.</li>
      <li>이때 어디까지 찾아 놓을지가 문제인데, nums의 최댓값*3보다는 무조건 작다.</li>
      <li>따라서 nums를 오름차순 정렬하고 마지막 값을 max에 저장한 후 max*3까지의 소수를 구한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">서로 다른 3개를 선택한다</span></strong>
    <ul>
      <li>조합을 이용한다.</li>
      <li>중복 선택할 수 없으므로 visit[]를 두고 체크한다.</li>
      <li>comb()의 파라미터 start는 for문에서 체크할 시작 인덱스(앞까지는 모두 확인했으므로 0부터 또 확인할 필요 없다)</li>
      <li>cnt: 선택한 숫자 개수</li>
      <li>sum: 선택한 숫자들의 합</li>
      <li>cnt==3이면 3개를 모두 선택한 것이므로 미리 구해둔 소수 배열 prime[]을 통해 sum이 소수인지 아닌지 체크한다.</li>
      <li>소수가 맞다면 answer++</li>
      <li>여기서 중요한 것은 {1,2,7}을 선택해서 10이 되는 것과 {2,3,5}로 10이 되는 것을 모두 카운트 해야 한다는 것이다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: JadenCase 문자열 만들기</title>
	  <link>/blog//algo-prog12951</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12951</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12951">https://programmers.co.kr/learn/courses/30/lessons/12951</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>공백 기준으로 split()한다.</li>
  <li>flag를 둬서 공백이 나오면 true로 바꾸고, 그 다음 문자는 대문자로 바꾼다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">str</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
        <span class="n">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="kt">boolean</span> <span class="n">flag</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">String</span> <span class="n">ch</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="s">""</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">" "</span><span class="o">)){</span> <span class="c1">// 공백이면 다음은 대문자</span>
                <span class="n">flag</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">flag</span><span class="o">){</span> <span class="c1">// 대문자로 만들어야 함</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">ch</span><span class="o">.</span><span class="na">toUpperCase</span><span class="o">());</span>
                <span class="n">flag</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">ch</span><span class="o">.</span><span class="na">toLowerCase</span><span class="o">());</span> <span class="c1">// 소문자</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_8.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">s를 하나씩 체크하며 조건에 맞게 바꿔서 저장한다</span></strong>
    <ul>
      <li>s.charAt(i)가 공백이면 다음은 대문자임을 표시하기 위해 false=true로 바꾼다.</li>
      <li>i가 공백이 아니고 flag가 T면 대문자로 바꿔라는 뜻이므로 toUpperCase()를 이용하여 바꾸고, flag=F로 바꿔 다시 초기화한다.</li>
      <li>flag=F면 소문자로 바꿔서 저장한다. i가 대문자일수도 있으므로 toLowerCase()를 항상 거치도록 한다.</li>
      <li>문자열 삽입이 자주 일어나는 문제이므로 StringBuilder를 쓰는 것이 낫다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 최댓값과 최솟값</title>
	  <link>/blog//algo-prog12939</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12939</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12939">https://programmers.co.kr/learn/courses/30/lessons/12939</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>공백 기준으로 split()한다.</li>
  <li>min, max를 str[0] int형으로 초기화한 후 1부터 순회하며 조건에 맞게 넣는다.</li>
  <li>String 조건에 맞게 min, max를 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">str</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        
        <span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span> <span class="c1">// int형으로 변환한 값</span>
        <span class="kt">int</span> <span class="n">min</span><span class="o">=</span><span class="n">num</span><span class="o">,</span> <span class="n">max</span><span class="o">=</span><span class="n">num</span><span class="o">;</span> <span class="c1">// 0번째 값으로 초기화</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">num</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="c1">// 갱신</span>
            <span class="n">min</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">min</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
            <span class="n">max</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">min</span><span class="o">)+</span><span class="s">" "</span><span class="o">+</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">max</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_7.PNG" alt="실행결과" />
🤟 성공 🤟<br />
String형에 음수가 붙어있는 것을 parseInt해도 음수로 인식할 수 있는지 모르고 -1을 곱하는 방식으로 문제를 풀었는데, 다른 사람 풀이를 보고 가능하다는 것을 알아서 다시 풀었다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">공백 기준 split하고 min, max를 구한다</span></strong>
    <ul>
      <li>문자열을 split하여 str[]에 넣는다.</li>
      <li>min, max를 str[0] 값으로 초기화한다.</li>
      <li>i=1부터 n-1까지 순회하며 str[i]가 min, max보다 더 작거나 크다면 갱신한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 숫자의 표현</title>
	  <link>/blog//algo-prog12924</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12924</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/1845">https://programmers.co.kr/learn/courses/30/lessons/1845</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>DP를 이용한다.</li>
  <li>dp[i][j]=max(dp[i-1][j] 빼고 나머지 dp[i-1][])+land[i][j]</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">half</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// n의 반 이상부터 연속합은 무조건 n을 넘음</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">half</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="kt">int</span> <span class="n">sum</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span> <span class="c1">// 연속수 j</span>
                <span class="n">sum</span><span class="o">+=</span><span class="n">j</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">==</span><span class="n">n</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// n과 같으면 ++</span>
                    <span class="n">answer</span><span class="o">++;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">sum</span><span class="o">&gt;</span><span class="n">n</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span> <span class="c1">// n 넘으면 break</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span> <span class="c1">// 마지막 나 자신 n 추가</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_6.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">이중 for문을 이용한다</span></strong>
    <ul>
      <li>i는 시작점, j는 i+1부터 연속수이다.</li>
      <li>i는 n까지 갈 필요가 없다. n/2 초과 시 연속수의 합은 무조건 n을 넘는다.</li>
      <li>sum에 j까지 더하고, n과 같으면 answer++후 break</li>
      <li>sum&gt;n이면 더이상 볼 필요 없으므로 break</li>
      <li>마지막에 n 나 자신도 포함할 수 있으므로 answer+1을 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 땅따먹기</title>
	  <link>/blog//algo-prog12913</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12913</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12913">https://programmers.co.kr/learn/courses/30/lessons/12913</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>DP를 이용한다.</li>
  <li>dp[i][j]=max(dp[i-1][j] 빼고 나머지 dp[i-1][])+land[i][j]</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="cm">/**
        dp[][]이용
        dp[i][j]+=Math.max(dp[i-1])
        dp[0][0]~[0][3]은 원래값으로 초기화
        dp[1][0]=(0,1)+(0,2)+(0,3)
        dp[1][1]=(0,0)+(0,2)+(0,3)
        4개밖에 안되니까 
        for i 돌리고 안에서 (i,0)~(i,3) 다쓰기
        max=dp[n-1][0]~[3]까지의 최댓값
    */</span>
    <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">land</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">land</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">dp</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="mi">4</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span> <span class="c1">// 초기화</span>
            <span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">land</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span> <span class="c1">// DP 계산</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="o">],</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">]))+</span><span class="n">land</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="o">],</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">]))+</span><span class="n">land</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">]))+</span><span class="n">land</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">];</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">3</span><span class="o">]=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="o">]))+</span><span class="n">land</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">3</span><span class="o">];</span>
        <span class="o">}</span>
        
        <span class="c1">// 마지막 행에서 max 값 선택</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">2</span><span class="o">],</span> <span class="n">dp</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">])));</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_4.PNG" alt="실행결과" />
🤟 성공 🤟<br />
처음 예제를 보고 행 별로 가장 큰 값을 선택하면 되는 줄 알았는데 아니었다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">DP를 이용한다</span></strong>
    <ul>
      <li>dp[i][j]: (i, j)를 선택하는 경우 -&gt; (i-1, j)는 선택하면 안됨</li>
      <li>dp[i][j]=max(dp[i-1][j] 제외한 dp[i-1][])+land[i][j]</li>
      <li>dp[0][0]~dp[0][4]는 land값과 같이 초기화한다.</li>
      <li>마지막에 dp[n-1][0]~dp[n-1][3]에서 max를 선택하여 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 다음 큰 숫자</title>
	  <link>/blog//algo-prog12911</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12911</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12911">https://programmers.co.kr/learn/courses/30/lessons/12911</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>n+1부터 2진수로 변환했을 때 1의 개수를 센다.</li>
  <li>n을 이진수로 변환한 값의 1의 개수와 같은지 확인한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">oneCnt</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">bitCount</span><span class="o">(</span><span class="n">answer</span><span class="o">)==</span><span class="n">oneCnt</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">answer</span><span class="o">++;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_3.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">n+1부터 조건에 맞는지 체크한다</span></strong>
    <ul>
      <li>n+1부터 하나씩 늘려가면서 조건에 맞는 숫자를 리턴한다.</li>
      <li>Integer.bitCount(n)은 숫자 n을 2진수로 변환했을 때 1의 개수를 리턴해주는 메소드이다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 올바른 괄호</title>
	  <link>/blog//algo-prog12909</link>
	  <author></author>
	  <pubDate>2020-10-28T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12909</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12909">https://programmers.co.kr/learn/courses/30/lessons/12909</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>스택을 이용한다.</li>
  <li>’(‘는 push, ‘)’는 스택이 비어있지 않다면 pop한다.</li>
  <li>문자열 s 순회 후 스택은 비어있어야 T이다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kt">boolean</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">boolean</span> <span class="n">answer</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="kt">char</span> <span class="n">ch</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span>
            <span class="k">else</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
                <span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span>
                
        <span class="k">return</span> <span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()?</span> <span class="kc">true</span><span class="o">:</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201028_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">스택을 이용한다</span></strong>
    <ul>
      <li>for문으로 s의 문자를 하나씩 체크한다.</li>
      <li>’(‘는 스택에 push</li>
      <li>’)’는 스택이 비어있지 않다면 pop한다.</li>
      <li>비어있다면 잘못된 문자열이므로 false를 리턴한다.</li>
      <li>for문 순회 후 스택에 값이 남아 있으면 안된다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2017 카카오코드 본선: 단체사진 찍기</title>
	  <link>/blog//algo-prog1835</link>
	  <author></author>
	  <pubDate>2020-10-28T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog1835</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/1835">https://programmers.co.kr/learn/courses/30/lessons/1835</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>char[]로 알파벳을 다 넣는다.</li>
  <li>DFS로 순열을 구한다. visit[8], perm[8] 이용</li>
  <li>idx==8이면 isPossible()로 조건 만족하는지 체크한다.</li>
  <li>맞으면 cnt++한다.<br />
isPossible()</li>
  <li>data[i]의 a, b, cond, num을 뽑는다.</li>
  <li>perm[]에서 a, b의 위치를 찾는다. for문 이용</li>
  <li>두 인덱스 사이의 거리 gap을 구한다.</li>
  <li>gap이 조건을 만족하지 않으면 false를 리턴한다</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kt">char</span><span class="o">[]</span> <span class="n">alpha</span><span class="o">={</span><span class="sc">'A'</span><span class="o">,</span><span class="sc">'C'</span><span class="o">,</span><span class="sc">'F'</span><span class="o">,</span><span class="sc">'J'</span><span class="o">,</span><span class="sc">'M'</span><span class="o">,</span><span class="sc">'N'</span><span class="o">,</span><span class="sc">'R'</span><span class="o">,</span><span class="sc">'T'</span><span class="o">};</span>
    <span class="kt">boolean</span><span class="o">[]</span> <span class="n">visit</span><span class="o">;</span>
    <span class="kt">char</span><span class="o">[]</span> <span class="n">perm</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">visit</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="mi">8</span><span class="o">];</span>
        <span class="n">perm</span><span class="o">=</span><span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="mi">8</span><span class="o">];</span>
        <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        
        <span class="n">permutate</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">permutate</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">data</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">idx</span><span class="o">==</span><span class="mi">8</span><span class="o">){</span> <span class="c1">// 순열 생성 완료</span>
            <span class="k">if</span><span class="o">(</span><span class="n">isPossible</span><span class="o">(</span><span class="n">data</span><span class="o">))</span> <span class="n">cnt</span><span class="o">++;</span> <span class="c1">// 조건 맞으면 cnt++</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span> <span class="c1">// 중복 제거</span>
            <span class="c1">// i를 지금 사용하는 경우</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
            <span class="n">perm</span><span class="o">[</span><span class="n">idx</span><span class="o">]=</span><span class="n">alpha</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="n">permutate</span><span class="o">(</span><span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span> <span class="c1">// 재귀로 다음 값 찾기</span>
            <span class="c1">// i를 지금 사용하지 않는 경우</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isPossible</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">data</span><span class="o">){</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">d:</span><span class="n">data</span><span class="o">){</span>
            <span class="kt">char</span> <span class="n">a</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
            <span class="kt">char</span> <span class="n">b</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
            <span class="kt">char</span> <span class="n">cond</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
            <span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">4</span><span class="o">)-</span><span class="sc">'0'</span><span class="o">;</span>
            
            <span class="c1">// perm에서 a, b의 위치(인덱스) 찾기</span>
            <span class="kt">int</span> <span class="n">aIdx</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">bIdx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">8</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">perm</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">a</span><span class="o">)</span> <span class="n">aIdx</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">perm</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">b</span><span class="o">)</span> <span class="n">bIdx</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
            <span class="o">}</span>
            
            <span class="c1">// 두 지점의 거리 계산 및 조건 체크</span>
            <span class="kt">int</span> <span class="n">gap</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">aIdx</span><span class="o">-</span><span class="n">bIdx</span><span class="o">)-</span><span class="mi">1</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">cond</span><span class="o">==</span><span class="sc">'='</span> <span class="o">&amp;&amp;</span> <span class="n">gap</span><span class="o">!=</span><span class="n">num</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">cond</span><span class="o">==</span><span class="sc">'&lt;'</span> <span class="o">&amp;&amp;</span> <span class="n">gap</span><span class="o">&gt;=</span><span class="n">num</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">cond</span><span class="o">==</span><span class="sc">'&gt;'</span> <span class="o">&amp;&amp;</span> <span class="n">gap</span><span class="o">&lt;=</span><span class="n">num</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201028_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">순열을 이용하여 모든 경우의 수를 구한다</span></strong>
    <ul>
      <li>permutate()의 파라미터 idx는 perm[]에 삽입할 인덱스 위치이다.</li>
      <li>idx==8이라는 뜻은 순열 생성이 완료되었다는 뜻이므로 isPossible()을 이용하여 조건을 체크한다.</li>
      <li>isPossible()이 T라면 그 순열은 사용 가능한 것이므로 cnt++한다.</li>
      <li>아닐 경우 for문을 돌며 사용한 값이면 패스하고(visit[i]), 아닐 경우 i번째 값을 사용하는 경우, 그렇지 않은 경우로 나누어 작성한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">만든 순열이 조건을 만족하는지 체크한다</span></strong>
    <ul>
      <li>data[]의 경우를 모두 만족해야 하므로, 체크하다가 중간에 틀린 것이 있으면 바로 false를 리턴하고 종료한다.</li>
      <li>char a, b, cond, int num에 조건을 뽑아 저장한다.</li>
      <li>생성한 perm[]에서 a, b의 위치를 찾는다. 두 개의 간격을 계산하기 위함이다. for문을 이용한다.</li>
      <li>gap에 간격을 저장한다. 이때 a, b가 바로 붙어있다면 간격은 0이 되어야 하므로 -1을 해준다.</li>
      <li>cond를 체크하고, gap과 num이 cond에 어긋난다면 false를 리턴한다.</li>
      <li>모두 일치한다면 true를 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스] 단체사진 찍기 (Java) <a href="https://velog.io/@hyeon930/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%8B%A8%EC%B2%B4%EC%82%AC%EC%A7%84-%EC%B0%8D%EA%B8%B0-Java">https://velog.io/@hyeon930/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%8B%A8%EC%B2%B4%EC%82%AC%EC%A7%84-%EC%B0%8D%EA%B8%B0-Java</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
