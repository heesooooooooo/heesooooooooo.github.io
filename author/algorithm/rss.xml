<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 정렬_H-Index</title>
	  <link>/blog//algo-prog42747</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42747</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42747">https://programmers.co.kr/learn/courses/30/lessons/42747</a></p>

<h3 id="테스트케이스-추가">테스트케이스 추가</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">citations(int[])</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">[22,42]</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">[20,19,18,1]</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: center">[2,2,2]</td>
      <td style="text-align: center">2</td>
    </tr>
  </tbody>
</table>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>배열을 내림차순으로 정렬한다.</li>
  <li>h는 배열 원소 갯수부터 시작해서 하나씩 줄어든다.</li>
  <li>배열을 처음부터 순회하면서 원소가 h보다 같거나 크면 cnt++.</li>
  <li>작으면 멈추고 cnt==h인지 체크, 같으면 h를 리턴한다.</li>
  <li>다르면 h–하고 다시 처음부터 순회한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">h</span><span class="o">=</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">h</span><span class="o">){</span><span class="c1">//원소가 h이상이면</span>
                <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="n">h</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span><span class="c1">//h--하고 처음부터 다시 시작</span>
                    <span class="n">h</span><span class="o">--;</span>
                    <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                    <span class="n">i</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
            <span class="o">}</span>   
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_1.PNG" alt="실행결과" />
실패. 테스트11에서 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>잘 모르겠다. 문제 이해도 잘 안되서 다른 풀이 코드를 참고하였다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>인용된 논문 수(h)가 배열 순회 인덱스(i+1)보다 작아지면 i를 리턴한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>  
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//[22,42] 2 경우</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>Integer[] array: int형 배열은 Collections.reverseOrder()를 사용할 수 없으므로 Integer배열로 변환하여 저장한다.</li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>내림차순으로 정렬된 배열과 i를 비교한다.<br />
h   i
6 &gt; 0<br />
5 &gt; 1<br />
3 &gt; 2<strong>__</strong>_이때가 i의 최댓값이므로 횟수(i+1, 횟수는 1부터 시작)을 리턴한다.<br />
1 &lt; 3<br />
0 &lt; 4</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>사실 아직도 내가 문제를 잘못 이해하고 있는 것 같다. 뭔가 알고리즘 문제를 푸는 것은 문제를 얼마나 잘 이해하느냐인 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스/코딩테스트 고득점 Kit/정렬#3] H-Index (Java) <a href="https://developerdk.tistory.com/27">https://developerdk.tistory.com/27</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 완전탐색_모의고사</title>
	  <link>/blog//algo-prog42840</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42840</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42840">https://programmers.co.kr/learn/courses/30/lessons/42840</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>이차원 배열을 생성하여 3명의 정답 패턴을 저장한다.</li>
  <li>이중 for문으로 학생 수 만큼, 패턴이 가장 큰 학생(3번 학생)기준으로 돌린다.</li>
  <li>맞은 문제 갯수를 세어 cntArray에 저장한다.</li>
  <li>3명의 정답수를 모두 계산했으면, 가장 많이 맞힌 학생을 찾아 max에 저장한다.</li>
  <li>공동 1등이 있는지 for문으로 판별한다.</li>
  <li>공동이 있을 경우 오름차순으로 정렬하여 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span><span class="c1">//1,2번은 5,8개가 끝나면 다시 처음부터 반복</span>
                     <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                     <span class="k">continue</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_3.PNG" alt="실행결과" />
실패. 테스트 2, 3, 4를 제외하고는 모두 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>1, 2번 학생은 자신의 패턴(j)순회가 끝나면 다시 처음으로 돌아가 반복하지만, 3번째 학생은 반복하는 코드가 없다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>두번째 for문에서 패턴 최댓값인 10으로 제한하는 것이 아니라 person[i].length로 자신의 패턴 길이만큼 반복하게 한다.</li>
  <li>마지막 문제가 아닌데 패턴 순회(j)가 마지막에 도달했을 경우 다시 처음부터 순회하게 한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">person</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">j</span><span class="o">==</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제가 아닌데 j가 끝났을 경우 다시 처음부터</span>
                    <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>int[][] person: 3명의 정답 패턴을 저장한 이차원 배열이다. 처음에는 각 학생별로 일차원배열에 저장할까했는데, 각각 선언하면 for문에서 3명을 호출하기 애매하여 이차원 배열을 이용하였다.</li>
  <li>int[] cntArray: 3명의 학생들의 정답수를 저장한다.</li>
  <li>int q: answers배열을 순회하기 위한 인덱스이다.</li>
  <li>int cnt: 각 학생별 정답수를 세는 변수이다.</li>
  <li>int max: 가장 많이 맞힌 학생의 인덱스 번호를 저장한다.</li>
  <li>ArrayList<Integer> list: 가장 많이 맞힌 학생이 여러명일 경우, 그것이 몇명이 될 지 알 수 없기 떄문에 초기 할당이 필요없는 ArrayList를 이용한다.</Integer></li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>첫번째 for문에서 학생별로 순회할 수 있게 하고, 두번째 for문에서는 그 학생의 패턴을 반복한다.<br />
문제를 맞혔으면 cnt를 증가하고, 마지막 문제까지 풀면 cntArray에 정답수를 넣은 후 다음 학생을 위해 q와 cnt를 초기화한다.<br />
아직 문제가 남았는데 패턴이 끝났다면 j=-1로 초기화하여 다시 반복한다.<br />
3명의 정답수를 모두 세었으면 최댓값을 가진 학생이 누구인지 찾아 max에 학생의 인덱스 번호를 저장한다.<br />
이때 1등이 여러명일 수 있으므로 ArrayList를 이용하여 최댓값을 가진 학생들의 인덱스를 모두 저장한다. 이후 오름차순으로 정렬하여 리턴한다.</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>학생들의 정답수를 세는 것은 어렵지 않았지만, 의외로 중복되는 1등이 있을 경우 모두 찾아 오름차순으로 정렬하는 것이 고역이었다. 배열만 사용해서 문제를 해결할 수 있을 것 같았는데 마지막에 ArrayList를 쓰니까 어색하다. 무언가 ArrayList는 거하게 써야할 것 같은데^ㅠ^.<br />
다른 사람들은 어떻게 풀었는지 코드를 읽어보았는데, 굳이 이중for문을 돌리지 않고 한번 answers를 읽을 때 3명을 모두 비교하여 푼 사람들이 훨씬 많았다. 나는 사람을 기준으로 코드를 작성했다면, 다른 사람들은 문제를 기준으로 푼 것 같다. 그게 더 훨씬 효율성에서 좋은 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[Programmers/프로그래머스] 모의고사 JAVA <a href="https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664">https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 정렬_가장 큰 수: Comparator을 이용한 정렬 구현</title>
	  <link>/blog//algo-prog42746</link>
	  <author></author>
	  <pubDate>2019-11-11T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42746</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42746">https://programmers.co.kr/learn/courses/30/lessons/42746</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>int를 String형으로 변환한다.</li>
  <li>배열에 넣고 내림차순한다.</li>
  <li>그대로 이어붙여서 가장 큰 수를 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numbers</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">numbers</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Comparator</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">answer</span><span class="o">+=</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191111_1.PNG" alt="실행결과" />
실패. 정렬이 제대로 이루어지지 않았다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>내림차순 array에 30 3순으로 들어갔다. “30”&gt;”3”으로 비교했기 때문이다. 30과 3으로 숫자를 만들 때 303&lt;330이므로 array에 3 30순으로 들어가야한다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>Comparator를 이용해 compare을 Override해서 사용한다.</li>
  <li>정렬이 완료되면 순서대로 이어붙인다.</li>
  <li>answer이 0으로 시작하면 0으로만 이루어진 문자열이므로 “0”을 리턴한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numbers</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">numbers</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(){</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">String</span> <span class="n">s1</span><span class="o">,</span> <span class="n">String</span> <span class="n">s2</span><span class="o">){</span>
                <span class="k">return</span> <span class="o">(</span><span class="n">s2</span><span class="o">+</span><span class="n">s1</span><span class="o">).</span><span class="na">compareTo</span><span class="o">(</span><span class="n">s1</span><span class="o">+</span><span class="n">s2</span><span class="o">);</span><span class="c1">//내림차순</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">answer</span><span class="o">+=</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"0"</span><span class="o">)){</span>
            <span class="n">answer</span><span class="o">=</span><span class="s">"0"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>String[] array: 파라미터 numbers를 String 형변환하여 저장한다.</li>
  <li><code class="highlighter-rouge">public int compare(String s1, String s2)</code>: s1과 s2를 조합해 만들 수 있는 두 수를 비교해 큰 수가 왼쪽으로 가도록(우선순위가 높아지도록) 한다. 이 문제에서는 내림차순으로 정렬해야하므로 위와 같이 작성하였다. 오름차순일 경우 (s1+s2).compareTo(s2+s1)이다.</li>
  <li>예시) s1=9, s2=8<br />
s1+s2=98, s2+s1=89</li>
  <li>return (s1+s2).compareTo(s2+s1)인 경우<br />
“98”.compareTo(“89”) =&gt; 양수 =&gt; compare(9,8)이 양수를 리턴하므로 9(s1)가 뒤로 이동한다.</li>
  <li>return (s2+s1).compareTo(s1+s2)인 경우<br />
“89”.compoareTo(“98”) =&gt; 음수 =&gt; compare(9,8)이 음수를 리턴하므로 9(s1)가 앞으로 이동한다.</li>
  <li>compareTo 함수: 비교 정렬할 때 사용한다. 숫자가 작을수록(음수일수록) 우선순위가 높아진다(왼쪽으로 간다).</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">A.compareTo(B)</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">A&lt;B</td>
      <td style="text-align: center">음수</td>
    </tr>
    <tr>
      <td style="text-align: center">A=B</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">A&gt;B</td>
      <td style="text-align: center">양수</td>
    </tr>
  </tbody>
</table>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191111_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>Comparator가 아직 헷갈린다. 그래도 어려운 문제는 아니었다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>헷갈리기 쉬운 “동등비교”와 “정렬” <a href="http://www.nextree.co.kr/p11101/">http://www.nextree.co.kr/p11101/</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 정렬_K번째수</title>
	  <link>/blog//algo-prog42748</link>
	  <author></author>
	  <pubDate>2019-11-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42748</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42748">https://programmers.co.kr/learn/courses/30/lessons/42748</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>commands를 순회하면서 새로 만들 배열의 길이, 범위를 확인한다.</li>
  <li>새로 만든 배열 cutArray에 값을 넣고 sort한다.</li>
  <li>특정 인덱스를 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">commands</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">cutArray</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">start</span><span class="o">,</span><span class="n">end</span><span class="o">,</span><span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">start</span><span class="o">=</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">end</span><span class="o">=</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="n">cutArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">start</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">end</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span><span class="c1">//새 배열 생성</span>
                <span class="n">cutArray</span><span class="o">[</span><span class="n">idx</span><span class="o">]=</span><span class="n">j</span><span class="o">;</span>
                <span class="n">idx</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cutArray</span><span class="o">[</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]];</span>
            <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_4.PNG" alt="실행결과" />
실패. 배열이 인덱스 범위를 초과했다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>문제에서 배열을 1부터 세기 때문에 start와 end에서 1씩 빼줘야한다. 두 번째 for문 범위도 이상하고, j가 아닌 array의 값을 넣어야한다. 배열 정렬도 하지 않았다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>새 배열을 생성한 후 sort한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">commands</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">cutArray</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">start</span><span class="o">,</span><span class="n">end</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">commands</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">start</span><span class="o">=</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]-</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">end</span><span class="o">=</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]-</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">cutArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">cutArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span><span class="c1">//새 배열 생성</span>
                <span class="n">cutArray</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="n">array</span><span class="o">[</span><span class="n">start</span><span class="o">];</span>
                <span class="n">start</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">cutArray</span><span class="o">);</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cutArray</span><span class="o">[</span><span class="n">commands</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]-</span><span class="mi">1</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>int[] cutArray: 조건에 맞게 자른 배열이다. 배열 크기는 변하기 때문에 크기 선언은 for문안에서 한다.</li>
  <li>int start: array의 i번째 인덱스를 저장한다.</li>
  <li>int end: j번째 인덱스를 저장한다. start와 end는 배열을 1부터 세기 때문에 1씩 빼서 0부터 시작하도록 한다.</li>
</ul>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191108_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>쉬운 문제였지만 잔실수가 많았다. 인덱스 번호를 틀린다거나, 정렬을 하지 않았다거나. 이런 실수를 줄일 수 있도록 코드를 바로 작성하기전에 어떻게 구상할지 머릿속으로 정리를 하는 단계를 습관화해야겠다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 힙(Heap)_이중우선순위큐</title>
	  <link>/blog//algo-prog42628</link>
	  <author></author>
	  <pubDate>2019-11-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42628</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42628">https://programmers.co.kr/learn/courses/30/lessons/42628</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>하나는 오름차순, 하나는 내림차순으로 큐를 두 개 사용한다.</li>
  <li>operations를 split()메소드를 이용해 띄어쓰기를 기준으로 나눈다.</li>
  <li>I이면 두 개의 큐에 삽입한다.</li>
  <li>“D 1”은 maxPQ에서 삭제하고, “D -1”은 minPQ에서 삭제한다.</li>
  <li>[maxPQ의 루트, minPQ의 루트]를 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">operations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">minPQ</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">maxPQ</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">word</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">str:</span><span class="n">operations</span><span class="o">){</span>
            <span class="n">word</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"I"</span><span class="o">)){</span>
                <span class="n">minPQ</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
                <span class="n">maxPQ</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"D"</span><span class="o">)){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"1"</span><span class="o">)&amp;&amp;!</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
                    <span class="n">maxPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-1"</span><span class="o">)&amp;&amp;!</span><span class="n">minPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
                    <span class="n">minPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">minPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="n">minPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_2.PNG" alt="실행결과" />
실패.
테스트1에서 실패했다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>똑같은 값을 두 개의 큐에 중복 저장하기 때문에, 삭제할 때 두 큐 모두 삭제해줘야 한다. 위 코드에서는 “D 1”의 경우 maxPQ에서, “D -1”은 minPQ에서만 삭제가 일어나기 때문에 문제가 발생한다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>maxPQ 또는 minPQ에서 삭제할 때, 나머지 큐에서도 동일한 값을 삭제해준다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">operations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">minPQ</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">maxPQ</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">word</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">str:</span><span class="n">operations</span><span class="o">){</span>
            <span class="n">word</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"I"</span><span class="o">)){</span>
                <span class="n">minPQ</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
                <span class="n">maxPQ</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"D"</span><span class="o">)){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"1"</span><span class="o">)&amp;&amp;!</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
                    <span class="n">num</span><span class="o">=</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                    <span class="n">minPQ</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
                <span class="o">}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">word</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"-1"</span><span class="o">)&amp;&amp;!</span><span class="n">minPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
                    <span class="n">num</span><span class="o">=</span><span class="n">minPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                    <span class="n">maxPQ</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">maxPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">minPQ</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="n">minPQ</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>PriorityQueue<Integer> minPQ: 큐를 오름차순으로 정렬한다. 루트에 최솟값이 들어간다.</Integer></li>
  <li>PriorityQueue<Integer> maxPQ: 큐를 내림차순으로 정렬한다. 루트에 최댓값이 들어간다.</Integer></li>
  <li>String[] num: operations을 띄어쓰기를 기준으로 나눈다. num[0]에는 띄어쓰기 왼쪽 값 I 또는 D가 들어가고, num[1]은 띄어쓰기 오른쪽 값, 숫자 또는 1, -1이 저장된다.</li>
  <li>num: 삭제할 때 어떤 숫자가 삭제되는지 리턴받아 나머지 큐에서도 삭제해준다.</li>
</ul>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191108_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>나는 우선순위큐를 두 개 사용하여 문제를 풀었지만, 데크(Deque)를 사용해서도 문제를 풀 수 있을 것 같다. 데크는 앞뒤로 삽입 삭제가 가능하기 때문에 오름차순으로 정렬하면 문제를 쉽게 접근할 수 있지 않을까?</p>

<h3 id="참고">참고</h3>
<ul>
  <li>프로그래머스 알고리즘: 이중 우선순위 큐 (java) <a href="https://jar100.tistory.com/21">https://jar100.tistory.com/21</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 힙(Heap)_디스크 컨트롤러</title>
	  <link>/blog//algo-prog42627</link>
	  <author></author>
	  <pubDate>2019-11-07T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42627</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42627">https://programmers.co.kr/learn/courses/30/lessons/42627</a></p>

<h3 id="테스트케이스-추가">테스트케이스 추가</h3>
<ul>
  <li>참고로 파라미터 jobs는 정렬이 되어있지않다. 이정도는 문제설명에 적어줘야 하는데. 떼잉쯧;</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">jobs(int[][])</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">[[24, 10], [18, 39], [34, 20], [37, 5], [47, 22], [20, 47], [15, 2], [15, 34], [35, 43], [26, 1]]</td>
      <td style="text-align: center">74</td>
    </tr>
    <tr>
      <td style="text-align: center">[[24, 10], [18, 39], [34, 20], [37, 5], [47, 22], [20, 47], [15, 34], [15, 2], [35, 43], [26, 1]]</td>
      <td style="text-align: center">74</td>
    </tr>
  </tbody>
</table>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>소요시간(time)이 작은 순서, 같다면 요청시간(start)이 작은 순서가 우선순위가 높도록 우선순위큐를 생성한다.</li>
  <li>현재 시간(now)보다 요청시간이 같거나 작은 작업을 선택해 요청~종료까지 걸린 시간을 계산한 후 now와 answer을 갱신한다.</li>
  <li>없으면 현재 시간엔 수행할 작업이 없다는 뜻이므로 now++한다.</li>
  <li>계산이 끝나면 작업 갯수만큼 answer을 나눠 평균을 구한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Job</span> <span class="kd">implements</span> <span class="n">Comparable</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;{</span>
    <span class="kt">int</span> <span class="n">start</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">time</span><span class="o">;</span>
    <span class="kd">public</span> <span class="nf">Job</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">,</span> <span class="kt">int</span> <span class="n">t</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">=</span><span class="n">s</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">=</span><span class="n">t</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compareTo</span><span class="o">(</span><span class="n">Job</span> <span class="n">j</span><span class="o">){</span>
        <span class="c1">//소요시간 작은 게 우선순위 높음</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">&lt;</span><span class="n">j</span><span class="o">.</span><span class="na">time</span><span class="o">)</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="c1">//소요시간이 같다면</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">==</span><span class="n">j</span><span class="o">.</span><span class="na">time</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">&lt;</span><span class="n">j</span><span class="o">.</span><span class="na">start</span><span class="o">)</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span><span class="c1">//요청시점 작은게 우선순위 높음</span>
            <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>  
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">jobs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">now</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;</span> <span class="n">pq</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;();</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">jobs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="n">Job</span><span class="o">(</span><span class="n">jobs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span><span class="n">jobs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]));</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">pq</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="n">Job</span> <span class="n">job</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(!</span><span class="n">list</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                <span class="n">job</span><span class="o">=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">job</span><span class="o">.</span><span class="na">start</span><span class="o">&lt;=</span><span class="n">now</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">+=</span><span class="n">now</span><span class="o">+</span><span class="n">job</span><span class="o">.</span><span class="na">time</span><span class="o">-</span><span class="n">job</span><span class="o">.</span><span class="na">start</span><span class="o">;</span>
                    <span class="n">now</span><span class="o">+=</span><span class="n">job</span><span class="o">.</span><span class="na">time</span><span class="o">;</span>
                    <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">job</span><span class="o">);</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">){</span>
                    <span class="n">now</span><span class="o">++;</span>
                <span class="o">}</span>                
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">/=</span><span class="n">jobs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191107_1.PNG" alt="실행결과" />
실패.
출력문을 찍은 결과 list에 모든 값들이 들어가지 않았다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>두 번째 for문에서 i의 범위가 pq.size()인데, pq는 팝하면서 제거되어 사이즈가 계속 변하므로 적합하지 않다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>pq.size()가 아닌 고정값 jobs.length로 for문 조건을 변경한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Job</span> <span class="kd">implements</span> <span class="n">Comparable</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;{</span>
    <span class="kt">int</span> <span class="n">start</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">time</span><span class="o">;</span>
    <span class="kd">public</span> <span class="nf">Job</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">,</span> <span class="kt">int</span> <span class="n">t</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">=</span><span class="n">s</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">=</span><span class="n">t</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compareTo</span><span class="o">(</span><span class="n">Job</span> <span class="n">j</span><span class="o">){</span>
        <span class="c1">//소요시간 작은 게 우선순위 높음</span>
        <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">&lt;</span><span class="n">j</span><span class="o">.</span><span class="na">time</span><span class="o">)</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="c1">//소요시간이 같다면</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">time</span><span class="o">==</span><span class="n">j</span><span class="o">.</span><span class="na">time</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">start</span><span class="o">&lt;</span><span class="n">j</span><span class="o">.</span><span class="na">start</span><span class="o">)</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span><span class="c1">//요청시점 작은게 우선순위 높음</span>
            <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>  
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">jobs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">now</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;</span> <span class="n">pq</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;();</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Job</span><span class="o">&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">jobs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="n">Job</span><span class="o">(</span><span class="n">jobs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">],</span><span class="n">jobs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]));</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">jobs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="n">Job</span> <span class="n">job</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(!</span><span class="n">list</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
                <span class="n">job</span><span class="o">=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">job</span><span class="o">.</span><span class="na">start</span><span class="o">&lt;=</span><span class="n">now</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">+=</span><span class="n">now</span><span class="o">+</span><span class="n">job</span><span class="o">.</span><span class="na">time</span><span class="o">-</span><span class="n">job</span><span class="o">.</span><span class="na">start</span><span class="o">;</span>
                    <span class="n">now</span><span class="o">+=</span><span class="n">job</span><span class="o">.</span><span class="na">time</span><span class="o">;</span>
                    <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">job</span><span class="o">);</span>
                    <span class="k">break</span><span class="o">;</span><span class="c1">//작업이 완료되면 break로 다시 for문을 처음부터 방문하여 놓치는 작업이 없도록 한다</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">){</span>
                    <span class="n">now</span><span class="o">++;</span>
                <span class="o">}</span>                
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">/=</span><span class="n">jobs</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>PriorityQueue<Job> pq: 소요시간이 작은 순서, 같다면 요청시간이 작은 순서로 정렬한다.</Job></li>
  <li>ArrayList<Job> list: pq를 arraylist에 저장하여 코드에 사용한다. 같은 데이터를 가지고 있는데 굳이 arraylist에 저장하여 사용하는 이유는, pq가 요청시간을 기준으로 정렬된 것이 아니기 때문이다. 현재 시간(now)에 따라 이전~현재까지의 작업들을 모두 확인해야하는데, 우선순위큐로는 정렬된 루트노드의 값만 가져올 수 있고 다음 노드를 방문하기 위해서는 무조건 poll해야한다. 하지만 미래의 작업이 루트로 갈 수 있는데, 이때는 삭제하면 안되므로 arrayList를 이용해 값을 삭제하지 않아도 다음 값을 찾을 수 있게 한다.</Job></li>
</ul>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191107_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>Compare을 Override하는 법에 대해 배울 수 있었다. 처음에는 jobs 배열을 요청시간 오름차순으로 정렬해서 사용하고 싶었는데, Array.sort()나 Collections.sort()를 사용하려고 하니 Override한 compare를 쓰는 바람에 애먹었다. 결국에는 배열을 정리할 필요 없이 처음부터 우선순위큐를 사용했는데, 이건 다른 사람 코드를 보고 나도 따라한 것이다. 나도 이렇게 바로 떠오르면 좋으련만.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스][힙(heap)]디스크 컨트롤러 <a href="https://jee-goo.tistory.com/entry/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%ED%95%B4%EC%8B%9C%EB%94%94%EC%8A%A4%ED%81%AC-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EB%8F%84%EC%9B%80%EB%A7%90">https://jee-goo.tistory.com/entry/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4%ED%95%B4%EC%8B%9C%EB%94%94%EC%8A%A4%ED%81%AC-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EB%8F%84%EC%9B%80%EB%A7%90</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 힙(Heap)_라면공장</title>
	  <link>/blog//algo-prog42629</link>
	  <author></author>
	  <pubDate>2019-11-06T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42629</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42629">https://programmers.co.kr/learn/courses/30/lessons/42629</a></p>

<p>이 문제는 정말 골치 아픈 문제였다. 코드가 아예 잘못된게 아니라 특정 테스트케이스만 통과하지 못해서 더 포기할 수 없었다. 개인적으로 포인트를 차감하는 방법으로 테스트케이스를 볼 수 있었으면 좋겠다. 아직도 내 코드가 틀린 이유를 모르겠으며, 성공한 다른 사람들의 코드와 차이점이 무엇인지 알 수 없다. 문제 해결을 위해 도전한 코드들을 모두 리뷰하기엔 너무 많아서 제일 최근 것 하나만 작성해야겠다.<br />
참고로 아래 테스트케이스를 추가하여 문제를 풀 것을 강력 추천한다. 테스트케이스를 생각하는 것도 골치 아파 죽는 줄 알았다.<br />
마지막 케이스도 내가 생각할 때에는 4를 리턴해야 할 것 같은데 내 코드와 다른 사람들 코드는 5를 리턴한다. 그래서 일단은 5라고 적어놓는다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">stock</th>
      <th style="text-align: center">dates</th>
      <th style="text-align: center">supplies</th>
      <th style="text-align: center">k</th>
      <th style="text-align: center">result</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">[1,2,3,4]</td>
      <td style="text-align: center">[10,40,30,20]</td>
      <td style="text-align: center">100</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">[1,2,3,4,5]</td>
      <td style="text-align: center">[1,1,1,1,25]</td>
      <td style="text-align: center">30</td>
      <td style="text-align: center">1</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">[1,2,3,4,5]</td>
      <td style="text-align: center">[1,1,1,1,25]</td>
      <td style="text-align: center">30</td>
      <td style="text-align: center">5</td>
    </tr>
  </tbody>
</table>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>오늘(이전 포함) 받을 수 있는 공급이 있다면 큐에 저장한다.</li>
  <li>dates의 값이 미래거나 마지막 공급까지 다 받은 경우라면 day에 오늘 날짜를 저장한다.</li>
  <li>큐에 값이 있고 재고가 더 필요하다면 큐에서 뽑아 stock에 추가하고 answer을 증가한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">stock</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dates</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">supplies</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">pq</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">day</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">day</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">dates</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">stock</span><span class="o">&gt;=</span><span class="n">dates</span><span class="o">[</span><span class="n">i</span><span class="o">]){</span><span class="c1">//이전날들값은 큐에 추가</span>
                    <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">supplies</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">stock</span><span class="o">&lt;</span><span class="n">dates</span><span class="o">[</span><span class="n">i</span><span class="o">]||</span><span class="n">i</span><span class="o">==</span><span class="n">dates</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//미래 또는 다넣음</span>
                    <span class="n">day</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">pq</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()&amp;&amp;</span><span class="n">stock</span><span class="o">!=</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="n">stock</span><span class="o">&lt;</span><span class="n">k</span><span class="o">){</span>
                <span class="n">stock</span><span class="o">+=</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="n">answer</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191106_1.PNG" alt="실행결과" />
실패. 테스트3, 5에서 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>알 수 없다. 이젠 지쳤다. 다른 사람 코드를 참고해야 할 때다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>원래 공장으로부터 공급받는 k 이전까지 체크한다.</li>
  <li>배열 순회에 사용할 idx가 dates 인덱스 범위에 만족하고, 오늘 받을 수 있는 공급이 있다면 큐에 삽입한다. idx++한다.</li>
  <li>만약 오늘이 stock을 다 쓰는 날이라면 큐에서 pop하여 stock에 추가하고 answer++한다.</li>
  <li>하루가 지나갔음을 나타내기 위해 day++한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">stock</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dates</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">supplies</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">pq</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(</span><span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="kt">int</span> <span class="n">day</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">day</span><span class="o">&lt;</span><span class="n">k</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">idx</span><span class="o">&lt;</span><span class="n">dates</span><span class="o">.</span><span class="na">length</span><span class="o">&amp;&amp;</span><span class="n">day</span><span class="o">==</span><span class="n">dates</span><span class="o">[</span><span class="n">idx</span><span class="o">]){</span>
                <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">supplies</span><span class="o">[</span><span class="n">idx</span><span class="o">]);</span>
                <span class="n">idx</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">day</span><span class="o">==</span><span class="n">stock</span><span class="o">){</span>
                <span class="n">stock</span><span class="o">+=</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="n">answer</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="n">day</span><span class="o">++;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191106_2.PNG" alt="실행결과" />
행복하지 않은 성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>이해할 수 없다. 컴퓨터의 세계는 이해할 수 없어T_T</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 스택/큐_주식가격</title>
	  <link>/blog//algo-prog42584</link>
	  <author></author>
	  <pubDate>2019-11-04T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42584</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42584">https://programmers.co.kr/learn/courses/30/lessons/42584</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>이중 for문을 사용하여 i를 기준으로 두고, j로 뒷 원소들과 비교한다.</li>
  <li>i보다 같거나 큰 원소들의 갯수를 세서 answer에 저장한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">prices</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">prices</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;=</span><span class="n">prices</span><span class="o">[</span><span class="n">j</span><span class="o">]){</span>
                    <span class="n">cnt</span><span class="o">++;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>   
            <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191102_4.PNG" alt="실행결과" />
실패. 테스트케이스만 통과하고 실제 검사에서는 모두 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>테스트케이스만 생각하고 원소에 작은 값이 나올 경우를 생각하지 않았다. 아래의 케이스도 생각해준다.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">prices</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">[4,2,3,2,3]</td>
      <td style="text-align: center">[1,3,1,1,0]</td>
    </tr>
  </tbody>
</table>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>이중for문을 돌다가 i보다 큰 j를 발견하면 그 뒤는 볼 필요도 없으므로 answer[i]=j-i를 넣고 break한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">prices</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">prices</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">prices</span><span class="o">[</span><span class="n">j</span><span class="o">]){</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">j</span><span class="o">-</span><span class="n">i</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">==</span><span class="n">prices</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">j</span><span class="o">-</span><span class="n">i</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>라인12: i보다 큰 j를 발견했다면 유지한 초를 계산(j-i)후, break문으로 다음 i로 넘어간다.</li>
  <li>라인16: 마지막 j까지 체크했지만 i보다 큰 j를 발견하지 못했다면 유지한 초를 계산한다. 해당 if문은 i가 마지막 j까지 순회를 비교를 끝냈을 경우에만 answer에 값을 넣을 수 있도록 하였다.</li>
</ul>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191104_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>스택, 큐 문제지만 배열을 이용해서 쉽게 풀 수 있었다. 여담으로 코드에 System 출력문을 써놓고 돌렸더니 효율성에서 죄다 실패가 떴었다. 출력문을 지우니 모두 성공하긴 했는데, 하마터면 더 좋은 효율성을 찾아 머리를 쥐어짤 뻔했다. 휴;</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 힙(Heap)_더 맵게</title>
	  <link>/blog//algo-prog42626</link>
	  <author></author>
	  <pubDate>2019-11-04T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42626</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42626">https://programmers.co.kr/learn/courses/30/lessons/42626</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>가장 맵지 않은, scoville이 낮은 원소를 사용하므로 우선순위가 낮은 순서로 정렬, 리턴하는 우선순위큐를 사용한다.</li>
  <li>하나라도 K보다 작다면, 주어진 공식을 이용해 새 조합을 만든다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.PriorityQueue</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">scoville</span><span class="o">,</span> <span class="kt">int</span> <span class="n">K</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">;</span>
         <span class="n">PriorityQueue</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">pq</span><span class="o">=</span><span class="k">new</span> <span class="n">PriorityQueue</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">i:</span><span class="n">scoville</span><span class="o">){</span>
             <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
         <span class="o">}</span>
         <span class="k">while</span><span class="o">(</span><span class="n">pq</span><span class="o">.</span><span class="na">peek</span><span class="o">()&lt;</span><span class="n">K</span><span class="o">){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">pq</span><span class="o">.</span><span class="na">size</span><span class="o">()==</span><span class="mi">1</span><span class="o">){</span>
                 <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
             <span class="o">}</span>
             <span class="k">else</span><span class="o">{</span>
                 <span class="n">a</span><span class="o">=</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                 <span class="n">b</span><span class="o">=</span><span class="n">pq</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                 <span class="n">pq</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">a</span><span class="o">+(</span><span class="n">b</span><span class="o">*</span><span class="mi">2</span><span class="o">));</span>
                 <span class="n">answer</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>PriorityQueue<Integer> pq: 스코빌 지수가 낮은 순으로 뽑을 수 있게 우선순위큐를 사용한다.</Integer></li>
</ul>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191104_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>우선순위큐를 사용할 기회가 별로 없었는데, 이번을 통해 사용하는 법을 배워야겠다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 스택/큐_쇠막대기</title>
	  <link>/blog//algo-prog42585</link>
	  <author></author>
	  <pubDate>2019-11-02T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42585</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42585">https://programmers.co.kr/learn/courses/30/lessons/42585</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>()을 사용하는 문제이므로 스택을 이용한다.</li>
  <li>(은 스택에 넣는다.</li>
  <li>)인 경우 앞이 (라면 레이저이다.</li>
  <li>))이라면 닫는 괄호이다.</li>
</ol>

<p>i) ()인 경우.
<img src="./assets/images/191102_2.png" alt="설명1" />
이 경우는 레이저이다. 위와 같이 ()를 제외한 여는 괄호 갯수 만큼 막대기가 생긴다.</p>

<p>ii) ))인 경우.
<img src="./assets/images/191102_3.png" alt="설명1" />
쇠막대기의 끝을 나타낸다. 이 경우는 항상 1이다. 끝난 쇠막대기는 하나밖에 없기 때문이다.</p>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Stack</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">arrangement</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;();</span>
        <span class="kt">char</span> <span class="n">ch</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">arrangement</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">ch</span><span class="o">=</span><span class="n">arrangement</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'('</span><span class="o">){</span>
                <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()&amp;&amp;</span><span class="n">ch</span><span class="o">==</span><span class="sc">')'</span><span class="o">){</span>
                <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="k">if</span><span class="o">(</span><span class="n">arrangement</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'('</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">+=</span><span class="n">st</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
                <span class="o">}</span>  
                <span class="k">else</span><span class="o">{</span>
                    <span class="n">answer</span><span class="o">++;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>Stack<Character> st: arrangement를 char형태로 하나씩 넣는다. 경험상 괄호 문제는 스택으로 푸는 경우가 대부분이다.</Character></li>
  <li>char ch: String형태의 arrangement를 문자 하나씩 받아와 코드를 진행한다.</li>
</ul>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191102_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>처음 문제를 접했을 때는 그림이 복잡해보여서 어려울 것이라고 생각했는데, 이해만 하면 간단한 문제였다. 앞으로는 자신감을 갖고 문제를 풀어야겠다!</p>

	  ]]></description>
	</item>


</channel>
</rss>
