<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[Algorithm] 플로이드 와샬 알고리즘(Floyd-Warshall Algorithm)</title>
	  <link>/blog//algo-floyd</link>
	  <author></author>
	  <pubDate>2019-12-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-floyd</guid>
	  <description><![CDATA[
	     <h2 id="플로이드-와샬-알고리즘"><span style="color:navy">플로이드 와샬 알고리즘</span></h2>

<h3 id="1-기본-개념">1. 기본 개념</h3>
<ul>
  <li>그래프에서 모든 꼭짓점 사이의 최단경로의 거리를 구하는 알고리즘이다.</li>
  <li>최단 경로를 찾기에 좋은 알고리즘이다.</li>
  <li>O(n^3), 시간이 많이 소요된다는 단점이 있다.</li>
</ul>

<h3 id="2-초기화">2. 초기화</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">i/j</th>
      <th style="text-align: center">1</th>
      <th style="text-align: center">2</th>
      <th style="text-align: center">3</th>
      <th style="text-align: center">4</th>
      <th style="text-align: center">5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">INF</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">INF</td>
      <td style="text-align: center">0</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>i==j인 곳은 0으로, 나머지는 INF(적당히 큰 값)으로 초기화한다.</li>
  <li>이때 INF가 Integer.MAX_VALUE일 경우, 두 값을 더해서 int형에 저장한다면 오버플로우가 발생하므로 INF는 적당히 큰 값으로 초기화하는 것이 좋다(ex. 987654321).</li>
</ul>

<h3 id="3-코드">3. 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="cm">/*...*/</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">k</span><span class="o">++){</span><span class="c1">//거쳐가는 꼭짓점</span>
  <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="c1">//출발하는 꼭짓점</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span><span class="c1">//도착하는 꼭짓점</span>
      <span class="k">if</span><span class="o">(</span><span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]&gt;</span><span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]+</span><span class="n">d</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">]){</span><span class="c1">//더 짧은 경로 찾았다면</span>
        <span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">d</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]+</span><span class="n">d</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
      <span class="o">}</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
<span class="cm">/*...*/</span>
</code></pre></div></div>

<h3 id="4-결과">4. 결과</h3>
<ul>
  <li>0과 INF를 제외한 값들이 최단 경로이다.</li>
</ul>

<h3 id="참고">참고</h3>
<ul>
  <li>플로이드-워셜 알고리즘(Floyd-Warshall Algorithm) <a href="https://hsp1116.tistory.com/45">https://hsp1116.tistory.com/45</a></li>
  <li>플로이드 와샬 알고리즘 :: 마이구미 <a href="https://mygumi.tistory.com/110">https://mygumi.tistory.com/110</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
