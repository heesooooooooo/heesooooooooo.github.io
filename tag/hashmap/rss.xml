<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link></link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 2019 KAKAO BLIND RECRUITMENT: 오픈채팅방</title>
	  <link>/blog//algo-prog42888</link>
	  <author></author>
	  <pubDate>2020-08-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42888</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42888">https://programmers.co.kr/learn/courses/30/lessons/42888</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>record를 한 번 읽으면서 HashMap에 유저 아이디와 닉네임을 저장한다.</li>
  <li>record를 다시 읽으면서 change가 아니면 result 조건에 맞게 answer에 저장한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">record</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">names</span><span class="o">=</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
		<span class="kt">int</span> <span class="n">size</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">str:</span><span class="n">record</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
			<span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Enter"</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">names</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
				<span class="n">size</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Leave"</span><span class="o">))</span> <span class="o">{</span>
				<span class="n">size</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Change"</span><span class="o">)){</span>
				<span class="n">names</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="mi">2</span><span class="o">]);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="n">String</span><span class="o">[]</span> <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">size</span><span class="o">];</span>
		<span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">str:</span> <span class="n">record</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
			<span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Change"</span><span class="o">))</span> <span class="k">continue</span><span class="o">;</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Enter"</span><span class="o">))</span> 
				<span class="n">answer</span><span class="o">[</span><span class="n">idx</span><span class="o">++]=</span><span class="n">names</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">])+</span><span class="s">"님이 들어왔습니다."</span><span class="o">;</span>			
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="s">"Leave"</span><span class="o">))</span> 
				<span class="n">answer</span><span class="o">[</span><span class="n">idx</span><span class="o">++]=</span><span class="n">names</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">])+</span><span class="s">"님이 나갔습니다."</span><span class="o">;</span>
			
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200819_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">HashMap에 유저 아이디와 닉네임을 저장한다</span></strong>
    <ul>
      <li>HashMap에 저장하면 탐색시간이 빠르고, 중복되는 key는 저장되지 않으므로 해당 문제에 적합하다.</li>
      <li>“Enter”이면 해당 아이디와 닉네임을 해쉬맵에 저장하고, “Leave”면 패스, “Change”면 아이디에 대한 닉네임을 변경한다.</li>
      <li>record의 문자열은 띄워쓰기를 기준으로 단어, 아이디, 닉네임이 들어오므로 split(“ “)으로 문자열을 쪼갠 후 사용한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">다시 record를 읽으면서 answer에 메시지를 저장한다</span></strong>
    <ul>
      <li>“Change”일 때에는 메시지가 없으므로 패스한다.</li>
      <li>“Enter”, “Leave”인 경우에 해쉬맵에서 아이디에 따른 닉네임을 찾아 조건에 맞게 메시지를 answer에 저장한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>


	  ]]></description>
	</item>


</channel>
</rss>
