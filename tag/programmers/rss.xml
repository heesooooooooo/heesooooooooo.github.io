<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link></link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 2017 팁스다운: 예상 대진표</title>
	  <link>/blog//algo-prog12985</link>
	  <author></author>
	  <pubDate>2020-11-14T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12985</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12985">https://programmers.co.kr/learn/courses/30/lessons/12985</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>x가 짝수라면 다음 라운드에서 x는 x/2 번째가 된다.</li>
  <li>홀수라면 x/2+1가 된다.</li>
  <li>a, b가 같아질 때까지 진행한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="kd">class</span> <span class="nc">Solution</span>
<span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span>
    <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">a</span><span class="o">!=</span><span class="n">b</span><span class="o">){</span>
            <span class="n">a</span><span class="o">=</span><span class="n">solve</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
            <span class="n">b</span><span class="o">=</span><span class="n">solve</span><span class="o">(</span><span class="n">b</span><span class="o">);</span>
            <span class="n">answer</span><span class="o">++;</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solve</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">x</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="n">x</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201114_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">a, b가 다음 라운드에서 몇 번째가 되는지 예상한다.</span></strong>
    <ul>
      <li>짝수라면 다음 라운드에서는 x/2, 홀수라면 x/2+1 번째가 된다.</li>
      <li>둘이 같아질 때까지 반복한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] Summer/Winter Coding(~2018) : 점프와 순간 이동</title>
	  <link>/blog//algo-prog12980</link>
	  <author></author>
	  <pubDate>2020-11-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12980</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12980">https://programmers.co.kr/learn/courses/30/lessons/12980</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>Top-Down 형식으로 구한다.</li>
  <li>n이 짝수면 순간이동, 홀수면 점프한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">ans</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">n</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">n</span><span class="o">/=</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 순간이동</span>
            <span class="k">else</span><span class="o">{</span> <span class="c1">// 점프</span>
                <span class="n">n</span><span class="o">--;</span>
                <span class="n">ans</span><span class="o">++;</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">ans</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201109_1.PNG" alt="실행결과" />
🤟 성공 🤟<br />
DP로 문제를 해결하였으나 효율성에서 메모리, 시간 초과가 발생했다. input이 10억 이하여서 그런 것 같다. 그래서 변수 3개를 이용하여 문제를 풀려고 했으나, 잘 되지 않았다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Top-Down 형식으로 구한다</span></strong>
    <ul>
      <li>1에서 n까지 가는 것이 아니라, 반대로 생각한다.</li>
      <li>n에서 1까지 가야하므로 while문은 n==0이 될 때까지 반복한다.</li>
      <li>n이 짝수이면 순간이동하는 것이 유리하므로 n/2위치로 간다. (n=n/2)</li>
      <li>홀수라면 한 칸 앞으로 간다. (n=n-1)</li>
      <li>점프할 때만 건전지를 소모하므로 ans++한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스] 점프와 순간 이동 (Java) <a href="https://velog.io/@hyeon930/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%A0%90%ED%94%84%EC%99%80-%EC%88%9C%EA%B0%84-%EC%9D%B4%EB%8F%99-Java">https://velog.io/@hyeon930/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%A0%90%ED%94%84%EC%99%80-%EC%88%9C%EA%B0%84-%EC%9D%B4%EB%8F%99-Java</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] Summer/Winter Coding(~2018) : 영어 끝말잇기</title>
	  <link>/blog//algo-prog12981</link>
	  <author></author>
	  <pubDate>2020-11-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12981</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12981">https://programmers.co.kr/learn/courses/30/lessons/12981</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>문제대로 구현한다.</li>
  <li>단어 중복 체크는 HashSet을 이용한다.</li>
  <li>words[i-1]의 마지막 문자와 words[i]의 시작 단어가 같아야 한다.</li>
  <li>틀렸다면, 인덱스를 통해 누가 틀렸는지, 몇 번째 회전인지 알아낸다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="n">String</span><span class="o">[]</span> <span class="n">words</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">};</span>
        <span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">words</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">set</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span> <span class="c1">// 사용 단어 저장</span>
        
        <span class="kt">char</span> <span class="n">prev</span><span class="o">=</span><span class="n">words</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="c1">// 2번째 단어부터 탐색</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">len</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="c1">// 앞 단어의 마지막 문자로 시작하지 않거나 이미 말한 단어라면 종료</span>
            <span class="k">if</span><span class="o">(</span><span class="n">prev</span><span class="o">!=</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">||</span> <span class="n">set</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">])){</span>
                <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">i</span><span class="o">%</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
                <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="n">i</span><span class="o">/</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="c1">// 아니라면, 다음 체크를 위해 prev, set 설정</span>
            <span class="n">prev</span><span class="o">=</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
            <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">words</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201109_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">단어의 중복 체크는 HashSet을 이용한다</span></strong>
    <ul>
      <li>따라서 올바른 단어라면 set에 넣어 뒤에서 중복 체크를 확인할 수 있게 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">앞 단어와 끝말잇기 조건에 맞는지 확인한다</span></strong>
    <ul>
      <li>char prev를 두어 앞 단어의 마지막 문자를 저장한다.</li>
      <li>일단 0번째 시작 단어는 앞문자가 없으므로 바로 prev와 set에 넣는다.</li>
      <li>1번째부터 앞 문자와 체크한다. 앞 단어의 끝 문자 prev와 나(i)의 시작 단어가 다르거나 set에 있는 단어라면 answer에 값 넣고 종료한다.</li>
      <li>answer[0]은 탈락자 번호이다. i%3+1을 넣으면 된다.</li>
      <li>answer[1]은 몇 번째 차례에서 탈락했는지이다. i/3+1이다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: N개의 최소공배수</title>
	  <link>/blog//algo-prog12953</link>
	  <author></author>
	  <pubDate>2020-11-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12953</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12953">https://programmers.co.kr/learn/courses/30/lessons/12953</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>LCM(a,b)=a*b/GCD(a,b)이다.</li>
  <li>answer에 현재까지의 lcm을 저장하고, answer=lcm(answer, arr[i]) 방식으로 구현한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arr</span><span class="o">);</span> 
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">answer</span><span class="o">=</span><span class="n">lcm</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">answer</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">b</span><span class="o">;</span>
        <span class="k">else</span> <span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">);</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">lcm</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">){</span>
        <span class="k">return</span> <span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">/</span><span class="n">gcd</span><span class="o">(</span><span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201108_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">answer=LCM(answer, arr[i]) 방식으로 답을 찾는다</span></strong>
    <ul>
      <li>answer을 arr[0]으로 초기화하고, i=1부터 탐색한다.</li>
      <li>gcd(a, b)에서 파라미터 a&gt;b이어야 하기 때문에 Array.sort()로 오름차순으로 정렬하였다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2017 팁스타운: 짝지어 제거하기</title>
	  <link>/blog//algo-prog12973</link>
	  <author></author>
	  <pubDate>2020-11-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12973</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12973">https://programmers.co.kr/learn/courses/30/lessons/12973</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>Stack을 이용한다.</li>
  <li>스택이 비어있으면 push</li>
  <li>top과 현재 문자(ch)같으면 pop</li>
  <li>다르면 push</li>
  <li>마지막에 스택이 비어있으면 성공, 아니면 실패이다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span>
<span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span>
    <span class="o">{</span>
        <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">char</span> <span class="nl">ch:</span><span class="n">s</span><span class="o">.</span><span class="na">toCharArray</span><span class="o">()){</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">st</span><span class="o">.</span><span class="na">peek</span><span class="o">()==</span><span class="n">ch</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
            <span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()?</span> <span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201108_2.PNG" alt="실행결과" />
🤟 성공 🤟<br />
문제 설명 그대로 StringBuilder를 이용하여 코드를 짰더니 실패+시간 초과가 떴다.<br />
그런데 스택 사용이라니 세넓코잘많🤦‍♀️🤦‍♀️</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Stack을 이용한다</span></strong>
    <ul>
      <li>문자 비교는 최근 값(내 주변 값)과 이루어지므로 스택을 사용하면 편리하다.</li>
      <li>top은 내(ch) 앞에서 삭제되지 못한 문자가 되므로 만약 ch가 짝지어 제거되려면 top과 같거다 ch+1과 같아야 한다.</li>
      <li>top과 같다면 짝이므로 pop, 아니라면 스택 top이 되어 다음 ch+1과 비교한다.</li>
      <li>for문 수행 후 스택이 비어있다면 문자열 제거 성공이므로 1을, 아니라면 0을 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스, 자바] 짝지어 제거하기 - 스택 <a href="https://lkhlkh23.tistory.com/148">https://lkhlkh23.tistory.com/148</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2020 카카오 인턴십: 수식 최대화</title>
	  <link>/blog//algo-prog67257</link>
	  <author></author>
	  <pubDate>2020-11-07T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog67257</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/67257">https://programmers.co.kr/learn/courses/30/lessons/67257</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>연산자의 우선순위 설정을 위해 순열을 DFS로 구현한다. 완성된 우선순위는 HashMap&lt;Character, Integer&gt;에 저장한다.</li>
  <li>우선순위에 맞춰 식을 후위식으로 바꾼다. 숫자는 StringBuilder, 연산자는 Stack을 이용하여 최종 식을 ArrayList<String>형에 넣는다.</String></li>
  <li>list를 뽑으면서 후위식을 계산한다. 숫자를 Stack에 저장하여 값을 계산한다.</li>
  <li>마지막 Stack에 남아있는 값이 연산 결과이다. 이들의 절댓값 중 가장 큰 값을 answer로 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kt">char</span><span class="o">[]</span> <span class="n">oper</span><span class="o">={</span><span class="sc">'+'</span><span class="o">,</span><span class="sc">'-'</span><span class="o">,</span><span class="sc">'*'</span><span class="o">};</span>
    <span class="kt">boolean</span><span class="o">[]</span> <span class="n">visit</span><span class="o">;</span>
    <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">;</span>
    <span class="kt">long</span> <span class="n">answer</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">expression</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">visit</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
        <span class="n">map</span><span class="o">=</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">perm</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">expression</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">perm</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">,</span> <span class="n">String</span> <span class="n">exp</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">idx</span><span class="o">==</span><span class="mi">3</span><span class="o">){</span> <span class="c1">// 우선순위 세팅 완료</span>
            <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="n">postfix</span><span class="o">(</span><span class="n">exp</span><span class="o">);</span> <span class="c1">// 우선순위에 맞춰 후위식 변환</span>
            <span class="kt">long</span> <span class="n">ret</span><span class="o">=</span><span class="n">calculate</span><span class="o">(</span><span class="n">list</span><span class="o">);</span> <span class="c1">// 결과 값</span>
            <span class="n">answer</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span> <span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">ret</span><span class="o">));</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span> <span class="c1">// 이미 사용한 연산자</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span> <span class="c1">// i를 idx번째 우선순위로 사용</span>
            <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">oper</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">idx</span><span class="o">);</span>
            <span class="n">perm</span><span class="o">(</span><span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">exp</span><span class="o">);</span> <span class="c1">// idx+1번째 우선순위 세팅</span>
            <span class="n">visit</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span> <span class="c1">// i를 idx번째로 사용하지 않는 경우</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">calculate</span><span class="o">(</span><span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">){</span>
        <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Long</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span> <span class="c1">// 숫자 저장</span>
        <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">s:</span><span class="n">list</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"+"</span><span class="o">)){</span>
                <span class="kt">long</span> <span class="n">b</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="kt">long</span> <span class="n">a</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"-"</span><span class="o">)){</span>
                <span class="kt">long</span> <span class="n">b</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="kt">long</span> <span class="n">a</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">a</span><span class="o">-</span><span class="n">b</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"*"</span><span class="o">)){</span>
                <span class="kt">long</span> <span class="n">b</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="kt">long</span> <span class="n">a</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
                <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">s</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span> <span class="c1">// stack에 남아있는 마지막 값이 결과값</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">postfix</span><span class="o">(</span><span class="n">String</span> <span class="n">exp</span><span class="o">){</span>
        <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">result</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span> <span class="c1">// 후위식</span>
        <span class="n">StringBuilder</span> <span class="n">num</span><span class="o">=</span><span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span> <span class="c1">// 숫자</span>
        <span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span> <span class="c1">// 연산자 저장</span>
        
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">exp</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
            <span class="kt">char</span> <span class="n">ch</span><span class="o">=</span><span class="n">exp</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'+'</span> <span class="o">||</span> <span class="n">ch</span><span class="o">==</span><span class="sc">'-'</span> <span class="o">||</span> <span class="n">ch</span><span class="o">==</span><span class="sc">'*'</span><span class="o">){</span> <span class="c1">// 연산자인 경우</span>
                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span> <span class="c1">// 현재까지의 숫자를 result에 저장</span>
                <span class="n">num</span><span class="o">.</span><span class="na">setLength</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span> <span class="c1">// 다음 숫자 만들기 위해 초기화</span>
                <span class="c1">// 후위식 코드</span>
                <span class="k">while</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">peek</span><span class="o">())&gt;=</span><span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">ch</span><span class="o">))</span>
                    <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">()+</span><span class="s">""</span><span class="o">);</span>
                <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="n">num</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">ch</span><span class="o">);</span> <span class="c1">// 숫자인 경우</span>
        <span class="o">}</span>
        
        <span class="c1">// 아직 result에 저장되지 못한 값들 체크</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">length</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>        
        <span class="k">while</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
            <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">()+</span><span class="s">""</span><span class="o">);</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201107_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">연산자의 우선순위를 정한다</span></strong>
    <ul>
      <li>우선순위는 HashMap&lt;Character, Integer&gt; 형으로 저장하여 탐색하기 쉽도록 한다.</li>
      <li>우선순위는 순열을 이용한다(DFS).</li>
      <li>perm()의 파라미터 idx는 우선순위를 뜻한다. 숫자가 클수록 우선순위가 높다.</li>
      <li>idx==3이면 우선순위 세팅이 끝난 것이므로, 이에 맞춰 후위식을 만들고 계산한 값을 리턴받아 answer과 비교하여 조건에 맞게 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">후위식으로 변환한다</span></strong>
    <ul>
      <li>우선순위에 따라 만들어지는 후위식이 모두 다르다는 것을 조심해야 한다.</li>
      <li>String exp를 charAt()하여 한 문자씩 뽑을 것이기 때문에 두 자리 이상의 숫자는 잘릴 수 있다. 따라서 StringBuilder num을 이용하여 숫자는 따로 연결해줘야한다.</li>
      <li>charAt(i)가 연산자 중 하나라면 지금까지 만들어 놓았던 num을 result에 넣는다. 그리고 다음 사용을 위해 초기화한다.</li>
      <li>연산자는 스택의 top을 확인한다. top 우선순위&lt;내(ch) 우선순위여야 스택에 push할 수 있다.</li>
      <li>아니라면, 조건에 만족할 때까지 top을 pop한다. pop한 값은 result에 넣는다.</li>
      <li>for문 순회가 끝나면 num, st을 확인하여 아직 result에 저장되지 못한 값이 있는지 확인해야 한다.</li>
      <li>후위식은 연산자가 끝에 있는 식이므로, 숫자를 먼저 list에 넣고, 그 다음 연산자 스택을 확인한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">식을 계산한다</span></strong>
    <ul>
      <li>일단 연산자가 나오기 전까지는 숫자를 따로 저장해두어야 한다. 또한 연산자 이전의 두 값을 뽑아야 하기 때문에 Stack을 쓴다.</li>
      <li>숫자면 stack에 push, 연산자라면 스택의 두 값을 꺼내 알맞게 계산한 후 다시 스택에 넣는다.</li>
      <li>마지막에 스택에 남아있는 값이 최종값이 된다.</li>
      <li>계산할 때 주의해야 할 점은 계산 값이 int형을 벗어날 수 있다는 것이다.</li>
      <li>숫자 자체는 0~999 사이의 값이지만, 이를 더하고 곱하는 과정에서 int형을 벗어날 수 있다. 따라서 이전까지는 int형으로 숫자를 관리했더라도, 계산할 때는 long으로 쓴다.</li>
    </ul>
  </li>
</ol>

<h3 id="5-성능">5. 성능</h3>
<h4 id="시간-복잡도-on">시간 복잡도: O(n)</h4>
<ul>
  <li>perm() O(3!) + postfix() O(n) + calculate() O(n) = O(n)</li>
</ul>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[Programmers] 2020 카카오 인턴십 - 수식 최대화 <a href="https://velog.io/@pandahun/Programmers-2020-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%9D%B8%ED%84%B4%EC%8B%AD-%EC%88%98%EC%8B%9D-%EC%B5%9C%EB%8C%80%ED%99%94">https://velog.io/@pandahun/Programmers-2020-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EC%9D%B8%ED%84%B4%EC%8B%AD-%EC%88%98%EC%8B%9D-%EC%B5%9C%EB%8C%80%ED%99%94</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 연습문제: 행렬의 곱셈</title>
	  <link>/blog//algo-prog12949</link>
	  <author></author>
	  <pubDate>2020-11-06T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog12949</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12949">https://programmers.co.kr/learn/courses/30/lessons/12949</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>행렬의 곱셈을 코드로 구현한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[][]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">arr1</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="n">arr2</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">arr1</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">k</span><span class="o">++){</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]+=</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]*</span><span class="n">arr2</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201106_2.PNG" alt="실행결과" />
🤟 성공 🤟<br />
막상 코드로 구현하려고 하니 어려웠다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">0을 제거한다</span></strong>
    <ul>
      <li>aXb인 행렬 A와 bXc인 행렬 B를 곱한 결과값 행렬 C의 사이즈는 a*c이다.</li>
      <li>C(i,j)=A(i,0)B(0,j)+A(i,1)B(1,j)+…+A(i,b-1)B(b-1,j)과 같다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>(JAVA) 행렬의 곱셈 - 프로그래머스 <a href="https://velog.io/@delay/programmers12949">https://velog.io/@delay/programmers12949</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 월간 코드 챌린지 시즌1: 이진 변환 반복하기</title>
	  <link>/blog//algo-prog70129</link>
	  <author></author>
	  <pubDate>2020-11-06T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog70129</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/70129">https://programmers.co.kr/learn/courses/30/lessons/70129</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>replace()로 0을 제거한다.</li>
  <li>2진수로 변환은 Integer.toBinaryString()을 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="kt">int</span> <span class="n">zero</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(!</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"1"</span><span class="o">)){</span> <span class="c1">// s==1이 될 때까지 반복</span>
            <span class="n">cnt</span><span class="o">++;</span> <span class="c1">// 수행 횟수</span>
            <span class="n">String</span> <span class="n">removeZero</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">"0"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span> <span class="c1">// 0 제거</span>
            <span class="n">zero</span><span class="o">+=</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="n">removeZero</span><span class="o">.</span><span class="na">length</span><span class="o">();</span> <span class="c1">// 삭제한 0 개수 카운트</span>
            <span class="n">s</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">removeZero</span><span class="o">.</span><span class="na">length</span><span class="o">());</span> <span class="c1">// 변경된 문자열 길이를 이진수 변환</span>
        <span class="o">}</span>
        
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
        <span class="n">answer</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
        <span class="n">answer</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="n">zero</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201106_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">0을 제거한다</span></strong>
    <ul>
      <li>제거는 replace()를 이용한다.</li>
      <li>제거된 0의 개수는 원래 s의 길이에서 변경된 removeZero 길이를 뺀 값과 같다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">변경 길이를 2진수로 변환한다</span></strong>
    <ul>
      <li>c는 removeZero.length()와 같다.</li>
      <li>10진수를 2진수 문자열로 변경하는 것은 Integer.toBinaryString()을 이용한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2019 카카오 개발자 겨울 인턴십: 튜플</title>
	  <link>/blog//algo-prog64065</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog64065</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/64065">https://programmers.co.kr/learn/courses/30/lessons/64065</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>s안의 중괄호를 없애서 배열에 넣는다.</li>
  <li>원소 길이의 오름차순으로 정렬한다.</li>
  <li>정렬된 String 원소를 순회한다.</li>
  <li>각 원소에서 ‘,’를 지우고 숫자만 남긴 후, 처음 보는 숫자이면 answer에 넣는다.</li>
  <li>숫자 체크는 HashSet을 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="c1">// 중괄호 없애기</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"},|}"</span><span class="o">,</span> <span class="s">""</span><span class="o">);</span>
        <span class="n">s</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">str</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"\\{"</span><span class="o">);</span>
        <span class="c1">// 길이 순으로 오름차순 정렬</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">str</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(){</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">String</span> <span class="n">s1</span><span class="o">,</span> <span class="n">String</span> <span class="n">s2</span><span class="o">){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">length</span><span class="o">()&lt;</span><span class="n">s2</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="n">s2</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
                <span class="k">else</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">});</span>
        
        <span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>        
        <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span> <span class="c1">// 숫자 체크 위함</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span> <span class="c1">// 집합 순회</span>
            <span class="n">String</span><span class="o">[]</span> <span class="n">now</span><span class="o">=</span><span class="n">str</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">split</span><span class="o">(</span><span class="s">","</span><span class="o">);</span> <span class="c1">// 숫자만 남기기</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">now</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span> <span class="c1">// 숫자 순회</span>
                <span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]))</span> <span class="k">continue</span><span class="o">;</span> 
                <span class="k">else</span> <span class="o">{</span> <span class="c1">// 처음 보는 숫자이면 answer에 삽입</span>
                    <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
                    <span class="n">map</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">now</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span> <span class="c1">// 다음 비교를 위함</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">문자열을 쪼갠다</span></strong>
    <ul>
      <li>집합을 감싸는 ‘{}’를 없앤다.</li>
      <li>집합이 끝나는 지점인 ‘},’과 맨 마지막 끝 ‘}’를 없앤다.</li>
      <li>처음 시작하는 중괄호 ‘{‘를 업앤다.</li>
      <li>’{‘ 기준으로 s를 쪼개서 배열에 저장한다.</li>
      <li>이제 배열에는 숫자와 콤마만 들어가있다. ex) [“1,2”, “3”, …]</li>
      <li>길이가 짧은 것부터 체크해야하므로 Comparator을 이용하여 길이순으로 오름차순 정렬한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">해시셋을 이용하여 숫자를 체크한다</span></strong>
    <ul>
      <li>오름차순 정렬된 str을 인덱스 i로 순회한다.</li>
      <li>i번째 문자열의 숫자만 체크하기 위해 ‘,’ 기준으로 잘라 now 배열에 넣는다.</li>
      <li>now를 인덱스 j로 순회하며 now 집합 안의 숫자를 체크한다.</li>
      <li>HashSet을 이용하여 처음 보는 숫자이면 answer에 넣는다.</li>
      <li>숫자는 중복이 없다고 했으므로 해시셋을 사용할 수 있다.</li>
      <li>다음 비교를 위해 answer[i]에 넣은 값을 해시셋에도 저장해준다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 찾아라 프로그래밍 마에스터: 폰켓몬</title>
	  <link>/blog//algo-prog1845</link>
	  <author></author>
	  <pubDate>2020-10-29T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog1845</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/1845">https://programmers.co.kr/learn/courses/30/lessons/1845</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>DP를 이용한다.</li>
  <li>dp[i][j]=max(dp[i-1][j] 빼고 나머지 dp[i-1][])+land[i][j]</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="c1">// 해시셋에 종류 넣기</span>
        <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">set</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span><span class="n">nums</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">set</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">num</span><span class="o">))</span> <span class="k">continue</span><span class="o">;</span>
            <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kt">int</span> <span class="n">canGet</span><span class="o">=</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span> <span class="c1">// 내가 선택할 수 있는 종류 최대 수</span>
        <span class="c1">// 그만큼 종류가 없다면 종류를, 아니면 선택할 수 있는 최대 수를 리턴</span>
        <span class="n">answer</span><span class="o">=</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">()&lt;</span><span class="n">canGet</span> <span class="o">?</span> <span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">():</span> <span class="n">canGet</span><span class="o">;</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/201029_5.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">HashSet을 이용하여 종류를 센다</span></strong>
    <ul>
      <li>내가 선택할 수 있는 종류의 수는 nums.length/2 (canGet)</li>
      <li>nums의 종류가 canGet보다 작다면 nums의 종류를, 종류가 더 많다면 canGet을 리턴하면 된다.</li>
      <li>종류를 세기 위해 HashSet을 이용하여 중복을 거르고 종류들을 저장한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>


</channel>
</rss>
