<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 2020 KAKAO BLIND RECRUITMENT: 괄호 변환</title>
	  <link>/blog//algo-prog60058</link>
	  <author></author>
	  <pubDate>2020-08-14T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog60058</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/60058">https://programmers.co.kr/learn/courses/30/lessons/60058</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>문제에 주어진 알고리즘대로 진행한다.</li>
  <li>이때 u는 문자열 w의 처음부터 확인하여 처음으로 올바른 문자열인 곳에서 자른다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="code"><pre><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kn">import</span> <span class="nn">java.util.Stack</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="s">""</span><span class="o">;</span>
		
		<span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="n">splitIdx</span><span class="o">(</span><span class="n">p</span><span class="o">);</span>
		<span class="n">String</span> <span class="n">u</span><span class="o">=</span><span class="n">p</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">idx</span><span class="o">);</span>
		<span class="n">String</span> <span class="n">v</span><span class="o">=</span><span class="n">p</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">idx</span><span class="o">,</span> <span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">isCorrect</span><span class="o">(</span><span class="n">u</span><span class="o">))</span> <span class="k">return</span> <span class="n">u</span><span class="o">+</span><span class="n">solution</span><span class="o">(</span><span class="n">v</span><span class="o">);</span>
		
		<span class="n">String</span> <span class="n">result</span><span class="o">=</span><span class="s">"("</span><span class="o">+</span><span class="n">solution</span><span class="o">(</span><span class="n">v</span><span class="o">)+</span><span class="s">")"</span><span class="o">;</span>
		<span class="n">u</span><span class="o">=</span><span class="n">u</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">u</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">);</span>
		<span class="k">return</span> <span class="n">result</span><span class="o">+</span><span class="n">reverse</span><span class="o">(</span><span class="n">u</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">splitIdx</span><span class="o">(</span><span class="n">String</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">open</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">close</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)==</span><span class="sc">'('</span><span class="o">)</span> <span class="n">open</span><span class="o">++;</span>
			<span class="k">else</span> <span class="n">close</span><span class="o">++;</span>
			<span class="k">if</span><span class="o">(</span><span class="n">open</span><span class="o">==</span><span class="n">close</span><span class="o">)</span> <span class="k">return</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">isCorrect</span><span class="o">(</span><span class="n">String</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Stack</span><span class="o">&lt;</span><span class="n">Character</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)==</span><span class="sc">'('</span><span class="o">)</span> <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="sc">'('</span><span class="o">);</span>
			<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
			<span class="k">else</span> <span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="k">if</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">reverse</span><span class="o">(</span><span class="n">String</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">String</span> <span class="n">result</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)==</span><span class="sc">'('</span><span class="o">)</span> <span class="n">result</span><span class="o">+=</span><span class="s">")"</span><span class="o">;</span>
			<span class="k">else</span> <span class="n">result</span><span class="o">+=</span><span class="s">"("</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">result</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200814_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">splitIdx()로 u와 v를 나눈다</span></strong>
    <ul>
      <li>splitIdx()는 문자열 w에서 u와 v를 나누는 인덱스를 리턴한다.</li>
      <li>’(‘와 ‘)’가 같은 개수가 될 때 그 인덱스를 리턴하여 그 다음 인덱스를 리턴하여 u를 substring으로 자를 수 있게 한다.</li>
      <li>’(‘와 ‘)’의 개수가 같지 않다면 균형잡힌 괄호가 아니므로 p.length()를 리턴하고, 더 이상 분리할 수 없으므로 u는 w가 된다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">isCorrect()로 올바른 문자열인지 확인한다</span></strong>
    <ul>
      <li>스택을 이용하여 ‘(‘와 ‘)’가 올바른 문자열인지 확인한다.</li>
      <li>’(‘인 경우 스택에 집어놓고 ‘)’일 때 하나씩 뺀다.</li>
      <li>’)’인데 스택안에 값이 없을 경우 올바른 문자열이 아니므로 false를 리턴한다.</li>
      <li>for문을 빠져나온 후 스택이 비었다면 true를 리턴한다.</li>
      <li>isCorrect()에서 true를 리턴받았다면 올바른 문자열이므로 u에 v에 대한 알고리즘을 수행한 값을 붙여 리턴한다.</li>
      <li>아닐 경우, 알고리즘 4번에 따라 진행한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">reverse()로 문자열 괄호 방향을 뒤집는다</span></strong>
    <ul>
      <li>’(‘이면 ‘)’로 바꾸고, ‘)’면 ‘(‘로 바꿔 문자열을 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[ 프로그래머스- 2020 카카오 공채] 괄호 변환 (java) <a href="https://keepgoing0328.tistory.com/entry/2020%EC%B9%B4%EC%B9%B4%EC%98%A4-%EA%B3%B5%EC%B1%84-%EA%B4%84%ED%98%B8-%EB%B3%80%ED%99%98-%EC%9E%90%EB%B0%94">https://keepgoing0328.tistory.com/entry/2020%EC%B9%B4%EC%B9%B4%EC%98%A4-%EA%B3%B5%EC%B1%84-%EA%B4%84%ED%98%B8-%EB%B3%80%ED%99%98-%EC%9E%90%EB%B0%94</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2018 KAKAO BLIND RECRUITMENT: [1차] 다트게임</title>
	  <link>/blog//algo-prog17682</link>
	  <author></author>
	  <pubDate>2019-12-22T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog17682</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/17682">https://programmers.co.kr/learn/courses/30/lessons/17682</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>dartResult를 charAt()으로 문자를 하나씩 확인한다.</li>
  <li>숫자면 int형으로 바꿔서 저장한다.</li>
  <li>D, T가 나오면 제곱, 세제곱을 한다.</li>
  <li><code class="highlighter-rouge">*</code>이면 현재 값과 이전 값에 두배를 곱한다.</li>
  <li>#이면 -1을 곱한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">dartResult</span><span class="o">)</span> <span class="o">{</span>
      <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
      <span class="kt">int</span><span class="o">[]</span> <span class="n">score</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
      <span class="kt">int</span> <span class="n">idx</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
      <span class="kt">char</span> <span class="n">ch</span><span class="o">;</span>
      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
          <span class="n">ch</span><span class="o">=</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
          <span class="k">if</span><span class="o">(</span><span class="sc">'0'</span><span class="o">&lt;=</span><span class="n">ch</span><span class="o">&amp;&amp;</span><span class="n">ch</span><span class="o">&lt;=</span><span class="sc">'9'</span><span class="o">){</span>
              <span class="n">idx</span><span class="o">++;</span>
              <span class="k">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'1'</span><span class="o">&amp;&amp;</span><span class="n">dartResult</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">){</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]+=</span><span class="mi">10</span><span class="o">;</span>
                  <span class="n">i</span><span class="o">++;</span>
              <span class="o">}</span>
              <span class="k">else</span><span class="o">{</span>
                 <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]+=</span><span class="n">ch</span><span class="o">-</span><span class="sc">'0'</span><span class="o">;</span>
              <span class="o">}</span>                  
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'D'</span><span class="o">){</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">],</span><span class="mi">2</span><span class="o">);</span>
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'T'</span><span class="o">)</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">],</span><span class="mi">3</span><span class="o">);</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'*'</span><span class="o">){</span>
              <span class="k">if</span><span class="o">(</span><span class="n">idx</span><span class="o">==</span><span class="mi">0</span><span class="o">){</span>
                  <span class="n">score</span><span class="o">[</span><span class="mi">0</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
              <span class="o">}</span>
              <span class="k">else</span><span class="o">{</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
                  <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">-</span><span class="mi">1</span><span class="o">]*=</span><span class="mi">2</span><span class="o">;</span>
              <span class="o">}</span>
          <span class="o">}</span>
          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">ch</span><span class="o">==</span><span class="sc">'#'</span><span class="o">)</span>
              <span class="n">score</span><span class="o">[</span><span class="n">idx</span><span class="o">]*=(-</span><span class="mi">1</span><span class="o">);</span>

      <span class="o">}</span>
      <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">s:</span><span class="n">score</span><span class="o">)</span>
          <span class="n">answer</span><span class="o">+=</span><span class="n">s</span><span class="o">;</span>
      <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191222_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">dartResult를 charAt으로 문자를 추출한다.</span></strong>
    <ul>
      <li>charAt()으로 뽑은 값은 ch에 저장한다.</li>
      <li>int[] 배열을 이용하여 3번의 게임 점수를 저장한다.</li>
      <li>숫자가 나오면 n번째 게임 점수를 나타내는 것이므로 배열 인덱스를 하나 증가시켜 새 인덱스에 값을 저장하도록 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 숫자인지 체크한다.</span></strong>
    <ul>
      <li>ch==1이라면 뒤에 0이 오는지 따로 체크한다.</li>
      <li>ch를 그대로 int배열에 저장하면 아스키코드 번호가 저장되므로 int형 숫자 값으로 바꿔서 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 보너스인지 확인한다.</span></strong>
    <ul>
      <li>S는 1제곱이므로 값이 바뀌지 않는다. 그래서 따로 코드를 작성하지 않았다.</li>
      <li>D는 현재 값에 제곱을 취한다.</li>
      <li>T는 세제곱이다.</li>
      <li>제곱값은 Math.pow()로 제곱을 계산하였다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">ch가 옵션인지 체크한다.</span></strong>
    <ul>
      <li><code class="highlighter-rouge">*</code>이면 이전 값과 현재 값에 2배를 곱한다.</li>
      <li>#은 현재 값에 -1을 곱한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">계산이 끝나면 score배열을 순회하며 최종 합계를 저장한다.</span></strong>
    <ul>
      <li>for-each문을 이용하여 합계를 구했다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어려운 문제는 아니었다. 어떻게 하면 효율적으로 작성할 수 있을까 고민해보았는데 그냥 if문으로 모든 경우를 구해서 푸는 게 정석인 것 같다. 처음에는 보너스나 옵션에 따라 split함수로 쪼개서 기회를 나눠볼까 생각했는데, 이러나 저러나 charAt으로 문자를 뽑아야하는 것은 똑같을 것 같아서 split은 사용하지 않았다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2018 KAKAO BLIND RECRUITMENT: [1차] 비밀지도</title>
	  <link>/blog//algo-prog17681</link>
	  <author></author>
	  <pubDate>2019-12-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog17681</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/17681">https://programmers.co.kr/learn/courses/30/lessons/17681</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>십진수를 이진수로 변환한다.</li>
  <li>변환한 이진수 길이가 n이 되도록 앞에 0을 붙여준다.</li>
  <li>둘다 0일때만 공백을, 아니라면 #을 붙인다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="n">String</span> <span class="nf">makeZero</span><span class="o">(</span><span class="n">String</span> <span class="n">str</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">){</span><span class="c1">//이진수 앞에 0을 채워주는 함수</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
         <span class="k">while</span><span class="o">(</span><span class="n">cnt</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
             <span class="n">str</span><span class="o">=</span><span class="s">"0"</span><span class="o">+</span><span class="n">str</span><span class="o">;</span>
             <span class="n">cnt</span><span class="o">--;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">str</span><span class="o">;</span>
     <span class="o">}</span>
     <span class="kd">public</span> <span class="n">String</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr1</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr2</span><span class="o">)</span> <span class="o">{</span>
       <span class="n">String</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
       <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
       <span class="n">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
       <span class="n">String</span> <span class="n">str1</span><span class="o">=</span><span class="s">""</span><span class="o">,</span> <span class="n">str2</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
       <span class="kt">int</span> <span class="n">numSize</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
           <span class="n">str1</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr1</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span><span class="c1">//이진수 변환</span>
           <span class="n">str2</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">toBinaryString</span><span class="o">(</span><span class="n">arr2</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>  
           <span class="n">str1</span><span class="o">=</span><span class="n">makeZero</span><span class="o">(</span><span class="n">str1</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>
           <span class="n">str2</span><span class="o">=</span><span class="n">makeZero</span><span class="o">(</span><span class="n">str2</span><span class="o">,</span> <span class="n">n</span><span class="o">);</span>
           <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
               <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">&amp;&amp;</span><span class="n">str2</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)==</span><span class="sc">'0'</span><span class="o">)</span>
                   <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="s">" "</span><span class="o">;</span>
               <span class="k">else</span>
                   <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="s">"#"</span><span class="o">;</span>
           <span class="o">}</span>
       <span class="o">}</span>
       <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191219_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">십진수를 이진수로 변환한 값의 길이가 n보다 작다면 앞에 0을 붙여준다.</span></strong>
    <ul>
      <li>Integer.toBinaryString()함수로 십진수를 이진수로 변환한다.</li>
      <li>바뀐 이진수는 길이 n을 만족해야하므로, 만약 부족하다면 makeZero()함수를 통해 0을 채운다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">완성된 이진수를 비교하며 조건에 맞게 문자열을 만든다.</span></strong>
    <ul>
      <li>charAt()함수로 문자를 하나씩 비교한다.</li>
      <li>둘다 0일 때만 공백을, 나머지는 벽을 뜻하는 #을 만든다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>문제를 꼼꼼하게 안읽어서 살짝 삽질했다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2019 KAKAO BLIND RECRUITMENT: 실패율</title>
	  <link>/blog//algo-prog42889</link>
	  <author></author>
	  <pubDate>2019-12-19T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42889</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42889">https://programmers.co.kr/learn/courses/30/lessons/42889</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>스테이지별 클리어하지 못한 사람 수를 계산한다.</li>
  <li>스테이지별 실패율을 계산한다.</li>
  <li>스테이지 단계와 실패율을 가지는 클래스를 생성, 조건에 맞게 내림차순 정렬한다.</li>
  <li>answer에 스테이지 번호를 옮겨 담아 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Stage</span><span class="o">{</span>
     <span class="kt">int</span> <span class="n">stage</span><span class="o">;</span>
     <span class="kt">double</span> <span class="n">lose</span><span class="o">;</span>
     <span class="kd">public</span> <span class="nf">Stage</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">,</span> <span class="kt">double</span> <span class="n">l</span><span class="o">){</span>
         <span class="k">this</span><span class="o">.</span><span class="na">stage</span><span class="o">=</span><span class="n">s</span><span class="o">;</span>
         <span class="k">this</span><span class="o">.</span><span class="na">lose</span><span class="o">=</span><span class="n">l</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">N</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">stages</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">N</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">player</span><span class="o">=</span><span class="n">stages</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">notClear</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">N</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">stages</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">notClear</span><span class="o">[</span><span class="n">stages</span><span class="o">[</span><span class="n">i</span><span class="o">]]++;</span>
         <span class="o">}</span>
         <span class="kt">double</span><span class="o">[]</span> <span class="n">loseRate</span><span class="o">=</span><span class="k">new</span> <span class="kt">double</span><span class="o">[</span><span class="n">N</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">notClear</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">player</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span>
                 <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">0</span><span class="o">;</span>
             <span class="k">else</span>
                 <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="kt">double</span><span class="o">)</span><span class="n">notClear</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="n">player</span><span class="o">;</span>
             <span class="n">player</span><span class="o">-=</span><span class="n">notClear</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
         <span class="o">}</span>
         <span class="n">Stage</span><span class="o">[]</span> <span class="n">stage</span><span class="o">=</span><span class="k">new</span> <span class="n">Stage</span><span class="o">[</span><span class="n">N</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">stage</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">stage</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Stage</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">loseRate</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]);</span>
         <span class="o">}</span>
         <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">stage</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Stage</span><span class="o">&gt;(){</span>
             <span class="nd">@Override</span>
             <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Stage</span> <span class="n">s1</span><span class="o">,</span> <span class="n">Stage</span> <span class="n">s2</span><span class="o">){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">lose</span><span class="o">==</span><span class="n">s2</span><span class="o">.</span><span class="na">lose</span><span class="o">)</span>
                     <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">s1</span><span class="o">.</span><span class="na">lose</span><span class="o">&gt;</span><span class="n">s2</span><span class="o">.</span><span class="na">lose</span><span class="o">)</span>
                     <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
                 <span class="k">else</span>
                     <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">});</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">answer</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">stage</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">stage</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191219_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">스테이지별 클리어하지 못한 수를 구한다.</span></strong>
    <ul>
      <li>notClear 배열을 생성하여 인덱스를 스테이지 번호로 생각하여 스테이지별 클리어하짐 못한 사람 수를 저장한다.</li>
      <li>인덱스 0은 사용하지 않고, 스테이지를 모두 클리어하면 N+1의 값을 가지므로 N+2의 크기가 필요하다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">실패율을 계산한다.</span></strong>
    <ul>
      <li>loseRate 배열을 생성하고, 인덱스를 스테이지 번호로 생각하여 각 스테이지별 실패율을 계산해 저장한다.</li>
      <li>이때 실패율은 소수점이 발생하므로 double형 배열에 넣어야한다.</li>
      <li>player가 0인 경우 클리어 못한 사람 수/0이므로 NaN이 발생한다(분모가 0은 수학적 오류임). 따라서 이 경우는 나눗셈 연산을 하지 않고 if문으로 따로 빼주어 loseRate[i]에 0을 넣는다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Stage 클래스를 생성하여 내림차순 정렬한다.</span></strong>
    <ul>
      <li>Stage 클래스는 스테이지 번호 stage와 실패율 lose를 가진다.</li>
      <li>클래스를 생성하여 내림차순으로 정렬하는 까닭은, 실패율으로 우선순위를 부여하되 배열에 저장하는 값은 스테이지 번호여야 되기 때문이다.</li>
      <li>이에 따른 정렬은 Comparator을 이용한다.</li>
      <li>실패율이 같다면 스테이지 번호가 작은 순이 먼저 오도록 해야하므로 0을 리턴한다. 0을 리턴한다는 뜻은 자리 이동이 일어나지 않는다는 뜻인데, 이렇게 해도 문제가 없는 이유는 애초에 비교하는 s1과 s2의 스테이지 번호는 s1이 s2보다 항상 작기 때문이다. 애초에 배열 stage에 스테이지 번호 순으로 1번부터 N까지 차례대로 넣으므로 s1의 스테이지 번호 값이 s2보다 작다는 것이 보장된다.</li>
      <li>s1의 실패율이 더 크다면 -1을 리턴하여 s1이 앞으로 가게 한다.</li>
      <li>s2의 실패율이 더 크다면 1을 리턴해 s1이 뒤로 가게 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">정렬된 stage의 스테이지 번호를 answer에 옮겨 담아 리턴한다.</span></strong>
    <ul>
      <li>answer에는 내림차순으로 정렬된 스테이지 번호를 리턴하면 되므로 배열 stage의 stage값을 answer에 옮겨 담는다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>문제 자체는 어렵지 않았지만 for문을 생각보다 많이 사용하여 코드가 효율적이라는 생각은 들지 않는다. 또한 내림차순으로 정렬할 때 클래스를 생성하지 않고 할 수 있는 방법이 있을까 고민했었는데, 다른 사람들도 모두 클래스를 사용한 걸 보아 이게 최선인 것 같다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 2020 KAKAO BLIND RECRUITMENT: 문자열 압축</title>
	  <link>/blog//algo-prog60057</link>
	  <author></author>
	  <pubDate>2019-12-16T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog60057</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/60057">https://programmers.co.kr/learn/courses/30/lessons/60057</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>문자열을 자를 단위를 정한다(1~s.length/2까지가 가능).</li>
  <li>substring을 이용해 문자열을 잘라서 특정 문자가 반복되는지 확인한다.</li>
  <li>answer에는 압축한 문자열 중 가장 짧은 것을 저장한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">1000</span><span class="o">;</span><span class="c1">//s는 최대 1000이하임</span>
        <span class="n">String</span> <span class="n">str1</span><span class="o">=</span><span class="s">""</span><span class="o">,</span> <span class="n">str2</span><span class="o">=</span><span class="s">""</span><span class="o">,</span> <span class="n">result</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()==</span><span class="mi">1</span><span class="o">)</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()/</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="c1">//쪼갤 단위 갯수</span>
            <span class="n">str1</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="n">i</span><span class="o">);</span>
            <span class="n">cnt</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
            <span class="n">result</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">();</span><span class="n">j</span><span class="o">+=</span><span class="n">i</span><span class="o">){</span>
                <span class="n">str2</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span><span class="n">j</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">str1</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str2</span><span class="o">))</span> <span class="n">cnt</span><span class="o">++;</span><span class="c1">//문자가 반복된다면</span>
                <span class="k">else</span><span class="o">{</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="mi">1</span><span class="o">)</span> <span class="n">result</span><span class="o">+=</span><span class="n">str1</span><span class="o">;</span><span class="c1">//str1이 반복된 적이 없다면</span>
                    <span class="k">else</span> <span class="n">result</span><span class="o">+=</span><span class="n">cnt</span><span class="o">+</span><span class="n">str1</span><span class="o">;</span><span class="c1">//한번 이상 반복됏다면</span>
                    <span class="n">cnt</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="c1">//초기화</span>
                    <span class="n">str1</span><span class="o">=</span><span class="n">str2</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">+</span><span class="n">i</span><span class="o">+</span><span class="n">i</span><span class="o">&gt;</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">()){</span><span class="c1">//다음 str2를 찾기엔 substring 범위가 벗어난다면</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">!=</span><span class="mi">1</span><span class="o">){</span>
                        <span class="n">result</span><span class="o">+=</span><span class="n">cnt</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="n">result</span><span class="o">+=</span><span class="n">s</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">j</span><span class="o">,</span><span class="n">s</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
                    <span class="n">answer</span><span class="o">=</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">answer</span><span class="o">,</span> <span class="n">result</span><span class="o">.</span><span class="na">length</span><span class="o">());</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191216_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">쪼갤 수 있는 단위 갯수는 1부터 s.length()/2까지이다.</span></strong>
    <ul>
      <li>문자열이 반복되는지 확인하기 위해서 str1, str2를 두고 비교한다.</li>
      <li>str1+str2=s.length()일 때가 최대이므로 1부터 s.length()/2까지가 문자열을 자를 수 있는 범위이다.</li>
      <li>문자열 단위를 나타내는 변수는 첫 for문의 i이다. 첫 str1은 0부터 i개이므로 substring으로 문자를 추출한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">갯수 단위에 따라 str1, str2를 추출해서 비교한다.</span></strong>
    <ul>
      <li>str2는 str1이 끝난 지점 다음부터인 j부터 i 갯수만큼이다. 따라서 substring(j, j+i)가 된다.</li>
      <li>str1과 str2가 같다면 cnt++로 반복 횟수를 증가한다.</li>
      <li>같지 않다면 문자열이 반복되지 않는다는 뜻이다. cnt==1이라면 str1이 반복된 적이 없으므로 result에 숫자 없이 str1을 저장한다.</li>
      <li>cnt!=1이라면 str1이 한 번 이상 반복되었단느 뜻이므로 반복된 횟수인 cnt와 str1을 result에 넣어 압축된 문자열을 저장한다.</li>
      <li>result에 문자열을 넣었으므로 cnt=1, str1=str2로 초기화한다.</li>
      <li>str1=str2의 의미는, str2가 str1와 같지 않기 때문에 이제 str2와 같은 문자열이 있는지 비교해야 하므로 str1에 넣어서 다음 진행을 할 수 있게 한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">다음 비교할 문자열 갯수가 충분한지 확인한다.</span></strong>
    <ul>
      <li>두 번째 for문의 j는 str2의 시작점을 나타내기 때문에 j++가 아닌 j+=i만큼 증가한다. 따라서 다음 비교를 위해 str2를 substring으로 추출할 때, 충분한 갯수가 있는지 확인해야한다.</li>
      <li>마지막 if문은 substring이 인덱스 범위를 벗어나지 않도록 체크하는 코드이다. j+i는 다음 str2의 시작점, 뒤의 i는 끝나는 점을 나타내며, 따라서 j+i+i는 다음 str2 문자열의 끝 인덱스를 뜻한다. 인덱스가 s.length()를 넘어간다면 더 이상 i개만큼 문자열을 자를 수 없다는 뜻이므로 나머지 문자열들을 result에 붙여준다. 이때 지금까지 반복된 문자열이 있는지 cnt를 체크해야한다.</li>
      <li>result 생성이 끝났다면 answer에는 기존 answer값과 현재 result의 값 중 최솟값을 저장한다. 참고로 s의 길이는 1~1000이하로 문제에 제시되었으므로 answer의 초기값은 1000으로 넣었다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>어려운 자료구조를 쓴다던가의 문제는 아니지만 substring의 범위를 잘 체크해야하는 문제였다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[자바/알고리즘] 프로그래머스 [2020카카오공채] 문자열 압축 <a href="https://lee1535.tistory.com/61">https://lee1535.tistory.com/61</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
