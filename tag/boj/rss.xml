<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/백준] 정렬: 통계학</title>
	  <link>/blog//algo-boj2108</link>
	  <author></author>
	  <pubDate>2020-03-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2108</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2108">https://www.acmicpc.net/problem/2108</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>산술평균은 소수점 이하 첫째 자리에서 반올림하여 출력한다.</li>
  <li>입력받은 숫자를 배열에 넣고 오름차순 정렬하여 중앙값을 출력한다.</li>
  <li>ArrayList를 이용하여 가장 많이 나타나는 값들을 저장한 후, 두개이상이라면 두 번째로 작은 값을 출력한다.</li>
  <li>범위는 정렬된 배열의 마지막 원소와 첫 번째 원소의 차이를 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">number</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">8001</span><span class="o">];</span>
		<span class="kt">int</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;;</span>
		<span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">x</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">number</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">x</span><span class="o">;</span>
			<span class="n">sum</span><span class="o">+=</span><span class="n">x</span><span class="o">;</span>
			<span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">){</span>
				<span class="n">cntArray</span><span class="o">[-</span><span class="n">x</span><span class="o">]++;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[-</span><span class="n">x</span><span class="o">]&gt;</span><span class="n">max</span><span class="o">)</span>
					<span class="n">max</span><span class="o">=</span><span class="n">cntArray</span><span class="o">[-</span><span class="n">x</span><span class="o">];</span>
			<span class="o">}</span>
			<span class="k">else</span><span class="o">{</span>
				<span class="n">cntArray</span><span class="o">[</span><span class="n">x</span><span class="o">+</span><span class="mi">4000</span><span class="o">]++;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">x</span><span class="o">+</span><span class="mi">4000</span><span class="o">]&gt;</span><span class="n">max</span><span class="o">)</span>
					<span class="n">max</span><span class="o">=</span><span class="n">cntArray</span><span class="o">[</span><span class="n">x</span><span class="o">+</span><span class="mi">4000</span><span class="o">];</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">round</span><span class="o">((</span><span class="kt">double</span><span class="o">)</span><span class="n">sum</span><span class="o">/</span><span class="n">n</span><span class="o">));</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">number</span><span class="o">[</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">]);</span>
		<span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">8001</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">max</span><span class="o">==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4001</span><span class="o">)</span>
					<span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(-</span><span class="n">i</span><span class="o">);</span>
				<span class="k">else</span>
					<span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">4000</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">if</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()==</span><span class="mi">1</span><span class="o">)</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
		<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">1</span><span class="o">){</span>
			<span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">number</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">]-</span><span class="n">number</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
	<span class="o">}</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200309_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">산술평균</span></strong>
    <ul>
      <li>숫자를 입력받을 때 sum에 값을 저장하여 총합을 구한 후, n으로 나누되 앞에 sum 또는 n을 double로 형변환하여 결과값이 소수점을 가지도록 한다.</li>
      <li>Math.round()를 통해 소수점 첫째 자리에서 반올림한 값을 출력한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">중앙값</span></strong>
    <ul>
      <li>입력받은 수들을 배열에 저장하여 Arrays.sort()로 오름차순 정렬한 뒤, n/2로 중앙값을 출력한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">최빈값</span></strong>
    <ul>
      <li>처음 숫자를 입력받아 배열에 저장할 때, 가장 빈도가 높은 갯수가 얼마인지 max에 저장한다.</li>
      <li>이를 가지고 8001배열을 순회하며 max와 같은 빈도를 가지고 있는 수를 ArrayList에 저장한다.</li>
      <li>8001배열은 0은 그대로 0, 1~4000까지는 음수가 사용하고, 그 이상은 양수가 사용한다.</li>
      <li>ArrayList를 사용하는 이유는, 빈도수가 max인 숫자가 몇 개인지 알 수 없기 때문에 배열을 만들 수 없기 때문이다.</li>
      <li>ArrayList에 값이 하나라면 해당 값을 출력하고, 두 개 이상이라면 두 번째로 작은 값을 출력해야하므로 Collections.sort()를 통해 오름차순 정렬한 후 1번째 인덱스의 값을 출력한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">범위</span></strong>
    <ul>
      <li>정렬된 배열 number의 첫 번째 인덱스 값이 최솟값, 마지막 인덱스가 최댓값이므로 이를 이용하여 범위를 구한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 브루트 포스: 영화감독 숌</title>
	  <link>/blog//algo-boj1436</link>
	  <author></author>
	  <pubDate>2020-03-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj1436</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/1436">https://www.acmicpc.net/problem/1436</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>666부터 카운트하며 “666”이 포함된 숫자의 갯수를 센다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="mi">666</span><span class="o">;</span>
		
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">num</span><span class="o">).</span><span class="na">contains</span><span class="o">(</span><span class="s">"666"</span><span class="o">)){</span>
				<span class="n">cnt</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="n">n</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
			<span class="n">num</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p>### 3. 결과
<img src="./assets/images/200309_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">666부터 조건을 비교하며 카운트한다.</span></strong>
    <ul>
      <li>666부터 카운트하며 “666”이 포함되었는지 확인하기위해 String형으로 변환 후 contains()로 확인한다.</li>
      <li>“666”이 들어가있다면 cnt++하고, cnt==n이 되는 경우에 while문을 탈출하여 출력한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 정렬: 좌표 정렬하기 2</title>
	  <link>/blog//algo-boj11651</link>
	  <author></author>
	  <pubDate>2020-03-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj11651</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/11651">https://www.acmicpc.net/problem/11651</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>x, y좌표값을 가지는 Dot클래스를 선언한다.</li>
  <li>Dot형 배열을 선언하여 값을 넣은 후, Array.sort()과 Comparator를 이용하여 y 우선 오름차순 정렬, 같다면 x 오름차순 정렬한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Dot</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">y</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Dot</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span><span class="o">=</span><span class="n">j</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">Dot</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Dot</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Dot</span><span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(),</span> <span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">());</span>
		<span class="o">}</span>
		
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Dot</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Dot</span> <span class="n">d1</span><span class="o">,</span> <span class="n">Dot</span> <span class="n">d2</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">d1</span><span class="o">.</span><span class="na">y</span><span class="o">==</span><span class="n">d2</span><span class="o">.</span><span class="na">y</span><span class="o">)</span>
					<span class="k">return</span> <span class="n">d1</span><span class="o">.</span><span class="na">x</span><span class="o">-</span><span class="n">d2</span><span class="o">.</span><span class="na">x</span><span class="o">;</span>
				<span class="k">else</span>
					<span class="k">return</span> <span class="n">d1</span><span class="o">.</span><span class="na">y</span><span class="o">-</span><span class="n">d2</span><span class="o">.</span><span class="na">y</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">x</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">y</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200309_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Dot형 클래스를 선언한다.</span></strong>
    <ul>
      <li>Dot형 배열을 선언하여 n개의 점을 입력받아 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Arrays.sort(), Comparator을 이용하여 조건에 맞게 정렬한다.</span></strong>
    <ul>
      <li>y의 값이 같다면 x를 기준으로 오름차순 정렬하고, 다르다면 y를 기준으로 오름차순 정렬한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 정렬: 좌표 정렬하기</title>
	  <link>/blog//algo-boj11650</link>
	  <author></author>
	  <pubDate>2020-03-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj11650</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/11650">https://www.acmicpc.net/problem/11650</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>x, y좌표값을 가지는 Dot클래스를 선언한다.</li>
  <li>Dot형 배열을 선언하여 값을 넣은 후, Array.sort()과 Comparator를 이용하여 x 우선 오름차순 정렬, 같다면 y 오름차순 정렬한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Dot</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">x</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">y</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Dot</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">x</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">y</span><span class="o">=</span><span class="n">j</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">Dot</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Dot</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Dot</span><span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(),</span> <span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">());</span>
		<span class="o">}</span>
		
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Dot</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Dot</span> <span class="n">d1</span><span class="o">,</span> <span class="n">Dot</span> <span class="n">d2</span><span class="o">){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">d1</span><span class="o">.</span><span class="na">x</span><span class="o">==</span><span class="n">d2</span><span class="o">.</span><span class="na">x</span><span class="o">)</span>
					<span class="k">return</span> <span class="n">d1</span><span class="o">.</span><span class="na">y</span><span class="o">-</span><span class="n">d2</span><span class="o">.</span><span class="na">y</span><span class="o">;</span>
				<span class="k">else</span>
					<span class="k">return</span> <span class="n">d1</span><span class="o">.</span><span class="na">x</span><span class="o">-</span><span class="n">d2</span><span class="o">.</span><span class="na">x</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">x</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">y</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200309_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Dot형 클래스를 선언한다.</span></strong>
    <ul>
      <li>Dot형 배열을 선언하여 n개의 점을 입력받아 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Arrays.sort(), Comparator을 이용하여 조건에 맞게 정렬한다.</span></strong>
    <ul>
      <li>x의 값이 같다면 y를 기준으로 오름차순 정렬하고, 다르다면 x를 기준으로 오름차순 정렬한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 정렬: 나이순 정렬</title>
	  <link>/blog//algo-boj10814</link>
	  <author></author>
	  <pubDate>2020-03-09T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj10814</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/10814">https://www.acmicpc.net/problem/10814</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>age, name을 가지는 Person클래스를 선언한다.</li>
  <li>Arrays.sort()와 Comparator을 이용하여 나이순 정렬한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Person</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">age</span><span class="o">;</span>
	<span class="n">String</span> <span class="n">name</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Person</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="n">String</span> <span class="n">n</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">age</span><span class="o">=</span><span class="n">a</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">=</span><span class="n">n</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">Person</span><span class="o">[]</span> <span class="n">people</span><span class="o">=</span><span class="k">new</span> <span class="n">Person</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(),</span> <span class="n">input</span><span class="o">.</span><span class="na">next</span><span class="o">());</span>
		<span class="o">}</span>
		
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">people</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Person</span> <span class="n">p1</span><span class="o">,</span> <span class="n">Person</span> <span class="n">p2</span><span class="o">){</span>
					<span class="k">return</span> <span class="n">p1</span><span class="o">.</span><span class="na">age</span><span class="o">-</span><span class="n">p2</span><span class="o">.</span><span class="na">age</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">age</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">name</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200309_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Person클래스를 선언한다.</span></strong>
    <ul>
      <li>나이 age, 이름 name을 가지는 Person 클래스를 선언한다.</li>
      <li>Person형 배열을 선언하여 n개의 회원 정보를 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Arrays.sort(), Comparator을 이용하여 조건에 맞게 정렬한다.</span></strong>
    <ul>
      <li>나이순으로 정렬한다.</li>
      <li>나이가 같다면 입력받은 순서대로 출력해야한다. 이 경우 p1.age-p2.age는 0이 되어 정렬이 이루어지지 않으므로 입력받은대로 저장되어 조건에 만족하게 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 브루트 포스: 체스판 다시 칠하기</title>
	  <link>/blog//algo-boj1018</link>
	  <author></author>
	  <pubDate>2020-03-07T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj1018</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/1018">https://www.acmicpc.net/problem/1018</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>가능한 모든 8*8크기의 체스판을 만들어 검은색, 흰색으로 번갈아 칠하려면 몇 개를 바꾸어야 하는지 센다.</li>
  <li>맨 처음이 흰색인 경우, 검은색인 경우 두 가지를 모두 구해야하지만, 한 경우만 구하면 나머지 하나도 알 수 있다. 처음이 흰색으로 시작했을 때 다시 칠해야하는 갯수가 n이라면 검은색으로 시작했을 때는 64-n이다.</li>
  <li>다시 칠해야하는 정사각형의 최소 갯수를 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">min</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">board</span><span class="o">,</span> <span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">){</span>
		<span class="n">String</span><span class="o">[]</span> <span class="n">color</span><span class="o">={</span><span class="s">"WBWBWBWB"</span><span class="o">,</span><span class="s">"BWBWBWBW"</span><span class="o">};</span>
		<span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">ii</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">jj</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">x</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">x</span><span class="o">+</span><span class="mi">8</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">ii</span><span class="o">=</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">;</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">y</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">y</span><span class="o">+</span><span class="mi">8</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="n">jj</span><span class="o">=</span><span class="n">j</span><span class="o">-</span><span class="n">y</span><span class="o">;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]!=</span><span class="n">color</span><span class="o">[</span><span class="n">ii</span><span class="o">].</span><span class="na">charAt</span><span class="o">(</span><span class="n">jj</span><span class="o">)){</span>
					<span class="n">cnt</span><span class="o">++;</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">&gt;</span><span class="mi">32</span><span class="o">)</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">64</span><span class="o">-</span><span class="n">cnt</span><span class="o">;</span>
		<span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">char</span><span class="o">[][]</span> <span class="n">board</span><span class="o">=</span><span class="k">new</span> <span class="kt">char</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">m</span><span class="o">];</span>
		<span class="n">String</span> <span class="n">str</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">str</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="n">board</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">str</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">64</span><span class="o">,</span> <span class="n">temp</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">-</span><span class="mi">7</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">m</span><span class="o">-</span><span class="mi">7</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="n">temp</span><span class="o">=</span><span class="n">min</span><span class="o">(</span><span class="n">board</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">);</span>
				<span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">&gt;</span><span class="n">temp</span><span class="o">)</span> <span class="n">answer</span><span class="o">=</span><span class="n">temp</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200307_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">2중for문으로 가능한 8*8크기를 찾는다.</span></strong>
    <ul>
      <li>해당 크기의 시작점 i, j를 파라미터로 min()함수를 실행한 후, 리턴값 중 최솟값만 answer에 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">체스판을 만들기 위해 몇 개를 다시 칠해야하는지 센다.</span></strong>
    <ul>
      <li>한 줄은 흰색 또는 검은색으로 시작하는 두 방법 밖에 없다.</li>
      <li>x, y로 넘겨받은 시작점을 가지고 만드는 체스판은 시작점 x가 짝수 홀수에 따라 시작하는 색깔이 결정된다. ii는 color[0], color[1]을 선택하기 위함이다.</li>
      <li>처음 for문에서 어떤 줄과 비교할지 color[ii]가 결정되었다면, jj는 color[ii]안에서 char형으로 문자를 뽑아내어 비교한다. 이때 시작점 y에서부터 8개를 비교해야하고, jj는 0~7까지의 범위이므로 jj=j-y로 범위를 맞춘다.</li>
      <li>위의 2중for문을 수행하면 맨 처음이 흰색 또는 검은색으로 시작하는 체스판을 만들기 위해 다시 칠해야하는 갯수 n을 알 수 있다. 반대로 검은색 또는 흰색으로 칠하는 경우는 64-n과 같다. 색깔을 다시 뒤집으면 되기 때문이다. 이중 작은 값을 리턴하면 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[백준 - 1018번] 체스판 다시 칠하기 - Java //Wello Horld// <a href="https://wellohorld.tistory.com/41">https://wellohorld.tistory.com/41</a></li>
</ul>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 브루트 포스: 블랙잭</title>
	  <link>/blog//algo-boj2798</link>
	  <author></author>
	  <pubDate>2020-03-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2798</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2798">https://www.acmicpc.net/problem/2798</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>n장의 카드를 배열에 저장한다.</li>
  <li>하나씩 체크하며 m을 넘지않는 최댓값을 찾는다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">card</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">card</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="kt">int</span> <span class="n">sum</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">sub</span><span class="o">=</span><span class="n">m</span><span class="o">,</span> <span class="n">tempSum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">k</span><span class="o">++){</span>
					<span class="n">sum</span><span class="o">=</span><span class="n">card</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">card</span><span class="o">[</span><span class="n">j</span><span class="o">]+</span><span class="n">card</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
					<span class="k">if</span><span class="o">(</span><span class="n">m</span><span class="o">==</span><span class="n">sum</span><span class="o">){</span>
						<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
						<span class="k">return</span><span class="o">;</span>
					<span class="o">}</span>
					<span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">m</span><span class="o">&gt;</span><span class="n">sum</span><span class="o">){</span>
						<span class="k">if</span><span class="o">(</span><span class="n">sub</span><span class="o">&gt;</span><span class="n">m</span><span class="o">-</span><span class="n">sum</span><span class="o">){</span>
							<span class="n">sub</span><span class="o">=</span><span class="n">m</span><span class="o">-</span><span class="n">sum</span><span class="o">;</span>
							<span class="n">tempSum</span><span class="o">=</span><span class="n">sum</span><span class="o">;</span>
						<span class="o">}</span>
					<span class="o">}</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tempSum</span><span class="o">);</span>
		
	<span class="o">}</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200305_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶
처음에는 Arrays.sort()를 이용하여 정렬 후 뒤에서부터 큰 값 먼저 체크하며 값을 구하려고 했는데, 정렬 후 삼중for문으로 비교하면 한 개만 최댓값이 되어 별 쓸모가 없으므로 굳이 정렬을 하지 않아도 될 것이라고 판단하여 정렬을 지웠다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">3개의 for문으로 카드의 3조합을 모두 찾아본다.</span></strong>
    <ul>
      <li>이때 더한 값이 sum과 같다면 바로 출력하고 return으로 종료한다. return 대신 break를 사용할 경우 한 개의 for문만 빠져나오므로 모든 for문을 탈출할 수 없다.</li>
      <li>sum이 m과 같지않다면 m과의 오차를 계산하여 오차가 더 작은 값을 tempSum에 저장한다. 모든 경우의 수 탐색이 완료되었다면 tempSum을 출력하고 종료한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 브루트 포스: 분해합</title>
	  <link>/blog//algo-boj2231</link>
	  <author></author>
	  <pubDate>2020-03-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2231</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2231">https://www.acmicpc.net/problem/2231</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>분해합은 n+각 자릿수 값이므로 최솟값은 n-9*n의 길이이다.</li>
  <li>최솟값부터 n-1까지 숫자들 중에 각 자릿수를 더한 값이 n과 같은 가장 작은 값을 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">n</span><span class="o">).</span><span class="na">length</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">start</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="mi">9</span><span class="o">*</span><span class="n">len</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">sum</span><span class="o">=</span><span class="n">start</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">start</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">num</span><span class="o">=</span><span class="n">sum</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
			<span class="k">while</span><span class="o">(</span><span class="n">num</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">){</span>
				<span class="n">sum</span><span class="o">+=</span><span class="n">num</span><span class="o">%</span><span class="mi">10</span><span class="o">;</span>
				<span class="n">num</span><span class="o">/=</span><span class="mi">10</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">==</span><span class="n">n</span><span class="o">){</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
				<span class="k">return</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"0"</span><span class="o">);</span>
	<span class="o">}</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200305_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">분해합은 (n-9*n의 길이)부터 시작한다.</span></strong>
    <ul>
      <li>따라서 시작값을 start에 저장하여 n-1까지 숫자들 중에서 각 자릿수를 더한 값이 n과 같은 숫자가 있는지 확인한다.</li>
      <li>있다면 해당 값을 출력, n-1까지 순회했으나 없는 경우 0을 출력한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>백준 2231 분해합 Java <a href="https://dundung.tistory.com/99">https://dundung.tistory.com/99</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 브루트 포스: 덩치</title>
	  <link>/blog//algo-boj7568</link>
	  <author></author>
	  <pubDate>2020-03-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj7568</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/7568">https://www.acmicpc.net/problem/7568</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h2 id="풀이-방법-1">풀이 방법 1</h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>3차원 배열을 이용하여 몸무게, 키, 1(등수)를 저장한다.</li>
  <li>이중for문을 이용하여 나보다 몸무게, 키 둘다 큰 사람을 발견하면 people[i][2]를 하나 증가시킨다.</li>
  <li>순회가 끝나면 등수가 모두 저장되었으므로 people[i][2]를 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[][]</span> <span class="n">people</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="mi">3</span><span class="o">];</span>
		<span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">x</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">y</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">x</span><span class="o">;</span>
			<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="n">y</span><span class="o">;</span>
			<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]=</span><span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">j</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]&lt;</span><span class="n">people</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="mi">0</span><span class="o">]&amp;&amp;</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]&lt;</span><span class="n">people</span><span class="o">[</span><span class="n">j</span><span class="o">][</span><span class="mi">1</span><span class="o">]){</span>
					<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]++;</span>
				<span class="o">}</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]+</span><span class="s">" "</span><span class="o">);</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-설명">3. 설명</h3>
<ol>
  <li><strong><span style="color:navy">3차원 배열을 이용하여 몸무게, 키, 인덱스를 저장한다.</span></strong></li>
  <li><strong><span style="color:navy">2중for문을 이용하여 모든 경우의 수를 체크하여 나보다 큰 사람을 찾아 갯수를 센다.</span></strong>
    <ul>
      <li>이때 나 자신을 비교하는 경우가 생기므로, i==j인 경우 continue로 그냥 넘긴다.</li>
    </ul>
  </li>
</ol>

<h2 id="풀이-방법-2">풀이 방법 2</h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>몸무게, 키, 인덱스를 담는 Person 클래스를 생성한다.</li>
  <li>Person형 배열을 생성한 후 모든 값을 저장한다.</li>
  <li>Comparator을 이용하여 몸무게를 기준으로 오름차순 정렬한다.</li>
  <li>등수를 저장할 배열을 생성한다.</li>
  <li>나 자신의 뒤에 값들을 비교하며 큰 키가 있다면 cnt++한다.</li>
  <li>등수 계산이 끝났다면 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드-1">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Person</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">height</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">weight</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">index</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Person</span><span class="o">(</span><span class="kt">int</span> <span class="n">h</span><span class="o">,</span> <span class="kt">int</span> <span class="n">w</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">height</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">weight</span><span class="o">=</span><span class="n">w</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">index</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">Person</span><span class="o">[]</span> <span class="n">people</span><span class="o">=</span><span class="k">new</span> <span class="n">Person</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">x</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">y</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Person</span><span class="o">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">,</span><span class="n">i</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">people</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Person</span> <span class="n">p1</span><span class="o">,</span> <span class="n">Person</span> <span class="n">p2</span><span class="o">){</span>
				<span class="k">return</span> <span class="n">p1</span><span class="o">.</span><span class="na">height</span><span class="o">-</span><span class="n">p2</span><span class="o">.</span><span class="na">height</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		
		<span class="kt">int</span> <span class="n">cnt</span><span class="o">,</span> <span class="n">myHeight</span><span class="o">,</span> <span class="n">myWeight</span><span class="o">;</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">score</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
			<span class="n">myHeight</span><span class="o">=</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">height</span><span class="o">;</span>
			<span class="n">myWeight</span><span class="o">=</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">weight</span><span class="o">;</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
				<span class="k">if</span><span class="o">(</span><span class="n">myHeight</span><span class="o">&lt;</span><span class="n">people</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">height</span><span class="o">&amp;&amp;</span><span class="n">myWeight</span><span class="o">&lt;</span><span class="n">people</span><span class="o">[</span><span class="n">j</span><span class="o">].</span><span class="na">weight</span><span class="o">)</span> <span class="n">cnt</span><span class="o">++;</span>
			<span class="o">}</span>
			<span class="n">score</span><span class="o">[</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">index</span><span class="o">]=</span><span class="n">cnt</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">score</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="s">" "</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-설명-1">3. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Person클래스를 생성하여 몸무게, 키, 인덱스를 저장한다.</span></strong></li>
  <li><strong><span style="color:navy">Comparator을 이용하여 몸무게 기준 오름차순 정렬한다.</span></strong></li>
  <li><strong><span style="color:navy">나 뒤의 값들을 확인하며 나보다 더 큰 사람을 센다.</span></strong>
    <ul>
      <li>이때 몸무게로 정렬했는데도 다시 한 번 체크하는 이유는, 위 오름차순 정렬에서 몸무게가 같을 경우에는 자리 이동이 이루어지지 않았기 때문이다.</li>
    </ul>
  </li>
</ol>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200305_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶
첫 번째가 3차원 배열을 이용, 두 번째가 Person클래스를 이용한 것이다.</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 2: 직각삼각형</title>
	  <link>/blog//algo-boj4153</link>
	  <author></author>
	  <pubDate>2020-03-03T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj4153</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/4153">https://www.acmicpc.net/problem/4153</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>입력받은 수 중 빗변을 찾고, 피타고라스의 정리를 이용한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">,</span> <span class="n">r</span><span class="o">;</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">sort</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
			<span class="n">sort</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">sort</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">sort</span><span class="o">[</span><span class="mi">2</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">sort</span><span class="o">);</span>
			<span class="n">x</span><span class="o">=</span><span class="n">sort</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
			<span class="n">y</span><span class="o">=</span><span class="n">sort</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
			<span class="n">r</span><span class="o">=</span><span class="n">sort</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
			<span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">y</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">r</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">r</span><span class="o">==</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">x</span><span class="o">*</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">*</span><span class="n">y</span><span class="o">))</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"right"</span><span class="o">);</span>
			<span class="k">else</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"wrong"</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200303_6.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">입력받은 숫자 중 빗변을 찾는다.</span></strong>
    <ul>
      <li>빗변은 셋 중 가장 큰 값이다.</li>
      <li>Arrays.sort()로 오름차순 정렬한 마지막 값이 빗변이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">피타고라스의 정리를 이용한다.</span></strong>
    <ul>
      <li>r^2=x^2+y^2이므로 Math.sqrt()함수를 이용하여 루트값을 계산한 후 이것이 r과 같은지 확인한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>


</channel>
</rss>
