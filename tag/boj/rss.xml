<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/백준] 1차원 배열: 최댓값</title>
	  <link>/blog//algo-boj2562</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2562</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2562">https://www.acmicpc.net/problem/2562</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>자연수의 값과 인덱스 번호를 둘 다 가지는 클래스 Number를 선언한다.</li>
  <li>Number형 배열을 선언한 후, 값을 넣는다.</li>
  <li>Arrays.sort()로 오름차순 정렬한다. 이때, Comparator을 이용하여 Number형 클래스를 정렬시킨다.</li>
  <li>맨 마지막에 들어가있는 것이 최댓값이다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Number</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">index</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Number</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">index</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">num</span><span class="o">=</span><span class="n">n</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Number</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Number</span><span class="o">[</span><span class="mi">9</span><span class="o">];</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">9</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">num</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Number</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Number</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Number</span> <span class="n">n1</span><span class="o">,</span> <span class="n">Number</span> <span class="n">n2</span><span class="o">){</span>
				<span class="k">return</span> <span class="n">n1</span><span class="o">.</span><span class="na">num</span><span class="o">-</span><span class="n">n2</span><span class="o">.</span><span class="na">num</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">8</span><span class="o">].</span><span class="na">num</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">8</span><span class="o">].</span><span class="na">index</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">자연수의 값과 인덱스를 담는 클래스를 선언한다.</span></strong>
    <ul>
      <li>숫자들을 정렬하면 기존 인덱스가 바뀌기 때문에 미리 저장해두어야한다. 따라서 Number클래스를 생성하여 숫자에 값과 처음 인덱스 번호를 저장한다.</li>
      <li>index는 처음 위치(인덱스)를, num에는 실제 값을 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Number형 배열을 선언하여 값을 저장한다.</span></strong>
    <ul>
      <li>이때 인덱스는 1부터 세므로 i+1이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Arrays.sort()와 Comparator를 이용하여 오름차순 정렬한다.</span></strong>
    <ul>
      <li>배열 array는 Number클래스이므로 Arrays.sort()로 정렬할 수 없다. 어떻게 정렬시킬 것인지 Comparator의 compare을 overrride해야한다.</li>
      <li>Comparator가 다룰 인스턴스의 형은 Number이고, compare()에서 n1, n2의 num을 비교하여 오름차순으로 정렬한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>다른 사람들은 for문으로 숫자를 순회하며 max를 찾을 때마다 index라는 변수를 두어 해당 값도 갱신시키는 방식으로 코드를 짰다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 1: 손익분기점</title>
	  <link>/blog//algo-boj1712</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj1712</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/1712">https://www.acmicpc.net/problem/1712</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>a, b, c는 21억 이하의 자연수로, 이 값을 사칙연산하는 과정에서 int형을 벗어날 수 있으므로 long형으로 선언한다.</li>
  <li>c-b&lt;=0인 경우 손익분기점이 없으므로 -1을 리턴한다.</li>
  <li>아닌 경우, 손익분기점을 구한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">long</span> <span class="n">a</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
		<span class="kt">long</span> <span class="n">b</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
		<span class="kt">long</span> <span class="n">c</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
		
		<span class="k">if</span><span class="o">(</span><span class="n">c</span><span class="o">-</span><span class="n">b</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">)</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"-1"</span><span class="o">);</span>
		<span class="k">else</span><span class="o">{</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">/(</span><span class="n">c</span><span class="o">-</span><span class="n">b</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">long형으로 선언한다.</span></strong>
    <ul>
      <li>a, b, c를 int형에도 담을 수 있지만, 해당 값을 가지고 사칙연산을 수행해야하므로 이 과정에서 int형을 벗어날 수 있다. 따라서 long형에 저장한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 1차원 배열: 최소, 최대</title>
	  <link>/blog//algo-boj10818</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj10818</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/10818">https://www.acmicpc.net/problem/10818</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>n개의 정수를 담을 int형 배열을 생성한다.</li>
  <li>값을 모두 넣은 후, Arrays.sort()를 이용하여 오름차순으로 정렬한다.</li>
  <li>0번째에는 최솟값이, n-1에는 최댓값이 들어가게 된다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">scan</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]+</span><span class="s">" "</span><span class="o">+</span><span class="n">array</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Arrays.sort()를 이용하여 오름차순 정렬한다.</span></strong>
    <ul>
      <li>따라서 맨 앞에는 최솟값이, 맨 마지막에는 최댓값이 저장된다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 1차원 배열: 나머지</title>
	  <link>/blog//algo-boj3052</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj3052</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/3052">https://www.acmicpc.net/problem/3052</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>숫자를 42로 나눈 나머지는 0~41 중 하나의 값을 가지므로 길이가 42인 배열을 선언하여 나머지를 구할 때 마다 해당 인덱스를 ++하여 갯수를 센다.</li>
  <li>마지막으로 배열을 순회하며 해당 인덱스 값이 0이 아닌 갯수를 세어 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">remainder</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">42</span><span class="o">];</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">,</span> <span class="n">remain</span><span class="o">,</span> <span class="n">answer</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">num</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">remain</span><span class="o">=</span><span class="n">num</span><span class="o">%</span><span class="mi">42</span><span class="o">;</span>
			<span class="n">remainder</span><span class="o">[</span><span class="n">remain</span><span class="o">]++;</span>
		<span class="o">}</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">42</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">remainder</span><span class="o">[</span><span class="n">i</span><span class="o">]!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">배열을 이용하여 나머지의 갯수를 센다.</span></strong>
    <ul>
      <li>배열의 인덱스를 나머지라고 생각하고 해당 값을 증가시킨다.</li>
      <li>10개의 숫자 계산이 끝나면, 배열에 0이 아닌 값들은 최소 한 번씩은 발생한 나머지라는 뜻이다.</li>
      <li>따라서 배열값이 0이 아닌 갯수를 세서 출력하면 서로 다른 나머지 값이 몇 개 있는지 알 수 있다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 10951번: while 조건문 사용, 입력이 끝날 때까지?</title>
	  <link>/blog//boj10951</link>
	  <author></author>
	  <pubDate>2019-08-07T09:00:00+09:00</pubDate>
	  <guid>/blog//boj10951</guid>
	  <description><![CDATA[
	     <p>입력이 끝날 때까지 while문을 사용하고 싶다면 어떻게 해야할까?</p>

<p><strong>Scanner의 hasNext()함수를 사용한다!</strong></p>

<p>Scanner이 다음 토큰이 존재하는지 확인한 후 있다면 true를, 없다면 false를 리턴한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">think</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">;</span>

		<span class="k">while</span><span class="o">(</span><span class="n">input</span><span class="o">.</span><span class="na">hasNext</span><span class="o">()){</span>
			<span class="n">a</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">b</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>			
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

	  ]]></description>
	</item>


</channel>
</rss>
