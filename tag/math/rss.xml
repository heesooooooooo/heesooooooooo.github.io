<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/백준] SW 역량 테스트 준비-기초 | 수학: 골드바흐의 추측</title>
	  <link>/blog//algo-boj6588</link>
	  <author></author>
	  <pubDate>2020-04-24T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj6588</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/6588">https://www.acmicpc.net/problem/6588</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>에라토스테네스의 체를 이용해 소수를 판별한다.</li>
  <li>a=3부터 시작하여 b를 정하고 조건에 맞는지 확인한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">boolean</span><span class="o">[]</span> <span class="n">decimal</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="mi">1000001</span><span class="o">];</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">fill</span><span class="o">(</span><span class="n">decimal</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
		<span class="n">decimal</span><span class="o">[</span><span class="mi">0</span><span class="o">]=</span><span class="n">decimal</span><span class="o">[</span><span class="mi">1</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>
		
		<span class="kt">int</span> <span class="n">root</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="mi">1000001</span><span class="o">);</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">root</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(!</span><span class="n">decimal</span><span class="o">[</span><span class="n">i</span><span class="o">])</span> <span class="k">continue</span><span class="o">;</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">1000001</span><span class="o">;</span><span class="n">j</span><span class="o">+=</span><span class="n">i</span><span class="o">)</span>
				<span class="n">decimal</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
			
			<span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="mi">3</span><span class="o">,</span> <span class="n">b</span><span class="o">;</span>
			<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
				<span class="n">b</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="n">a</span><span class="o">;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">b</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Goldbach's conjecture is wrong."</span><span class="o">);</span>
					<span class="k">break</span><span class="o">;</span>
				<span class="o">}</span>
				<span class="k">if</span><span class="o">(</span><span class="n">decimal</span><span class="o">[</span><span class="n">a</span><span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">decimal</span><span class="o">[</span><span class="n">b</span><span class="o">])</span> <span class="o">{</span>
					<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">+</span><span class="s">" = "</span><span class="o">+</span><span class="n">a</span><span class="o">+</span><span class="s">" + "</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
					<span class="k">break</span><span class="o">;</span>
				<span class="o">}</span>
				<span class="k">else</span> <span class="n">a</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
			<span class="o">}</span>
			
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200424_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶<br />
런타임에러는 decimal배열 크기를 잘못 선언해서 났고, 실패는 a도 소수인지 확인하지 않아서 발생했다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">에라토스테네스의 체를 이용해 소수를 구한다</span></strong>
    <ul>
      <li>decimal[]을 true로 초기화한 후, 합성수인 경우 false로 바꾼다.</li>
      <li>2부터 시작하여 합성수가 아니라면 그 배수들을 모두 false로 바꾼다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">a와 b를 구한 후 조건에 맞는지 확인한다</span></strong>
    <ul>
      <li>a는 3부터 시작하므로 3으로 초기화하고, 홀수이므로 a+=2로 a를 계속 확인한다.</li>
      <li>a에 따른 b를 구한 후, a와 b가 decimal[]을 통해 소수임을 확인하면 리턴한다.</li>
      <li>n을 만들 수 있는 방법이 여러 가지라면, b-a가 가장 큰 값을 출력하면 되는데 이때 a가 커질 수록 b-a는 작아지므로 가장 먼저 발견한 a와 b를 출력해주면 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] SW 역량 테스트 준비-기초 | 수학: 최소공배수</title>
	  <link>/blog//algo-boj1934</link>
	  <author></author>
	  <pubDate>2020-04-24T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj1934</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/1934">https://www.acmicpc.net/problem/1934</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>GCD, LCM을 구한다</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">b</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">);</span>
		
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="kt">int</span> <span class="n">gcd</span><span class="o">=</span><span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="o">?</span> <span class="n">gcd</span><span class="o">(</span><span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">):</span><span class="n">gcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span><span class="n">a</span><span class="o">);</span>
			<span class="kt">int</span> <span class="n">lcm</span><span class="o">=</span><span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">/</span><span class="n">gcd</span><span class="o">;</span>
			
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">lcm</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200424_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">GCD를 구한다</span></strong>
    <ul>
      <li>최대공약수는 a&gt;b일 때, a%b=r을 계산하여 r=0이면 b가 최대공약수가 되고, 0이 아니라면 b%r을 다시 계산한다.</li>
      <li>재귀를 통해 r=0이 될 때까지 반복한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">LCM를 구한다</span></strong>
    <ul>
      <li>최소공배수는 a*b/gcd로 구할 수 있다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] SW 역량 테스트 준비-기초 | 수학: GCD 합</title>
	  <link>/blog//algo-boj9613</link>
	  <author></author>
	  <pubDate>2020-04-24T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj9613</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/9613">https://www.acmicpc.net/problem/9613</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>입력받은 수의 모든 경우의 수에 따라 GCD를 구한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">b</span><span class="o">;</span>
		<span class="k">else</span> <span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="o">}</span>
			<span class="kt">long</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
					<span class="n">sum</span><span class="o">+=</span><span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">]&gt;</span><span class="n">array</span><span class="o">[</span><span class="n">k</span><span class="o">]?</span> <span class="n">gcd</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="n">k</span><span class="o">]):</span><span class="n">gcd</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">k</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200424_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶<br />
sum은 int형을 벗어날 수 있으므로 long으로 선언해주어야 한다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">각 테스트 케이스마다 가능한 모든 쌍을 구한다</span></strong>
    <ul>
      <li>2중for문을 돌려 모든 경우의 수를 구한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">GCD를 구한다</span></strong>
    <ul>
      <li>a%b==0이 될때까지 재귀호출하는 방식으로 최대공약수를 구한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 조합 0의 개수</title>
	  <link>/blog//algo-boj2004</link>
	  <author></author>
	  <pubDate>2020-04-06T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2004</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2004">https://www.acmicpc.net/problem/2004</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>nCm=n!/m!(n-m)!이므로 분자 값의 2, 5의 갯수-분모 2, 5의 갯수를 구해서 2와 5 중 작은 값을 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">count</span><span class="o">(</span><span class="kt">long</span> <span class="n">n</span><span class="o">,</span> <span class="kt">long</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">long</span> <span class="n">i</span><span class="o">=</span><span class="n">d</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">*=</span><span class="n">d</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">answer</span><span class="o">+=</span><span class="n">n</span><span class="o">/</span><span class="n">i</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">long</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
		<span class="kt">long</span> <span class="n">m</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextLong</span><span class="o">();</span>
		
		<span class="kt">long</span> <span class="n">five</span><span class="o">=</span><span class="n">count</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
		<span class="kt">long</span> <span class="n">two</span><span class="o">=</span><span class="n">count</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
		
		<span class="n">five</span><span class="o">-=</span><span class="n">count</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
		<span class="n">two</span><span class="o">-=</span><span class="n">count</span><span class="o">(</span><span class="n">m</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
		
		<span class="n">five</span><span class="o">-=</span><span class="n">count</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="n">m</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
		<span class="n">two</span><span class="o">-=</span><span class="n">count</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="n">m</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">two</span><span class="o">,</span> <span class="n">five</span><span class="o">));</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200406_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶ 
첫 번째 실패는 마지막 two계산에서 -를 빼먹었기 때문이다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">분모, 분자 별 2, 5가 몇 번 나오는지 확인한다</span></strong>
    <ul>
      <li>끝자리 0의 갯수를 구해야 하므로 10의 배수가 몇 개인지 체크하면 된다.</li>
      <li>10의 배수는 2, 5로 만들어지므로 두 갯수 중 최솟값을 취하면 된다.</li>
      <li>분모 갯수-분자 갯수한 2, 5 값 중 최솟값을 리턴한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[백준 2004]조합 0의 개수 (Java) <a href="https://kim6394.tistory.com/185">https://kim6394.tistory.com/185</a></li>
  <li>[백준알고리즘] 2004번: 조합 0의 개수 -Java</li>
</ul>

<p>출처: https://suri78.tistory.com/45 [공부노트] <a href="https://suri78.tistory.com/45">https://suri78.tistory.com/45</a></p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 패션왕 신해빈</title>
	  <link>/blog//algo-boj9375</link>
	  <author></author>
	  <pubDate>2020-04-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj9375</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/9375">https://www.acmicpc.net/problem/9375</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>HashMap을 이용하여 종류별 의상 갯수를 센다.</li>
  <li><code class="highlighter-rouge">(종류1+1)*(종류2+1)*...*(종류n+1)-1</code>을 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">=</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="n">String</span> <span class="n">name</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
				<span class="n">String</span> <span class="n">kind</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
				<span class="k">if</span><span class="o">(</span><span class="n">map</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">kind</span><span class="o">))</span> <span class="o">{</span>
					<span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">kind</span><span class="o">);</span>
					<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">kind</span><span class="o">,</span> <span class="n">idx</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
				<span class="o">}</span>
				<span class="k">else</span> <span class="o">{</span>
					<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">kind</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
				<span class="o">}</span>
			<span class="o">}</span>
			<span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">value:</span> <span class="n">map</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">answer</span><span class="o">*=</span><span class="n">value</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
			<span class="o">}</span>
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200405_3.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">공식을 찾는다</span></strong>
    <ul>
      <li>의상 종류 별 수+1한 값을 모두 곱한 값에 -1하면 정답이 나온다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">HashMap을 이용한다</span></strong>
    <ul>
      <li>의상 종류를 key, 그 갯수를 value로 하여 새로운 의상이 나오면 키를 부여하고, 기존에 존재하는 의상 종류이면 value+1하여 종류별 갯수를 센다.</li>
      <li>map.values()함수를 이용하여 해시맵에 들어있는 모든 values를 하나씩 조회하며 해당 value+1한 값을 곱한다.</li>
      <li>모든 곱에서 -1한 값을 출력한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>자바 백준 9375번 패션왕 신해빈 <a href="https://oper6210.tistory.com/133">https://oper6210.tistory.com/133</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 팩토리얼 0의 개수</title>
	  <link>/blog//algo-boj1676</link>
	  <author></author>
	  <pubDate>2020-04-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj1676</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/1676">https://www.acmicpc.net/problem/1676</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>n!의 뒤에서부터 0이 아닌 숫자가 나올 때 까지 0의 갯수는 10의 배수가 몇 개인지 찾으면 된다.</li>
  <li>10의 배수를 만들 수 있는 2 또는 5의 인수의 갯수를 구한 후 그 중 최솟값을 리턴한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		
		<span class="kt">int</span> <span class="n">two</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">*=</span><span class="mi">2</span><span class="o">)</span>
			<span class="n">two</span><span class="o">+=</span><span class="n">n</span><span class="o">/</span><span class="n">i</span><span class="o">;</span>
		
		<span class="kt">int</span> <span class="n">five</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">5</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">*=</span><span class="mi">5</span><span class="o">)</span>
			<span class="n">five</span><span class="o">+=</span><span class="n">n</span><span class="o">/</span><span class="n">i</span><span class="o">;</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">two</span><span class="o">,</span> <span class="n">five</span><span class="o">));</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200405_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">n까지의 2, 5가 몇 번 나오는지 확인한다</span></strong>
    <ul>
      <li>5의 갯수는 n/5이다.</li>
      <li>그런데 25, 50, 75, 100..과 같이 5가 중복되는 것도 잇으므로 i를 5의 배수만큼 증가시키면서 n/i의 값을 더해준다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>백준 1676번 팩토리얼 0의 개수 문제 풀이 ( Java ) <a href="https://takeknowledge.tistory.com/94">https://takeknowledge.tistory.com/94</a></li>
  <li>[BaekJoon][1676] 팩토리얼 0의 개수 <a href="https://ksj14.tistory.com/entry/BackJoon1676-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-0%EC%9D%98-%EA%B0%9C%EC%88%98">https://ksj14.tistory.com/entry/BackJoon1676-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-0%EC%9D%98-%EA%B0%9C%EC%88%98</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 이항 계수 2</title>
	  <link>/blog//algo-boj11051</link>
	  <author></author>
	  <pubDate>2020-04-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj11051</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/11050">https://www.acmicpc.net/problem/11050</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>nCk를 구하되, DP를 이용한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[][]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">1001</span><span class="o">][</span><span class="mi">1001</span><span class="o">];</span>
		
		<span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">]=</span><span class="mi">1</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">1001</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="o">||</span><span class="n">j</span><span class="o">==</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>
					<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="mi">1</span><span class="o">;</span>
				<span class="o">}</span>
				<span class="k">else</span> <span class="o">{</span>
					<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
				<span class="o">}</span>
				
				<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]%=</span><span class="mi">10007</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">k</span><span class="o">]);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200405_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶ 
런타임 에러는 오버플로우가 발생한 것 같고, 두 번째는 10007로 나눈 나머지를 구하지 않아 틀렸다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">DP를 이용하여 이항 계수를 구한다</span></strong>
    <ul>
      <li>팩토리얼을 계산할 N의 범위가 1000까지이므로 DP를 이용한다. 작은 수부터 차례대로 구해서 메모리에 저장하여 값을 사용하면 빠르게 값을 구할 수 있다.</li>
      <li>파스칼의 삼각형을 이용한다. nCk=(n-1)C(k-1)+(n-1)Ck</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[백준 알고리즘] 11051번(이항 계수Ⅱ) <a href="https://nackwon.tistory.com/57">https://nackwon.tistory.com/57</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 이항 계수 1</title>
	  <link>/blog//algo-boj11050</link>
	  <author></author>
	  <pubDate>2020-04-05T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj11050</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/11050">https://www.acmicpc.net/problem/11050</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>nCk를 구한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">factorial</span><span class="o">(</span><span class="n">n</span><span class="o">)/(</span><span class="n">factorial</span><span class="o">(</span><span class="n">k</span><span class="o">)*</span><span class="n">factorial</span><span class="o">(</span><span class="n">n</span><span class="o">-</span><span class="n">k</span><span class="o">)));</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">factorial</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">x</span><span class="o">;</span><span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
			<span class="n">answer</span><span class="o">*=</span><span class="n">i</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200405_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">이항 계수를 구한다.</span></strong>
    <ul>
      <li>이항 계수(N K)는 nCk와 같다.</li>
      <li>nCk=n!/(k!*(n-k)!)이다.</li>
      <li>팩토리얼을 구하는 함수를 따로 빼서 계산한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 검문</title>
	  <link>/blog//algo-boj2981</link>
	  <author></author>
	  <pubDate>2020-04-04T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2981</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2981">https://www.acmicpc.net/problem/2981</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>숫자들을 오름차순 정렬한 후, 좌우값의 최대공약수를 구한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">);</span>
		
		<span class="kt">int</span> <span class="n">gcd</span><span class="o">=</span><span class="n">array</span><span class="o">[</span><span class="mi">1</span><span class="o">]-</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">gcd</span><span class="o">=</span><span class="n">gcd</span><span class="o">(</span><span class="n">gcd</span><span class="o">,</span> <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
		<span class="o">}</span>
		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">gcd</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">gcd</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span>
				<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="s">" "</span><span class="o">);</span>
		<span class="o">}</span>
		
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">gcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span>
			<span class="k">return</span> <span class="n">b</span><span class="o">;</span>
		<span class="k">else</span>
			<span class="k">return</span> <span class="nf">gcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>


</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200404_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶<br />
처음에는 최대공약수를 사용하지 않았더니 시간초과와 실패가 떴다.</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">최대공약수를 구한다</span></strong>
    <ul>
      <li>숫자들을 오름차순으로 배열한 후 좌우간의 최대공약수를 구한다.</li>
      <li>array[i]=m1Xt1+r, array[i-1]=m2Xt2+r이므로 array[i]-array[i-1]은 나머지가 없는 형태로 쓸 수 있다.</li>
      <li>따라서 array[i]-array[i-1]의 최대공약수와, 이전에 구했던 최대공약수를 비교하여 최대공약수를 다시 찾으면 된다.</li>
      <li>최종적으로 구한 최대공약수의 약수를 모두 출력하면 그것이 정답이 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>[백준2981번] 검문 <a href="https://hooongs.tistory.com/77">https://hooongs.tistory.com/77</a></li>
  <li>#백준_2981 검문 - Java 자바 <a href="https://ukyonge.tistory.com/121?category=870877">https://ukyonge.tistory.com/121?category=870877</a></li>
</ul>


	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 수학 3: 링</title>
	  <link>/blog//algo-boj3036</link>
	  <author></author>
	  <pubDate>2020-04-04T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj3036</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/3036">https://www.acmicpc.net/problem/3036</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>숫자를 배열에 저장한 후, array[0]과 array[i]의 최대공약수를 구해서 해당 값을 나눈 후 기약분수 형태로 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>
<span class="cm">/**
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// TODO Auto-generated method stub</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="kt">int</span> <span class="n">gcd</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]&lt;</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
				<span class="n">gcd</span><span class="o">=</span><span class="n">getGcd</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
			<span class="k">else</span>
				<span class="n">gcd</span><span class="o">=</span><span class="n">getGcd</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
			
			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]/</span><span class="n">gcd</span><span class="o">+</span><span class="s">"/"</span><span class="o">+</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]/</span><span class="n">gcd</span><span class="o">);</span>
		<span class="o">}</span>
	<span class="o">}</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getGcd</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span>
			<span class="k">return</span> <span class="n">b</span><span class="o">;</span>
		<span class="k">else</span>
			<span class="k">return</span> <span class="nf">getGcd</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200404_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">최대공약수를 구한다</span></strong>
    <ul>
      <li>array[0]과 나머지 값들을 비교하며 출력한다.</li>
      <li>array[0], array[i]의 최대공약수를 구한 후, 최대공약수로 나누면 첫 번째 링에 대해 돌린 횟수를 알 수 있다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>


</channel>
</rss>
