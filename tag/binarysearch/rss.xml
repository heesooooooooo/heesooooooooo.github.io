<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 이분탐색_예산</title>
	  <link>/blog//algo-prog43237</link>
	  <author></author>
	  <pubDate>2019-12-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog43237</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/43237">https://programmers.co.kr/learn/courses/30/lessons/43237</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>budgets를 오름차순 정렬한다.</li>
  <li>배열의 요청금액 합&lt;=M이면 제일 큰 값(최대의 예산을 리턴해야하므로)을 리턴한다.</li>
  <li>아니라면 이분탐색을 통해 중간값을 찾는다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">budgets</span><span class="o">,</span> <span class="kt">int</span> <span class="n">M</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">budgets</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">long</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">min</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="n">budgets</span><span class="o">[</span><span class="n">budgets</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">preMid</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">bgt:</span><span class="n">budgets</span><span class="o">){</span>
            <span class="n">sum</span><span class="o">+=</span><span class="n">bgt</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">&lt;=</span><span class="n">M</span><span class="o">)</span> <span class="k">return</span> <span class="n">budgets</span><span class="o">[</span><span class="n">budgets</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span><span class="c1">//요청금액 그대로 배정 가능하므로 제일 큰 예산 리턴</span>

        <span class="c1">//모든 요청이 배정될 수 없는 경우</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
            <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
            <span class="n">mid</span><span class="o">=(</span><span class="n">min</span><span class="o">+</span><span class="n">max</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">preMid</span><span class="o">==</span><span class="n">mid</span><span class="o">){</span><span class="c1">//중간값 변동이 없다면</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">bgt:</span><span class="n">budgets</span><span class="o">){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">bgt</span><span class="o">&gt;</span><span class="n">mid</span><span class="o">)</span> <span class="n">sum</span><span class="o">+=</span><span class="n">mid</span><span class="o">;</span><span class="c1">//상한값보다 요청금액이 크면 상한값을 배정</span>
                <span class="k">else</span> <span class="n">sum</span><span class="o">+=</span><span class="n">bgt</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">&gt;</span><span class="n">M</span><span class="o">)</span> <span class="n">max</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span>
            <span class="k">else</span> <span class="n">min</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span>
            <span class="n">preMid</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191208_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">모든 예산요청을 배정할 수 있다면 최댓값을 리턴한다.</span></strong>
    <ul>
      <li>요청한 금액을 그대로 배정하므로 제일 큰 예산인 budgets[마지막]을 리턴한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">이분탐색을 통해 상한액을 찾는다.</span></strong>
    <ul>
      <li>중간값을 계산하고, 배열을 순회하며 중간값보다 금액이 크다면 중간값을 부여한다.</li>
      <li>총액이 M을 넘어간다면 max를 mid으로 조정, 반대라면 min을 mid로 조정한다.</li>
      <li>mid의 값 변동이 없을 때까지 반복한다.</li>
      <li><span style="color:red">이때 min의 초기값은 0 또는 배열총액/갯수로 해야한다.</span> 배열의 첫 번째 값(최솟값)으로 초기화했더니 테스트9에서 실패했다. 최저예산&gt;(총예산/도시수)일 경우라는데 무슨 말인지 잘 모르겠고 그냥 최솟값이니까 0으로 초기화하는게 제일 깔끔한 것 같다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>이분탐색 코드는 어렵지 않은데 문제를 보면 이게 이분탐색 문제라는게 감이 안온다. 문제 유형 없었으면 전혀 몰랐을 듯.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 이분탐색_입국심사</title>
	  <link>/blog//algo-prog43238</link>
	  <author></author>
	  <pubDate>2019-12-08T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog43238</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/43238">https://programmers.co.kr/learn/courses/30/lessons/43238</a></p>

<h2 id="-ᐛ-و-도전"><span style="color:navy">( ᐛ )و 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>심사관들에게 주어지는 시간을 이분탐색으로 찾는다.</li>
  <li>어떤 시간이 주어졌을 때, 심사관들이 몇 명을 심사할 수 있는지 계산하여 n보다 크면 시간을 줄이고, n보다 작으면 시간을 늘린다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">long</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">times</span><span class="o">)</span> <span class="o">{</span>
         <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">times</span><span class="o">);</span>
         <span class="kt">long</span> <span class="n">min</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="c1">//최적의 경우 1초로 초기화</span>
         <span class="kt">long</span> <span class="n">max</span><span class="o">=(</span><span class="kt">long</span><span class="o">)</span><span class="n">times</span><span class="o">[</span><span class="n">times</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]*</span><span class="n">n</span><span class="o">;</span><span class="c1">//최악의 경우로 초기화</span>
         <span class="kt">long</span> <span class="n">mid</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">long</span> <span class="n">sum</span><span class="o">;</span>
         <span class="kt">long</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">max</span><span class="o">;</span>
         <span class="k">while</span><span class="o">(</span><span class="n">min</span><span class="o">&lt;=</span><span class="n">max</span><span class="o">){</span>
             <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
             <span class="n">mid</span><span class="o">=(</span><span class="n">min</span><span class="o">+</span><span class="n">max</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">time:</span><span class="n">times</span><span class="o">){</span>
                 <span class="n">sum</span><span class="o">+=</span><span class="n">mid</span><span class="o">/</span><span class="n">time</span><span class="o">;</span><span class="c1">//심사관 당 맡을 수 있는 입국자 수</span>
             <span class="o">}</span>
             <span class="k">if</span><span class="o">(</span><span class="n">sum</span><span class="o">&gt;=</span><span class="n">n</span><span class="o">){</span><span class="c1">//더 맡을 수 있으므로 시간 줄임</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">mid</span><span class="o">&lt;</span><span class="n">answer</span><span class="o">){</span>
                     <span class="n">answer</span><span class="o">=</span><span class="n">mid</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">mid</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>                
             <span class="o">}</span>
             <span class="k">else</span><span class="o">{</span><span class="c1">//불가하므로 시간 늘림</span>
                 <span class="n">min</span><span class="o">=</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191208_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">long max의 초기화에서 (long)으로 형변환이 필요하다.</span></strong>
    <ul>
      <li>이것 때문에 테스트3,5,7,8에서 실패했다.</li>
      <li>배열 times와 n은 모두 int형이고 두 곱이 int형을 초과할 수 있으므로 long 형변환이 필요하다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">mid가 주어졌을 때, 심사관 당 맡을 수 있는 입국자 수를 계산한다.</span></strong>
    <ul>
      <li>심사관 당 맡을 수 있는 입국자 수=추정시간 값/심사관 당 심사시간.</li>
      <li>모든 사람이 심사를 받는데 걸리는 시간을 mid라 할 때, mid당 심사위원들의 심사인원 수가 n보다 크다면 시간을 줄이고, 작다면 시간을 늘린다.</li>
      <li>이때 mid안에 n명 심사가 가능하다면 answer과 mid 중 최솟값을 저장한다.</li>
    </ul>
  </li>
</ol>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>아직 이분탐색 문제의 유형을 잘 모르겠다. 언젠가는 감이 오겠지…?</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스] 입국심사 <a href="https://greenapple16.tistory.com/49">https://greenapple16.tistory.com/49</a></li>
  <li>프로그래머스_입국심사 <a href="https://woongsin94.tistory.com/185">https://woongsin94.tistory.com/185</a></li>
  <li>이분탐색(binary search) <a href="https://webfirewood.tistory.com/108">https://webfirewood.tistory.com/108</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
