<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[Github블로그/Jekyll] Liquid Exception: Liquid syntax error 해결</title>
	  <link>/blog//gitblog-sol-jekyll02</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//gitblog-sol-jekyll02</guid>
	  <description><![CDATA[
	     <p><img src="./assets/images/191112_6.PNG" alt="결과화면" /></p>

<h3 id="원인">원인</h3>
<p>Jekyll에서 사용되는 liquid는 <code class="highlighter-rouge">{{</code>와 <code class="highlighter-rouge">}}</code>를 escape 문자로 사용하는데, md문서에 {{, }}가 있는 경우 에러 메시지를 출력한다.</p>

<h3 id="해결-방법">해결 방법</h3>
<p><img src="./assets/images/191112_5.PNG" alt="결과화면" /><br />
위와 같이 여는 중괄호가 시작하기 전에 raw를, 뒤에는 endraw를 추가한다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>Jekyll에서 liquid warning 처리 <a href="http://jmjeong.com/escape-in-liquid-syntax/">http://jmjeong.com/escape-in-liquid-syntax/</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[Github블로그] 포스트 날짜 불일치, 지킬 로드 시 포스터가 생성 안 되는 문제</title>
	  <link>/blog//gitblog-sol-date</link>
	  <author></author>
	  <pubDate>2019-11-01T09:00:00+09:00</pubDate>
	  <guid>/blog//gitblog-sol-date</guid>
	  <description><![CDATA[
	     <!-- 여태까지 지킬을 이용하며 갓 작성한 포스트는 하루 정도 지나야 로컬에서 확인할 수 있었다. md로 작성한 새 파일이 바로 html로 변환되지 않는 게 이상하다 느꼈지만 그냥 넘겼었다.

오늘 무의식 중에 블로그에서 포스트 작성 날짜를 보았는데 md에 date로 입력한 날짜들보다 하루씩 늦게 되있었다.

자세히는 안 찾아봤지만 블로그 시간이 영국을 기준으로 해서 영국 시간보다 빠른 한국 시간을 date로 썼으니 지킬딴엔 예약 포스트인 줄 알고 업로드를 안 해준 것이다.

쓸데없이 똑똑해,, 혹시 지킬로 확인할 때 포스터가 생성되지 않는다면 date를 확인해보자. 앞으로는 date에 구체적인 시 분 초는 생략하고 00:00:00으로 통일해야겠다. -->
<p>내가 date에 적는 날짜 +09:00된다는 것을 몰랐다…
대충 sitemap.xml 만들면서 알게 됐다</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/예외처리] java.util.ConcurrentModificationException</title>
	  <link>/blog//java-exception01</link>
	  <author></author>
	  <pubDate>2019-11-01T09:00:00+09:00</pubDate>
	  <guid>/blog//java-exception01</guid>
	  <description><![CDATA[
	     <p><img src="./assets/images/191101_2.PNG" alt="결과화면" /></p>

<h3 id="예시">예시</h3>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="k">for</span><span class="o">(</span><span class="n">Truck</span> <span class="nl">t:</span><span class="n">q</span><span class="o">){</span><span class="c1">//1초 추가</span>
    <span class="n">t</span><span class="o">.</span><span class="na">time</span><span class="o">++;</span>
    <span class="n">answer</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">t</span><span class="o">.</span><span class="na">time</span><span class="o">==</span><span class="n">bridge_length</span><span class="o">){</span><span class="c1">//경과시간이 다 채워지면 삭제</span>
        <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<p>코드 설명: for문을 통해 Queue<Truck> q를 순회한다. if 조건에 맞다면 큐의 값을 삭제한다.</Truck></p>

<h3 id="원인">원인</h3>
<p>for문과 같은 루프문을 통해 데이터를 접근하는 도중에, 데이터 변경이 일어날 때 발생한다.</p>

<h3 id="해결-방법">해결 방법</h3>
<p>Iterator를 사용하여 큐의 원소에 접근, 삭제한다.</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="n">Iterator</span> <span class="n">iter</span><span class="o">=</span><span class="n">q</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>
<span class="k">while</span><span class="o">(</span><span class="n">iter</span><span class="o">.</span><span class="na">hasNext</span><span class="o">()){</span>
    <span class="n">Truck</span> <span class="n">t</span><span class="o">=(</span><span class="n">Truck</span><span class="o">)</span><span class="n">iter</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
    <span class="n">t</span><span class="o">.</span><span class="na">time</span><span class="o">++;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">t</span><span class="o">.</span><span class="na">time</span><span class="o">==</span><span class="n">bridge_length</span><span class="o">){</span>
        <span class="n">iter</span><span class="o">.</span><span class="na">remove</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></pre></td></tr></tbody></table></code></pre></figure>

<p>iterator()메소드를 이용해 iter를 선언, hasNext()로 현재 iter의 다음 원소가 있는지 파악한 후 있다면 next()로 값을 가져온다. remove()로 원소를 삭제한다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[Github블로그] 블로그에 코드 적용이 안될 때, 프로젝트 주소 페이지는 브랜치 체크</title>
	  <link>/blog//gitblog-sol-branch</link>
	  <author></author>
	  <pubDate>2019-09-06T09:00:00+09:00</pubDate>
	  <guid>/blog//gitblog-sol-branch</guid>
	  <description><![CDATA[
	     <p>미루고 미루던 유저네임을 변경했다.</p>

<p>덕분에 블로그 css가 또 망가졌다.</p>

<p>F12로 블로그를 체크해보니 경로주소가 자꾸 이상한 곳을 가리키고 난 분명히 baseurl 바꿨는데 config.yml에 정보를 가져다 쓰지 않고 갓 fork할 때 본 초기 블로그 모습을 보여줬다.</p>

<p>몇 시간의 구글링 결과 branch가 잘못되었음을 확인하였다.</p>

<p>프로젝트 주소 페이지의 경우(USERNAME.github.io/repo) push할 때 gh-page 브랜치를 이용해야한다.</p>

<p>아무튼 해결 방법은 너무 간단해서 화가 났다^.^</p>

<p><strong>setting에서 브랜치를 마스터로만 바꿔주면 된다!</strong></p>

<p><img src="./assets/images/190906_1.PNG" alt="setting" />
레파지토리의 setting을 클릭 후</p>

<p><img src="./assets/images/190906_2.PNG" alt="branch" />
아래로 스크롤을 내려서 gh-pages branch를 master로 바꿔주면 된다.</p>

<p>후…이제 css깨지는 건 해결했고 카테고리가 왜 안되는지 찾아야한다. 아무것도 건드린게 없는데 왜 404인지 정말 모르겠다. 울고 싶다…</p>

<p><span style="color:red">2019.09.09 추가</span>
웬만하면 프로젝트형 주소를 사용할 경우 gh-pages를 쓰자.
필수는 아니지만 암묵적인 룰인듯?
내 블로그의 경우 md형 포스트는 master에, jekyll로 실행한 후의 결과물은 gh-pages에 올려서 블로그를 운영하기로 결정했다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[Github블로그] 블로그에 css 적용이 안될 때, 깨질 때 해결 방법</title>
	  <link>/blog//gitblog-css-problem</link>
	  <author></author>
	  <pubDate>2019-09-05T09:00:00+09:00</pubDate>
	  <guid>/blog//gitblog-css-problem</guid>
	  <description><![CDATA[
	     <p>Github 블로그를 fork하여 개설하는 과정에서 css가 깨지는 현상을 목격하였다. 메인 홈에서는 아무런 문제가 없었지만 다른 카테고리에서는 전부 css 적용이 안됐다.</p>

<p>원인: 기존의 작성된 경로와 fork를 딴 후 나의 경로는 다르기 때문에 파일 경로를 찾지 못해 오류가 발생한다.</p>

<p>따라서 <strong>baseurl의 주소를 변경해야한다</strong></p>

<p>해결 방법:
config.yml파일의 baseurl을 repo이름으로 바꾼다.
나의 경우 baseurl:/blog/가 되는 것이다.</p>

<p>그래도 잘 모르겠다면
<a href="https://stackoverflow.com/questions/25466166/stylesheets-not-working-for-jekyll-theme-freelancer-bootstrap">https://stackoverflow.com/questions/25466166/stylesheets-not-working-for-jekyll-theme-freelancer-bootstrap</a>
을 참고하자</p>

<p>—-2019.09.06 추가—-
보통 baseurl은 ““나 /를 통해 공백으로 두는 경우가 대부분인데, 나와 같이 repo의 이름으로 작성해야하는 경우는
블로그가 프로젝트 주소 페이지로 생성되었기 때문이다.</p>

<p><a href="https://nolboo.kim/blog/2013/10/15/free-blog-with-github-jekyll/">https://nolboo.kim/blog/2013/10/15/free-blog-with-github-jekyll/</a>
를 참고하면 github블로그 주소 생성 방식이 USERNAME.github.io 형태나 USERNAME.github.io/repo 형태가 있다는 것을 확인할 수 있다.</p>

	  ]]></description>
	</item>


</channel>
</rss>
