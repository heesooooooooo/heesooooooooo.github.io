<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>(◍•ᴗ•◍)</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/프로그래머스] 완전탐색_숫자 야구</title>
	  <link>/blog//algo-prog42841</link>
	  <author></author>
	  <pubDate>2019-11-18T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42841</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42841">https://programmers.co.kr/learn/courses/30/lessons/42841</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>3자리 숫자를 모두 생성해 스택에 저장한다.</li>
  <li>스택에서 하나 뽑아서 baseball 숫자와 비교하여 카운트한 strike와 ball이 baseball배열값과 같은지 확인한다.</li>
  <li>같다면 answer++후 다음 baseball숫자를 비교, 다르다면 다음 스택 값을 뽑는다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Stack</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">makeNum</span><span class="o">(</span><span class="n">Stack</span> <span class="n">st</span><span class="o">){</span><span class="c1">//중복없는 3자리 숫자 생성</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="mi">9</span><span class="o">;</span><span class="n">k</span><span class="o">++){</span>
                     <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">!=</span><span class="n">j</span><span class="o">&amp;&amp;</span><span class="n">j</span><span class="o">!=</span><span class="n">k</span><span class="o">&amp;&amp;</span><span class="n">k</span><span class="o">!=</span><span class="n">i</span><span class="o">){</span>
                         <span class="n">st</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="mi">100</span><span class="o">*</span><span class="n">i</span><span class="o">+</span><span class="mi">10</span><span class="o">*</span><span class="n">j</span><span class="o">+</span><span class="n">k</span><span class="o">));</span>
                     <span class="o">}</span>
                 <span class="o">}</span>
             <span class="o">}</span>
         <span class="o">}</span>
     <span class="o">}</span>
     <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">check</span><span class="o">(</span><span class="n">String</span> <span class="n">num</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">baseball</span><span class="o">){</span>
         <span class="n">String</span> <span class="n">base</span><span class="o">=</span><span class="s">""</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">strike</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">ball</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">baseball</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">base</span><span class="o">=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">baseball</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]);</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)==</span><span class="n">base</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)){</span><span class="c1">//스트라이크 체크</span>
                     <span class="n">strike</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">base</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">num</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">)))){</span><span class="c1">//볼 체크</span>
                     <span class="n">ball</span><span class="o">++;</span>
                 <span class="o">}</span>
             <span class="o">}</span>
             <span class="n">ball</span><span class="o">=</span><span class="n">ball</span><span class="o">-</span><span class="n">strike</span><span class="o">;</span><span class="c1">//스트라이크와 볼은 겹치지 않으므로</span>
             <span class="k">if</span><span class="o">(</span><span class="n">strike</span><span class="o">!=</span><span class="n">baseball</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">]||</span><span class="n">ball</span><span class="o">!=</span><span class="n">baseball</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">]){</span>
                 <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
             <span class="o">}</span>
             <span class="n">strike</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
             <span class="n">ball</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
     <span class="o">}</span>
     <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">baseball</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
         <span class="n">Stack</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="o">&lt;&gt;();</span>
         <span class="n">String</span> <span class="n">num</span><span class="o">;</span>
         <span class="kt">boolean</span> <span class="n">chk</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
         <span class="n">makeNum</span><span class="o">(</span><span class="n">st</span><span class="o">);</span>
         <span class="k">while</span><span class="o">(!</span><span class="n">st</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
             <span class="n">num</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
             <span class="k">if</span><span class="o">(</span><span class="n">check</span><span class="o">(</span><span class="n">num</span><span class="o">,</span> <span class="n">baseball</span><span class="o">)){</span>
                 <span class="n">answer</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">public boolean check(string num, int[][] baseball)</code>
    <ul>
      <li>String base: baseball의 비교할 숫자를 저장한다.</li>
      <li>int strike, ball: 스트라이크와 볼 수를 저장한다.</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">public int solution(int[][] baseball)</code>
    <ul>
      <li>Stack<String> st: 1부터 9까지 중복없이 숫자를 조합해 스택에 저장한다. int형으로 저장하면 각 자리마다 비교하기 불편하므로 String으로 저장해 charAt()을 사용한다.</String></li>
      <li>String num: 스택에서 pop()한 값을 저장하는 변수이다.</li>
      <li>boolean chk: check()메소드의 리턴값을 저장하는 변수이다.</li>
    </ul>
  </li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<ul>
  <li><code class="highlighter-rouge">public void makeNum(Stack st)</code>: 1부터 9까지 각자 서로 다른 숫자를 조합해 3자리 숫자를 만든다. for문을 3개 돌려서 i, j, k가 서로 같지 않을때 3자리 숫자로 만들고, 이를 String형으로 변환해 스택에 저장한다.</li>
  <li><code class="highlighter-rouge">public boolean check(String num, int[][] baseball)</code>: 처음 for문을 통해 baseball을 순회한다. base에는 현재 i행의 세자리 수를 저장한다.<br />
두번째 for문에서는 num(스택에서 추출한 값)과 base(baseball에서 추출)의 스트라이크와 볼을 체크한다. 첫번째 if문은 스트라이크를 체크한다. 두 숫자의 현재 자릿수가 같다면 strike++한다. 두번째 if문은 볼을 체크한다. base에 num의 현재 자리의 숫자가 존재한다면 ball++한다.<br />
스트라이크와 볼 계산이 끝났다면 ball에서 strike만큼 뺀다. 문제에서 스트라이크와 볼은 중복되어 계산하지 않았기 때문이다. num=”324”, base=”123”일 때, base가 num의 숫자를 포함하는 갯수는 2이지만(“3”,”2”) ball은 1로 저장한다. 왜냐하면 두번째 자릿수가 같은 것은 strike를 통해 1로 계산했기 때문이다.<br />
이로써 최종 strike, ball이 확정되었으므로 baseball의 값과 같은지 비교, 하나라도 다르다면 다음 baseball을 확인할 가치도 없으므로 false를 리턴한다.<br />
같다면 다음 비교를 위해 strike, ball을 초기화하고 다음으로 넘어간다.</li>
  <li><code class="highlighter-rouge">public int solution(int[][] baseball)</code>: 숫자들을 저장할 스택을 생성하고 makeNum()을 통해 가능한 숫자들을 모두 생성해 저장한다.<br />
while()문을 통해 스택안의 값을 하나씩 뽑아서, check()를 통해 스택에서 뽑은 값과 baseball을 인자로 넘겨 스트라이크와 볼을 계산한다. true를 리턴받아오면 해당 num은 정답이 가능한 수이므로 answer++한다.</li>
</ul>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191117_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>처음 접근이 어려웠다. 다른 사람들은 어떻게 풀었는지 대충 읽어보고 이해한 후 거기에 맞춰서 코드를 작성했다. 코드 작성은 어렵지 않은데 코딩 방향을 생각해내는게 어렵다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스 알고리즘] 2단계 숫자야구 -완전탐색 <a href="https://lkhlkh23.tistory.com/71">https://lkhlkh23.tistory.com/71</a></li>
  <li>BruteForceSearch programmers 프로그래머스 알고리즘 자바 ‘숫자야구’ 문제풀이 <a href="https://geehye.github.io/programmers-brute-force-search-04/#">https://geehye.github.io/programmers-brute-force-search-04/#</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 완전탐색_소수 찾기</title>
	  <link>/blog//algo-prog42839</link>
	  <author></author>
	  <pubDate>2019-11-17T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42839</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42839">https://programmers.co.kr/learn/courses/30/lessons/42839</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>String형 numbers를 쪼개서 int형으로 배열에 저장한다.</li>
  <li>만들 수 있는 숫자를 모두 생성한다=&gt;조합 이용.</li>
  <li>소수 체크해서 갯수를 센다=&gt;에라토스테네스의 체 이용.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="n">String</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">strArr</span><span class="o">=</span><span class="n">numbers</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">""</span><span class="o">);</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">numArr</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">strArr</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">numArr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">numArr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">strArr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">Set</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">set</span><span class="o">=</span><span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span>
        <span class="c1">//1부터 만들 수 있는 최대 길이까지 숫자 조합</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">numArr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">perm</span><span class="o">(</span><span class="n">strArr</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">set</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">set</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">perm</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="n">depth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">,</span> <span class="n">Set</span> <span class="n">set</span><span class="o">){</span><span class="c1">//숫자 조합</span>
        <span class="k">if</span><span class="o">(</span><span class="n">depth</span><span class="o">==</span><span class="n">k</span><span class="o">){</span><span class="c1">//원하는 k개의 숫자가 세팅됐으므로 더이상 순열생성X</span>
            <span class="n">print</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">k</span><span class="o">,</span> <span class="n">set</span><span class="o">);</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span><span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">depth</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
                <span class="n">swap</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">depth</span><span class="o">);</span>
                <span class="n">perm</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">depth</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">k</span><span class="o">,</span> <span class="n">set</span><span class="o">);</span>
                <span class="n">swap</span><span class="o">(</span><span class="n">arr</span><span class="o">,</span> <span class="n">i</span><span class="o">,</span> <span class="n">depth</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">swap</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
        <span class="n">String</span> <span class="n">temp</span><span class="o">=</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="n">temp</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">arr</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">,</span> <span class="n">Set</span> <span class="n">set</span><span class="o">){</span><span class="c1">//숫자 연결</span>
        <span class="n">StringBuilder</span> <span class="n">s</span><span class="o">=</span><span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">k</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="c1">//System.out.print(arr[i]);</span>
            <span class="n">s</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span><span class="c1">//숫자연결하기</span>
        <span class="o">}</span>
        <span class="c1">//System.out.println();</span>
        <span class="n">primeNumber</span><span class="o">(</span><span class="n">set</span><span class="o">,</span> <span class="n">s</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">primeNumber</span><span class="o">(</span><span class="n">Set</span> <span class="n">set</span><span class="o">,</span> <span class="n">StringBuilder</span> <span class="n">s</span><span class="o">){</span><span class="c1">//소수 체크</span>
        <span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">s</span><span class="o">));</span>
        <span class="kt">boolean</span> <span class="n">prime</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">&lt;=</span><span class="mi">1</span><span class="o">){</span>
            <span class="k">return</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">num</span><span class="o">);</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="o">){</span>
                <span class="n">prime</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">prime</span><span class="o">){</span>
            <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">num</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li><code class="highlighter-rouge">public int solution(String numbers)</code>
    <ul>
      <li>String[] strArr: numbers를 하나씩 쪼개서 배열에 저장한다.</li>
      <li>int[] numArr: 쪼갠 strArr를 int형을 변환한다.</li>
      <li>Set<Integer> set: 생성한 숫자들은 중복될 수 있으므로 HashSet을 이용하여 중복을 제거한다.</Integer></li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">public void perm(String[] arr, int depth, int k, Set set)</code>
    <ul>
      <li>int depth: 현재 내 숫자 길이를 뜻한다.</li>
      <li>int k: 만들 숫자 길이이다.</li>
    </ul>
  </li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<ul>
  <li><code class="highlighter-rouge">public int solution(String numbers)</code>: numbers를 int형으로 변환하고, for문을 통해 1부터 종이 조각을 가지고 만들 수 있는 최대 길이만큼 숫자 조합 함수 perm()을 호출한다. for문이 끝나면 set에는 소수인 숫자들이 저장되어있으므로 set의 size를 리턴한다.</li>
  <li><code class="highlighter-rouge">public void perm(String[] arr, int depth, int k, Set set)</code>: if 조건인 depth==k의 의미는, 현재 내 길이가 k와 같아졌으므로 원하는 k개의 숫자가 세팅되었다는 뜻이므로 더 이상 순열을 생성하지 않고 print()함수를 호출해 숫자를 연결해준다.<br />
else문은 아직 k만큼 길이 생성이 되지 않았을 경우이다. 이 경우에는 for문을 통해 현재 내 위치 depth부터 arr.length까지 돌면서 숫자 길이를 늘린다. 이때 숫자 조합을 위해 swap()을 호출하여 arr의 순서를 바꾼다(<a href="https://gorakgarak.tistory.com/522">https://gorakgarak.tistory.com/522</a> 참고). 배열이 변경되었다면 depth+1하여 다시 perm()함수를 호출한다(재귀). 이렇게 재귀를 계속 호출하다가 if문에 걸려서 return하면 그 다음 swap()으로 넘어간다. 다음 swap()을 진행할 수 있다는 것은 숫자 조합이 완성되었다는 뜻이다. 때문에 다시 swap()을 통해 배열을 다시 원상복구해준다. 다시 swap을 호출해주지 않는다면 이후 arr사용에 문제가 생긴다. 이후에 이상한 값이 나올 것이다.</li>
  <li><code class="highlighter-rouge">public void swap(String[] arr, int i, int j)</code>: 배열 arr의 i와 j번째 값을 바꾼다.</li>
  <li><code class="highlighter-rouge">public void print(String[] arr, int k, Set set)</code>: 숫자 조합이 완성되면 이 함수에 들어온다. 숫자들을 하나의 String으로 연결시켜주기 위함이다. 이를 위해 StringBuilder가 사용된다. StringBuilder의 append()메소드를 통해 String형을 연결(+)할 수 있다. 일반적으로 +=를 이용해 연결할 수도 있지만, 연결해야할 대상이 많은 경우에는 성능이 저하될 수 있다. 때문에 StringBuilder를 사용한다.<br />
for문으로 숫자가 하나로 연결되면 primeNumber()을 호출해 소수인지 확인한다.</li>
  <li><code class="highlighter-rouge">public void primeNumber(Set set, StringBuilder s)</code>: 연결된 숫자 s를 int형으로 형변환하여 num에 저장한다. 숫자 1은 소수도, 합성수도 아니므로 HashSet에 저장하지 않는다. 2부터 num의 루트값까지 순회하며 나누어지는 값이 있는지 확인한다. 참고로 특정 숫자가 소수인지 판별할 때에는 처음부터 그 값까지 확인하지 않고 루트값까지만 확인해도 된다(에라토스테네스의 체). 나눠지는 값이 있다면 소수가 아니라는 의미이므로 for문을 종료한다. 나눠지는 값이 없다면 소수이므로 HashSet에 저장한다. 이때 만들어지는 숫자 num은 중복이 생길 수 있는데, HashSet에 저장함으로써 중복을 거른다.</li>
</ul>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191117_1.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>소수를 체크하는 것은 어렵지 않았는데 숫자 조합을 생각하는 것이 어려웠다. 그래서 다른 사람 코드를 많이 참고했다. 어려운 문제였다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>프로그래머스 알고리즘 : 소수 찾기 (java) <a href="https://jar100.tistory.com/16">https://jar100.tistory.com/16</a></li>
  <li>순열(PERMUTATION) 알고리즘 <a href="https://gorakgarak.tistory.com/522">https://gorakgarak.tistory.com/522</a></li>
  <li>자바 StringBuilder 사용법 및 사용하는 이유 <a href="https://hardlearner.tistory.com/288">https://hardlearner.tistory.com/288</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 정렬_H-Index</title>
	  <link>/blog//algo-prog42747</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42747</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42747">https://programmers.co.kr/learn/courses/30/lessons/42747</a></p>

<h3 id="테스트케이스-추가">테스트케이스 추가</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">citations(int[])</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">[22,42]</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">[20,19,18,1]</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: center">[2,2,2]</td>
      <td style="text-align: center">2</td>
    </tr>
  </tbody>
</table>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>배열을 내림차순으로 정렬한다.</li>
  <li>h는 배열 원소 갯수부터 시작해서 하나씩 줄어든다.</li>
  <li>배열을 처음부터 순회하면서 원소가 h보다 같거나 크면 cnt++.</li>
  <li>작으면 멈추고 cnt==h인지 체크, 같으면 h를 리턴한다.</li>
  <li>다르면 h–하고 다시 처음부터 순회한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">h</span><span class="o">=</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">h</span><span class="o">){</span><span class="c1">//원소가 h이상이면</span>
                <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="n">h</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span><span class="c1">//h--하고 처음부터 다시 시작</span>
                    <span class="n">h</span><span class="o">--;</span>
                    <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                    <span class="n">i</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
            <span class="o">}</span>   
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_1.PNG" alt="실행결과" />
실패. 테스트11에서 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>잘 모르겠다. 문제 이해도 잘 안되서 다른 풀이 코드를 참고하였다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>인용된 논문 수(h)가 배열 순회 인덱스(i+1)보다 작아지면 i를 리턴한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>  
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//[22,42] 2 경우</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>Integer[] array: int형 배열은 Collections.reverseOrder()를 사용할 수 없으므로 Integer배열로 변환하여 저장한다.</li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>내림차순으로 정렬된 배열과 i를 비교한다.<br />
h   i
6 &gt; 0<br />
5 &gt; 1<br />
3 &gt; 2<strong>__</strong>_이때가 i의 최댓값이므로 횟수(i+1, 횟수는 1부터 시작)을 리턴한다.<br />
1 &lt; 3<br />
0 &lt; 4</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>사실 아직도 내가 문제를 잘못 이해하고 있는 것 같다. 뭔가 알고리즘 문제를 푸는 것은 문제를 얼마나 잘 이해하느냐인 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스/코딩테스트 고득점 Kit/정렬#3] H-Index (Java) <a href="https://developerdk.tistory.com/27">https://developerdk.tistory.com/27</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 완전탐색_모의고사</title>
	  <link>/blog//algo-prog42840</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42840</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42840">https://programmers.co.kr/learn/courses/30/lessons/42840</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>이차원 배열을 생성하여 3명의 정답 패턴을 저장한다.</li>
  <li>이중 for문으로 학생 수 만큼, 패턴이 가장 큰 학생(3번 학생)기준으로 돌린다.</li>
  <li>맞은 문제 갯수를 세어 cntArray에 저장한다.</li>
  <li>3명의 정답수를 모두 계산했으면, 가장 많이 맞힌 학생을 찾아 max에 저장한다.</li>
  <li>공동 1등이 있는지 for문으로 판별한다.</li>
  <li>공동이 있을 경우 오름차순으로 정렬하여 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span><span class="c1">//1,2번은 5,8개가 끝나면 다시 처음부터 반복</span>
                     <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                     <span class="k">continue</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_3.PNG" alt="실행결과" />
실패. 테스트 2, 3, 4를 제외하고는 모두 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>1, 2번 학생은 자신의 패턴(j)순회가 끝나면 다시 처음으로 돌아가 반복하지만, 3번째 학생은 반복하는 코드가 없다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>두번째 for문에서 패턴 최댓값인 10으로 제한하는 것이 아니라 person[i].length로 자신의 패턴 길이만큼 반복하게 한다.</li>
  <li>마지막 문제가 아닌데 패턴 순회(j)가 마지막에 도달했을 경우 다시 처음부터 순회하게 한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">person</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">j</span><span class="o">==</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제가 아닌데 j가 끝났을 경우 다시 처음부터</span>
                    <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>int[][] person: 3명의 정답 패턴을 저장한 이차원 배열이다. 처음에는 각 학생별로 일차원배열에 저장할까했는데, 각각 선언하면 for문에서 3명을 호출하기 애매하여 이차원 배열을 이용하였다.</li>
  <li>int[] cntArray: 3명의 학생들의 정답수를 저장한다.</li>
  <li>int q: answers배열을 순회하기 위한 인덱스이다.</li>
  <li>int cnt: 각 학생별 정답수를 세는 변수이다.</li>
  <li>int max: 가장 많이 맞힌 학생의 인덱스 번호를 저장한다.</li>
  <li>ArrayList<Integer> list: 가장 많이 맞힌 학생이 여러명일 경우, 그것이 몇명이 될 지 알 수 없기 떄문에 초기 할당이 필요없는 ArrayList를 이용한다.</Integer></li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>첫번째 for문에서 학생별로 순회할 수 있게 하고, 두번째 for문에서는 그 학생의 패턴을 반복한다.<br />
문제를 맞혔으면 cnt를 증가하고, 마지막 문제까지 풀면 cntArray에 정답수를 넣은 후 다음 학생을 위해 q와 cnt를 초기화한다.<br />
아직 문제가 남았는데 패턴이 끝났다면 j=-1로 초기화하여 다시 반복한다.<br />
3명의 정답수를 모두 세었으면 최댓값을 가진 학생이 누구인지 찾아 max에 학생의 인덱스 번호를 저장한다.<br />
이때 1등이 여러명일 수 있으므로 ArrayList를 이용하여 최댓값을 가진 학생들의 인덱스를 모두 저장한다. 이후 오름차순으로 정렬하여 리턴한다.</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_4.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>학생들의 정답수를 세는 것은 어렵지 않았지만, 의외로 중복되는 1등이 있을 경우 모두 찾아 오름차순으로 정렬하는 것이 고역이었다. 배열만 사용해서 문제를 해결할 수 있을 것 같았는데 마지막에 ArrayList를 쓰니까 어색하다. 무언가 ArrayList는 거하게 써야할 것 같은데^ㅠ^.<br />
다른 사람들은 어떻게 풀었는지 코드를 읽어보았는데, 굳이 이중for문을 돌리지 않고 한번 answers를 읽을 때 3명을 모두 비교하여 푼 사람들이 훨씬 많았다. 나는 사람을 기준으로 코드를 작성했다면, 다른 사람들은 문제를 기준으로 푼 것 같다. 그게 더 훨씬 효율성에서 좋은 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[Programmers/프로그래머스] 모의고사 JAVA <a href="https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664">https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 정렬_가장 큰 수: Comparator을 이용한 정렬 구현</title>
	  <link>/blog//algo-prog42746</link>
	  <author></author>
	  <pubDate>2019-11-11T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42746</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42746">https://programmers.co.kr/learn/courses/30/lessons/42746</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>int를 String형으로 변환한다.</li>
  <li>배열에 넣고 내림차순한다.</li>
  <li>그대로 이어붙여서 가장 큰 수를 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numbers</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">numbers</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Comparator</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">answer</span><span class="o">+=</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191111_1.PNG" alt="실행결과" />
실패. 정렬이 제대로 이루어지지 않았다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>내림차순 array에 30 3순으로 들어갔다. “30”&gt;”3”으로 비교했기 때문이다. 30과 3으로 숫자를 만들 때 303&lt;330이므로 array에 3 30순으로 들어가야한다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>Comparator를 이용해 compare을 Override해서 사용한다.</li>
  <li>정렬이 완료되면 순서대로 이어붙인다.</li>
  <li>answer이 0으로 시작하면 0으로만 이루어진 문자열이므로 “0”을 리턴한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">numbers</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">answer</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="n">String</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="n">numbers</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">numbers</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(){</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">String</span> <span class="n">s1</span><span class="o">,</span> <span class="n">String</span> <span class="n">s2</span><span class="o">){</span>
                <span class="k">return</span> <span class="o">(</span><span class="n">s2</span><span class="o">+</span><span class="n">s1</span><span class="o">).</span><span class="na">compareTo</span><span class="o">(</span><span class="n">s1</span><span class="o">+</span><span class="n">s2</span><span class="o">);</span><span class="c1">//내림차순</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">answer</span><span class="o">+=</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"0"</span><span class="o">)){</span>
            <span class="n">answer</span><span class="o">=</span><span class="s">"0"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>String[] array: 파라미터 numbers를 String 형변환하여 저장한다.</li>
  <li><code class="highlighter-rouge">public int compare(String s1, String s2)</code>: s1과 s2를 조합해 만들 수 있는 두 수를 비교해 큰 수가 왼쪽으로 가도록(우선순위가 높아지도록) 한다. 이 문제에서는 내림차순으로 정렬해야하므로 위와 같이 작성하였다. 오름차순일 경우 (s1+s2).compareTo(s2+s1)이다.</li>
  <li>예시) s1=9, s2=8<br />
s1+s2=98, s2+s1=89</li>
  <li>return (s1+s2).compareTo(s2+s1)인 경우<br />
“98”.compareTo(“89”) =&gt; 양수 =&gt; compare(9,8)이 양수를 리턴하므로 9(s1)가 뒤로 이동한다.</li>
  <li>return (s2+s1).compareTo(s1+s2)인 경우<br />
“89”.compoareTo(“98”) =&gt; 음수 =&gt; compare(9,8)이 음수를 리턴하므로 9(s1)가 앞으로 이동한다.</li>
  <li>compareTo 함수: 비교 정렬할 때 사용한다. 숫자가 작을수록(음수일수록) 우선순위가 높아진다(왼쪽으로 간다).</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">A.compareTo(B)</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">A&lt;B</td>
      <td style="text-align: center">음수</td>
    </tr>
    <tr>
      <td style="text-align: center">A=B</td>
      <td style="text-align: center">0</td>
    </tr>
    <tr>
      <td style="text-align: center">A&gt;B</td>
      <td style="text-align: center">양수</td>
    </tr>
  </tbody>
</table>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191111_2.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
<p>Comparator가 아직 헷갈린다. 그래도 어려운 문제는 아니었다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>헷갈리기 쉬운 “동등비교”와 “정렬” <a href="http://www.nextree.co.kr/p11101/">http://www.nextree.co.kr/p11101/</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[SQL/프로그래머스] SUM, MAX, MIN_최댓값 구하기</title>
	  <link>/blog//sql-prog59415</link>
	  <author></author>
	  <pubDate>2019-11-10T09:00:00+09:00</pubDate>
	  <guid>/blog//sql-prog59415</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/59415">https://programmers.co.kr/learn/courses/30/lessons/59415</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>가장 최근에 들어온 동물을 조회하므로 DATETIME이 가장 큰 동물을 출력한다. <code class="highlighter-rouge">MAX(DATETIME)</code></li>
  <li>결과가 ‘시간’으로 출력되어야하므로 AS를 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">MAX</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span> <span class="k">AS</span> <span class="s1">'시간'</span> <span class="k">FROM</span> <span class="n">ANIMAL_INS</span><span class="p">;</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[SQL/프로그래머스] GROUP BY_입양 시각 구하기(1): ORDER BY와 GROUP BY의 차이점</title>
	  <link>/blog//sql-prog59412</link>
	  <author></author>
	  <pubDate>2019-11-10T09:00:00+09:00</pubDate>
	  <guid>/blog//sql-prog59412</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/59412">https://programmers.co.kr/learn/courses/30/lessons/59412</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>DATETIME의 시를 출력하기위해 HOUR키워드를 사용한다.</li>
  <li>시간대별로 갯수를 세므로 COUNT를 사용한다.</li>
  <li>9시부터 19시까지이므로 조건절 WHERE에서 제한을 둔다.</li>
  <li>ORDER BY를 이용해 시간대 순으로 정렬한다.</li>
  <li>출력문 조건에 맞게 AS를 사용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span> <span class="k">AS</span> <span class="s1">'HOUR'</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">))</span> <span class="k">AS</span> <span class="s1">'COUNT'</span>
<span class="k">FROM</span> <span class="n">ANIMAL_OUTS</span>
<span class="k">WHERE</span> <span class="mi">9</span><span class="o">&lt;=</span><span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span> <span class="k">AND</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">19</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">);</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191110_1.PNG" alt="실행결과" />
실패</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>ORDER BY가 아니라 GROUP BY를 사용해야한다.</p>

<h2 id="-ᐛ-و-두-번째-도전"><span style="color:navy">( ᐛ )و 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>GROUP BY를 이용한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span> <span class="k">AS</span> <span class="s1">'HOUR'</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">))</span> <span class="k">AS</span> <span class="s1">'COUNT'</span>
<span class="k">FROM</span> <span class="n">ANIMAL_OUTS</span>
<span class="k">WHERE</span> <span class="mi">9</span><span class="o">&lt;=</span><span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span> <span class="k">AND</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">)</span><span class="o">&lt;=</span><span class="mi">19</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="n">HOUR</span><span class="p">(</span><span class="n">DATETIME</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="3-결과-1">3. 결과</h3>
<p><img src="./assets/images/191108_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-order-by와-group-by">4. ORDER BY와 GROUP BY</h3>
<ul>
  <li>ORDER BY: 조회된 결과의 레코드들을 원하는 기준으로 정렬해 출력한다.
제일 마지막 줄에 위치하여 조회된 자료를 정리하는 느낌이다.
ALIAS명도 사용 가능하다.</li>
  <li>GROUP BY: 그룹별 통계정보를 제공한다.
데이터베이스가 GROUP BY에 명시된 칼럼 순서대로 오름차순 정렬을 실시한다.
ALIAS 명을 사용할 수 없고, WHERE절에 올 수 없다.
HAVING절을 이용해 제한조건을 둔다.</li>
</ul>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>group by와 order by 차이점 <a href="http://blog.naver.com/PostView.nhn?blogId=bluejhs1&amp;logNo=10021622900&amp;redirect=Dlog&amp;widgetTypeCall=true">http://blog.naver.com/PostView.nhn?blogId=bluejhs1&amp;logNo=10021622900&amp;redirect=Dlog&amp;widgetTypeCall=true</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[SQL/프로그래머스] SUM, MAX, MIN_중복 제거하기: DISTINCT와 GROUP BY의 차이점</title>
	  <link>/blog//sql-prog59408</link>
	  <author></author>
	  <pubDate>2019-11-10T09:00:00+09:00</pubDate>
	  <guid>/blog//sql-prog59408</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/59408">https://programmers.co.kr/learn/courses/30/lessons/59408</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>NAME에 중복, null이 존재하는데 이를 제외하고 갯수를 세야한다. 따라서 DISTINCT를 이용해 중복을 제거한다.</li>
  <li>DISTINCT는 null도 포함하므로 조건절에서 NOT NULL을 사용한다.</li>
  <li>제거한 값을 COUNT로 세서 출력한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="n">NAME</span><span class="p">)</span> <span class="k">FROM</span> <span class="n">ANIMAL_INS</span> <span class="k">WHERE</span> <span class="n">NAME</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">;</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-distinct와-group-by">4. DISTINCT와 GROUP BY</h3>
<ul>
  <li>DISTINCT: 중복되지 않는 레코드를 조회한다.</li>
  <li>GROUP BY: 데이터를 그룹핑해서 그 결과를 가져온다.</li>
  <li>차이점: DISTINCT는 정렬된 결과가 아니지만, GROUP BY는 정렬된 결과를 출력한다.</li>
</ul>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

<h3 id="참고">참고</h3>
<ul>
  <li>DISTINCT 와 GROUP BY의 차이 <a href="http://intomysql.blogspot.com/2011/01/distinct-group-by.html">http://intomysql.blogspot.com/2011/01/distinct-group-by.html</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[SQL/프로그래머스] SUM, MAX, MIN_동물 수 구하기</title>
	  <link>/blog//sql-prog59406</link>
	  <author></author>
	  <pubDate>2019-11-10T09:00:00+09:00</pubDate>
	  <guid>/blog//sql-prog59406</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/59406">https://programmers.co.kr/learn/courses/30/lessons/59406</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>동물 보호소에 있는 동물 수를 세야 하므로 COUNT를 사용하고, 인자는 중복되지않는 값을 사용하므로 <code class="highlighter-rouge">COUNT(ANIMAL_ID)</code>이다.</li>
  <li>출력이 count이므로 AS를 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">ANIMAL_ID</span><span class="p">)</span> <span class="k">AS</span> <span class="s1">'count'</span> <span class="k">FROM</span> <span class="n">ANIMAL_INS</span><span class="p">;</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[SQL/프로그래머스] SELECT_상위 n개 레코드: LIMIT 사용하기</title>
	  <link>/blog//sql-prog59405</link>
	  <author></author>
	  <pubDate>2019-11-10T09:00:00+09:00</pubDate>
	  <guid>/blog//sql-prog59405</guid>
	  <description><![CDATA[
	     <h2 id="문제"><span style="color:navy">문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/59405">https://programmers.co.kr/learn/courses/30/lessons/59405</a></p>

<h2 id="-ᐛ-و-첫-번째-도전"><span style="color:navy">( ᐛ )و 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>동물의 이름을 조회하므로 <code class="highlighter-rouge">SELECT NAME</code>이다.</li>
  <li><code class="highlighter-rouge">ORDER BY DATETIME</code>으로 보호소에 들어온 순서대로 조회한다.</li>
  <li>가장 먼저 들어온 동물 하나를 조회하므로 <code class="highlighter-rouge">LIMIT 1</code>을 이용한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">NAME</span> <span class="k">FROM</span> <span class="n">ANIMAL_INS</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">DATETIME</span>
<span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191108_5.PNG" alt="실행결과" />
성공٩(˘◊˘)۶</p>

<h3 id="4-limit-사용">4. LIMIT 사용</h3>
<ul>
  <li>n개 가져오기
    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*테이블A에서 5개 조회*/</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">TABLE_A</span> <span class="k">LIMIT</span> <span class="mi">5</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <dl>
      <dt>n번째부터 m개 추출</dt>
      <dd>0부터 시작.
        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*5번째부터 10개 조회*/</span>
<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">TABLE_B</span> <span class="k">LIMIT</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></div>        </div>
        <h2 id="해결-완료"><span style="color:navy">해결 완료!</span></h2>
      </dd>
    </dl>
  </li>
</ul>

<h3 id="참고">참고</h3>
<ul>
  <li>[MySQL] Limit 사용법 <a href="https://nolran.tistory.com/57">https://nolran.tistory.com/57</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
