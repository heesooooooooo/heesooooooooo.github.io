<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>iamheesoo.github.io/blog/</title>
   
   <link>http://localhost:4000</link>
   <description>PS & 개발 기록</description>
   <language>utf-8</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>[JAVA/백준] 1차원 배열: 최댓값</title>
	  <link>/blog//algo-boj2562</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj2562</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/2562">https://www.acmicpc.net/problem/2562</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>자연수의 값과 인덱스 번호를 둘 다 가지는 클래스 Number를 선언한다.</li>
  <li>Number형 배열을 선언한 후, 값을 넣는다.</li>
  <li>Arrays.sort()로 오름차순 정렬한다. 이때, Comparator을 이용하여 Number형 클래스를 정렬시킨다.</li>
  <li>맨 마지막에 들어가있는 것이 최댓값이다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Comparator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Number</span><span class="o">{</span>
	<span class="kt">int</span> <span class="n">index</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
	<span class="kd">public</span> <span class="nf">Number</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">index</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">num</span><span class="o">=</span><span class="n">n</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Number</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Number</span><span class="o">[</span><span class="mi">9</span><span class="o">];</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">9</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">num</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="k">new</span> <span class="n">Number</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Number</span><span class="o">&gt;(){</span>
			<span class="nd">@Override</span>
			<span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Number</span> <span class="n">n1</span><span class="o">,</span> <span class="n">Number</span> <span class="n">n2</span><span class="o">){</span>
				<span class="k">return</span> <span class="n">n1</span><span class="o">.</span><span class="na">num</span><span class="o">-</span><span class="n">n2</span><span class="o">.</span><span class="na">num</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">});</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">8</span><span class="o">].</span><span class="na">num</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">8</span><span class="o">].</span><span class="na">index</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">자연수의 값과 인덱스를 담는 클래스를 선언한다.</span></strong>
    <ul>
      <li>숫자들을 정렬하면 기존 인덱스가 바뀌기 때문에 미리 저장해두어야한다. 따라서 Number클래스를 생성하여 숫자에 값과 처음 인덱스 번호를 저장한다.</li>
      <li>index는 처음 위치(인덱스)를, num에는 실제 값을 저장한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Number형 배열을 선언하여 값을 저장한다.</span></strong>
    <ul>
      <li>이때 인덱스는 1부터 세므로 i+1이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">Arrays.sort()와 Comparator를 이용하여 오름차순 정렬한다.</span></strong>
    <ul>
      <li>배열 array는 Number클래스이므로 Arrays.sort()로 정렬할 수 없다. 어떻게 정렬시킬 것인지 Comparator의 compare을 overrride해야한다.</li>
      <li>Comparator가 다룰 인스턴스의 형은 Number이고, compare()에서 n1, n2의 num을 비교하여 오름차순으로 정렬한다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>다른 사람들은 for문으로 숫자를 순회하며 max를 찾을 때마다 index라는 변수를 두어 해당 값도 갱신시키는 방식으로 코드를 짰다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 1차원 배열: 최소, 최대</title>
	  <link>/blog//algo-boj10818</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj10818</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/10818">https://www.acmicpc.net/problem/10818</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>n개의 정수를 담을 int형 배열을 생성한다.</li>
  <li>값을 모두 넣은 후, Arrays.sort()를 이용하여 오름차순으로 정렬한다.</li>
  <li>0번째에는 최솟값이, n-1에는 최댓값이 들어가게 된다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">Scanner</span> <span class="n">scan</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="o">}</span>
		<span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="mi">0</span><span class="o">]+</span><span class="s">" "</span><span class="o">+</span><span class="n">array</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">Arrays.sort()를 이용하여 오름차순 정렬한다.</span></strong>
    <ul>
      <li>따라서 맨 앞에는 최솟값이, 맨 마지막에는 최댓값이 저장된다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/백준] 1차원 배열: 나머지</title>
	  <link>/blog//algo-boj3052</link>
	  <author></author>
	  <pubDate>2020-03-01T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-boj3052</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://www.acmicpc.net/problem/3052">https://www.acmicpc.net/problem/3052</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>숫자를 42로 나눈 나머지는 0~41 중 하나의 값을 가지므로 길이가 42인 배열을 선언하여 나머지를 구할 때 마다 해당 인덱스를 ++하여 갯수를 센다.</li>
  <li>마지막으로 배열을 순회하며 해당 인덱스 값이 0이 아닌 갯수를 세어 출력한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="cm">/**
 * 
 * @author HEESOO
 *
 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">remainder</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">42</span><span class="o">];</span>
		<span class="n">Scanner</span> <span class="n">input</span><span class="o">=</span><span class="k">new</span> <span class="n">Scanner</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">num</span><span class="o">,</span> <span class="n">remain</span><span class="o">,</span> <span class="n">answer</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="n">num</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
			<span class="n">remain</span><span class="o">=</span><span class="n">num</span><span class="o">%</span><span class="mi">42</span><span class="o">;</span>
			<span class="n">remainder</span><span class="o">[</span><span class="n">remain</span><span class="o">]++;</span>
		<span class="o">}</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">42</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">remainder</span><span class="o">[</span><span class="n">i</span><span class="o">]!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/200301_3.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">배열을 이용하여 나머지의 갯수를 센다.</span></strong>
    <ul>
      <li>배열의 인덱스를 나머지라고 생각하고 해당 값을 증가시킨다.</li>
      <li>10개의 숫자 계산이 끝나면, 배열에 0이 아닌 값들은 최소 한 번씩은 발생한 나머지라는 뜻이다.</li>
      <li>따라서 배열값이 0이 아닌 갯수를 세서 출력하면 서로 다른 나머지 값이 몇 개 있는지 알 수 있다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 탐욕법(Greedy)_저울</title>
	  <link>/blog//algo-prog42886</link>
	  <author></author>
	  <pubDate>2019-11-28T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42886</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42886">https://programmers.co.kr/learn/courses/30/lessons/42886</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>추의 무게 순서대로 오름차순 정렬한다.</li>
  <li>현재까지 추를 조합해 잴 수 있는 무게의 최댓값을 answer이라 가정한다.</li>
  <li>answer을 가장 작은 추 무게로 초기화한다.</li>
  <li>0번째 값은 체크했으므로 그 다음 1부터 마지막까지 순회하며</li>
  <li>현재 추(w)가 answer+1보다 크다면 answer+1은 만들 수 없다는 뜻이므로 answer+1을 리턴한다.</li>
  <li>아니라면 answer+w까지는 추를 조합하여 만들 수 있으므로 answer+=w한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">weight</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">weight</span><span class="o">);</span>        
        <span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="n">weight</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span><span class="c1">//무조건 1이어야함        </span>
        <span class="c1">//answer까지는 무게 측정이 가능하다는 뜻임</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">weight</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">weight</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">answer</span><span class="o">+</span><span class="mi">1</span><span class="o">){</span><span class="c1">//answer다음의 answer+1을 만들 수 없다면</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">+=</span><span class="n">weight</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="c1">//만들 수 없는 최솟값이므로 만들 수 있는 answer다음의 answer+1을 리턴</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191128_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">weight를 오름차순 정렬한다.</span></strong>
    <ul>
      <li>1부터 시작해서 무게 측정이 가능한지 확인하기 위함이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">answer은 최대 answer까지 무게 측정이 가능하다는 뜻이다.</span></strong>
    <ul>
      <li>answer을 weight[0]으로 초기화했으므로 현재 1까지는 무게 측정이 가능하다는 의미이다.</li>
      <li>0부터 i까지의 무게 추를 모두 더한 값이 answer이다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">answer까지 측정이 가능하므로 그 다음 숫자인 answer+1이 가능한지 확인해야한다.</span></strong>
    <ul>
      <li>따라서 현재 weight[i]가 answer+1이거나 answer+1안의 범위(weight[i]&lt;=answer+1)에 들어와야한다.</li>
      <li><span style="color:red">만약 weight[i]==answer+1이라면</span> weight[i]하나로 answer+1이 측정 가능하다.</li>
      <li><span style="color:red">weight[i]&lt;answer+1이라면,</span> answer+1은 answer+w-(w-1)로 만들 수 있다. (w-1은 당연히 만들 수 있다. 왜냐하면 w라는 무게는 1부터 i까지의 조합으로 만들 수 있으므로 이전의 값 w-1역시 가능하다.)</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">weight[i]가 answer+1보다 크다면 answer+1은 만들 수 없다.</span></strong>
    <ul>
      <li>answer까지는 모든 추를 더해서 만든 최댓값인데, weight[i]가 1이 아니고서야 answer+1을 만들 수 없다.</li>
      <li>따라서 지금까지의 추를 조합해서 만들 수 있는 최댓값은 answer이 마지막이 된다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">answer+1이 가능하다면 answer+=weight[i]한다.</span></strong>
    <ul>
      <li>이제 0부터 i까지 조합으로 answer+weight[i]까지 측정이 가능해졌다.</li>
      <li>설명3에서 weight[i]&lt;answer+1일때 answer+1이 가능한 것처럼, answer+2…answer+weight[i]까지도 당연히 가능하다.</li>
      <li>(사실 answer+=weight[i]하는게 잘 와닿지 않는다. 뭔가 당연하면서도 당연하지 않게 느껴져서 여기서 시간을 다썼다.)</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">리턴은 측정할 수 없는 수의 최솟값이므로 answer+1을 리턴한다.</span></strong>
    <ul>
      <li>answer은 측정 가능한 값이고, 문제에서 요구하는 것은 측정할 수 없는 최솟값이므로 answer+1이다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>코드를 봤을때는 되게 간단해보이는데 문제는 그렇지 않았다. 그냥 문제를 주고 풀어라 해도 노가다로 뛸 판에 코딩하라니까 더 어려웠다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>Greedy ‘저울’ 알고리즘 문제풀이 <a href="https://geehye.github.io/programmers-greedy-07/#">https://geehye.github.io/programmers-greedy-07/#</a></li>
  <li>[백준 #2437번 JAVA] 저울 풀이 <a href="https://plplim.tistory.com/59">https://plplim.tistory.com/59</a></li>
  <li>백준 2437번 저울 <a href="https://jaimemin.tistory.com/756">https://jaimemin.tistory.com/756</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 탐욕법(Greedy)_단속카메라</title>
	  <link>/blog//algo-prog42884</link>
	  <author></author>
	  <pubDate>2019-11-27T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42884</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42884">https://programmers.co.kr/learn/courses/30/lessons/42884</a></p>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>빨리 나간 순서대로 정렬한다.</li>
  <li>진입시점이 늦은 것을 발견했을 때, 해당 나가는 시점을 저장해 앞에까지는 카메라를 만났음을 확정한다. 따라서 카메라++한다.</li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">routes</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
         <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">routes</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;(){</span><span class="c1">//routes[i][1]기준 오름차순 정렬</span>
             <span class="nd">@Override</span>
             <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">b</span><span class="o">){</span>
                 <span class="k">return</span> <span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]-</span><span class="n">b</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
             <span class="o">}</span>
         <span class="o">});</span>

         <span class="kt">int</span> <span class="n">latest</span><span class="o">=</span><span class="n">Integer</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span><span class="c1">//Integer의 최솟값으로 초기화       </span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">routes</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="c1">//모든 경로를 순회</span>
             <span class="k">if</span><span class="o">(</span><span class="n">latest</span><span class="o">&lt;</span><span class="n">routes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]){</span><span class="c1">//현재 기준 진입시점이 가장 늦은 차를 발견하면</span>
                 <span class="n">latest</span><span class="o">=</span><span class="n">routes</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span><span class="c1">//해당 차의 나가는 점을 저장</span>
                 <span class="n">answer</span><span class="o">++;</span><span class="c1">//현재 차까지 경로에 카메라를 하나 추가하여 최소 한번쯤은 카메라를 만나는 것을 보장</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191127_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">routes를 빨리 나간 순서대로 정렬한다.</span></strong>
    <ul>
      <li>차량이 나가기 전에 최소 한 번 카메라를 만나면 된다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">진입시점이 늦은 차량을 찾는다.</span></strong>
    <ul>
      <li><span style="color:red">차들의 경로가 겹친다면</span> 가장 늦게 들어온 차의 진입시점에 카메라를 놓으면 된다.</li>
      <li>그러면 겹치는 차들은 카메라를 최소 한 번 만났으므로 선상에서 제외한다.</li>
      <li>뒤의 값들은 현재까지의 가장 늦게 나가는 차량 뒤에 진입하므로(차들의 경로가 겹친다고 가정하고 있음!) latest에 가장 늦게 들어온 차의 나가는 시점을 저장한다.</li>
      <li><span style="color:red">차들의 경로가 겹치지 않더라도 문제없다.</span></li>
      <li>경로가 겹치지 않는다는 것은 앞에까지의 차들은 계산이 끝났다는 뜻이다. 내 진입시점이 현재로선 가장 늦으므로 위 if문을 만족하여 카메라를 추가하게 된다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">latest는 가장 작은 값으로 초기화되야 한다.</span></strong>
    <ul>
      <li>routes에서 진입시점이 가장 작은 값이 무엇인지 알 수 없기 때문에, 그보다 더 작은 값을 저장하여 if문에서 비교가 가능하도록 해야한다. 문제에서는 차량 진입, 나가는 시점의 범위를 주었으므로 -30000으로 초기화해도 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>접근 방식을 모르겠어서 구글링하다가 엄청 간단하게 해결한 코드가 있어서 그 코드를 이해하는데 시간을 다썼다. 주석이라도 한줄 달아줬다면 좋았을텐데…. 주석의 중요성 다시 한 번 느낀다. 어쨌든 이런 생각을 하는게 대단할 뿐</p>

<h3 id="참고">참고</h3>
<ul>
  <li>Greedy ‘단속카메라’ 알고리즘 문제풀이 <a href="https://geehye.github.io/programmers-greedy-06/#">https://geehye.github.io/programmers-greedy-06/#</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 탐욕법(Greedy)_섬 연결하기</title>
	  <link>/blog//algo-prog42861</link>
	  <author></author>
	  <pubDate>2019-11-26T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42861</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42861">https://programmers.co.kr/learn/courses/30/lessons/42861</a></p>

<h3 id="테스트케이스-추가">테스트케이스 추가</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">n(int)</th>
      <th style="text-align: center">costs(int[][])</th>
      <th style="text-align: center">Return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">[[0, 1, 1], [2, 3, 1], [0, 2, 2], [0, 3, 3]]</td>
      <td style="text-align: center">4</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">[[0, 1, 1], [2, 3, 2], [4, 5, 2], [2, 4, 3], [1, 5, 4]]</td>
      <td style="text-align: center">11</td>
    </tr>
  </tbody>
</table>

<h2 id="-도전"><span style="color:navy">👊 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<p>=&gt; 크루스칼(Kruskal) 알고리즘을 이용한다.</p>
<ol>
  <li>비용을 오름차순으로 정렬한다.</li>
  <li>사이클이 생기지 않도록 처음부터 체크하며 연결한다.
    <ul>
      <li>섬 둘다 true면 연결되었으므로 넘어감</li>
      <li>둘 다 false면 boolean 변수로 체크해두고 다음으로 넘어감</li>
      <li>둘 중 하나가 false면 연결해주고, 앞에서 둘다 false라 넘어간 것이 있는지 체크. 있다면 앞에서부터 다시 체크.</li>
    </ul>
  </li>
</ol>

<h3 id="2-구현-성공-코드">2. 구현 (성공 코드)</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">costs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">boolean</span><span class="o">[]</span> <span class="n">visit</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">n</span><span class="o">];</span><span class="c1">//true면 섬이 연결된 것</span>

        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">costs</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">[]&gt;(){</span><span class="c1">//비용 기준 오름차순 정렬</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">b</span><span class="o">){</span>
                <span class="k">return</span> <span class="n">a</span><span class="o">[</span><span class="mi">2</span><span class="o">]-</span><span class="n">b</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">});</span>
        <span class="kt">int</span> <span class="n">connect</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="c1">//섬들이 모두 연결되었는지 체크</span>
        <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="c1">//섬들을 순회하는 인덱스</span>
        <span class="kt">int</span> <span class="n">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">,</span><span class="n">b</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span><span class="c1">//두 섬을 가져오는 변수</span>

        <span class="n">visit</span><span class="o">[</span><span class="n">costs</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]]=</span><span class="kc">true</span><span class="o">;</span><span class="c1">//시작점</span>
        <span class="kt">boolean</span> <span class="n">passIdx</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span><span class="c1">//둘다 F라 뛰어넘은 경우 true로 저장</span>
        <span class="k">while</span><span class="o">(</span><span class="n">connect</span><span class="o">&lt;</span><span class="n">n</span><span class="o">&amp;&amp;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">costs</span><span class="o">.</span><span class="na">length</span><span class="o">){</span><span class="c1">//모든 섬이 연결될때까지&amp;&amp;i가 인덱스 범위를 넘어가지 않게</span>
            <span class="n">a</span><span class="o">=</span><span class="n">costs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">b</span><span class="o">=</span><span class="n">costs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">visit</span><span class="o">[</span><span class="n">a</span><span class="o">]&amp;&amp;!</span><span class="n">visit</span><span class="o">[</span><span class="n">b</span><span class="o">]){</span><span class="c1">//둘다 F면</span>
                <span class="n">passIdx</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="nf">if</span><span class="o">(!(</span><span class="n">visit</span><span class="o">[</span><span class="n">a</span><span class="o">]&amp;&amp;</span><span class="n">visit</span><span class="o">[</span><span class="n">b</span><span class="o">])){</span><span class="c1">//둘중 하나가 F면</span>
                <span class="n">visit</span><span class="o">[</span><span class="n">a</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
                <span class="n">visit</span><span class="o">[</span><span class="n">b</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
                <span class="n">connect</span><span class="o">++;</span>
                <span class="n">answer</span><span class="o">+=</span><span class="n">costs</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">2</span><span class="o">];</span><span class="c1">//비용 계산</span>
                <span class="k">if</span><span class="o">(</span><span class="n">passIdx</span><span class="o">){</span><span class="c1">//둘다 F라 패스한 것이 있으므로 다시 돌아가 체크</span>
                    <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="c1">//i=1부터 순회하기 위함(처음은 무조건 연결되었으므로 볼 필요도 없음). 밑에서 i++됨</span>
                    <span class="n">passIdx</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">i</span><span class="o">++;</span><span class="c1">//다음 섬으로 인덱스 이동</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191126_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h3 id="4-설명">4. 설명</h3>
<ol>
  <li><strong><span style="color:navy">비용을 기준으로 오름차순 정렬한다.</span></strong>
    <ul>
      <li>이를 통해 최소 비용으로 섬을 연결한다는 조건을 만족시킨다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">섬 간의 연결은 둘 중 하나가 false일 경우에만 가능하다.</span></strong>
    <ul>
      <li>섬 간의 연결 유무는 boolean[] visit를 이용한다. 연결되었으면 true, 아니면 false이다.</li>
      <li>섬 a, b가 둘 다 true인 경우는 연결되었다는 뜻이므로 패스한다.</li>
      <li>둘 다 false인 경우에는 연결하지 않는다. 현재 연결된 섬들에서는 a, b로 이동할 수 없기 때문이다. 일단은 passIdx를 통해 이런 상황이 있음을 표시하고, 다음으로 넘어간다. 나중에 a, b중 하나와 연결이 된다면 다시 되돌아와 연결해주면 된다.</li>
      <li>둘 중 하나가 false일 때 연결해준다. 하나는 true이므로 섬들과 연결되어있다는 뜻이고, 하나는 false이므로 연결지어줄 수 있기 때문이다.</li>
      <li>섬끼리 연결되었다면 boolean[] visit의 해당 인덱스를 true로 바꾼다. connect++하여 연결된 섬의 숫자를 카운트한다. 비용도 answer에 추가한다.</li>
    </ul>
  </li>
  <li><strong><span style="color:navy">연결에 성공한 경우에는 passIdx를 체크한다.</span></strong>
    <ul>
      <li>passIdx는 비용이 적어서 우선순위가 컸지만, 그때 상황으로는 연결할 수 없을 때 true를 저장한다. 하지만 새로운 연결이 생성된 지금에는 이전에는 할 수 없었던 섬 연결이 가능할지도 모른다. 따라서 i=1부터 다시 체크하여 연결할 수 있다면 해준다.</li>
      <li>처음에는 passIdx를 int형으로 선언하여 연결 못하고 넘어간 인덱스 번호를 저장했었다. i=1부터 순회하지 않고 놓친 부분으로 바로 들어갈 수 있게 하여 효율성을 높이고자 했다. 하지만 이렇게 구현하면 안된다. 이 경우 위 추가된 테스트케이스2에서 실패한다. [0,1,1]에서 섬을 연결하고 [2,3,2]~[2,4,3]까지는 모두 연결할 수 없어 패스하게 되는데, passIdx를 int형으로 선언하여 인덱스 값을 저장한다면 값이 계속 덮여 제일 마지막 [2,4,3]의 인덱스 3을 저장하게 되어 앞에 두 값들은 무시하게 된다.</li>
    </ul>
  </li>
</ol>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>이런거 이론으로 알고리즘 시간에 배웠었는데 열심히 공부해둘걸T_T. 처음 코드는 테스트2~7까지 모조리 실패하고, 다음은 4, 6, 7을 실패해서 도대체 놓친 부분이 뭔지 고민하느라 힘들었다. 케이스 조건 생각해내는게 힘들다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[Lv3] 섬 연결하기 <a href="https://ydeer.tistory.com/52">https://ydeer.tistory.com/52</a></li>
  <li>[알고리즘] 크루스칼 알고리즘(Kruskal Algorithm) <a href="https://brenden.tistory.com/36">https://brenden.tistory.com/36</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 탐욕법(Greedy)_구명보트</title>
	  <link>/blog//algo-prog42885</link>
	  <author></author>
	  <pubDate>2019-11-25T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42885</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42885">https://programmers.co.kr/learn/courses/30/lessons/42885</a></p>

<h2 id="-첫-번째-도전"><span style="color:navy">👊 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>오름차순으로 정렬한다.</li>
  <li>앞뒤 인덱스를 둬서 체크한다.</li>
  <li>탈출할 수 있으면 해당 값을 삭제한다.</li>
  <li>다시 i, j 인덱스를 원위치로 두고 체크한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">rescue</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">){</span>
        <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">j</span><span class="o">=</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()&gt;</span><span class="mi">0</span><span class="o">){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()==</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">++;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">)&lt;=</span><span class="n">limit</span><span class="o">){</span>
                <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
                <span class="n">j</span><span class="o">=</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span>
                <span class="n">answer</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="n">j</span><span class="o">--;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">j</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">){</span>
                    <span class="n">list</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                    <span class="n">answer</span><span class="o">++;</span>
                    <span class="n">j</span><span class="o">=</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()-</span><span class="mi">1</span><span class="o">;</span>
                <span class="o">}</span>

            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">people</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">people</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
        <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
        <span class="n">answer</span><span class="o">=</span><span class="n">rescue</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="n">limit</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191125_1.PNG" alt="실행결과" />
실패.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>바보같이 int[]는 오름차순으로 정렬 못한다고 생각하고(내림차순이 Integer[]로 변환후 사용인데) List로 바꿔서 사용했다. 리스트에서 값을 모두 체크하고 삭제하는 과정때문에 효율성이 낮아졌다.</p>

<h2 id="-두-번째-도전"><span style="color:navy">👊 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>오름차순으로 정렬하되, int[]를 그대로 사용한다.</li>
  <li>앞뒤 인덱스 i, j를 두어 체크한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">people</span><span class="o">,</span> <span class="kt">int</span> <span class="n">limit</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">people</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">people</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">j</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">while</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">j</span><span class="o">&amp;&amp;</span><span class="n">people</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">people</span><span class="o">[</span><span class="n">j</span><span class="o">--]&gt;</span><span class="n">limit</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">++;</span><span class="c1">//j꺼</span>
            <span class="o">}</span>
            <span class="n">answer</span><span class="o">++;</span><span class="c1">//i(+j)꺼</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-코드-설명">3. 코드 설명</h3>
<ul>
  <li>Arrays.sort()로 people을 오름차순 정렬한다.</li>
  <li>i는 앞에서부터, j는 뒤에서부터 순회한다.</li>
  <li>i, j가 만나면 배열 원소들을 모두 읽은 것이므로 종료한다.</li>
  <li>for문: for문의 조건 중 i&lt;j가 아니라 i&lt;=j 이유는, i가 혼자 남았을 경우 i의 answer++을 위해 for문에 들어오게 하도록 하기 위함이다.</li>
  <li>while문: 해당 while문은 i+j값이 limit를 초과하는 경우를 체크한다. i+j&lt;=limit를 만족하지 않는다는 뜻은, j와 더해서 limit를 만족할 값은 배열에 없다는 뜻이다. j가 최댓값이고 i가 최솟값인데 i와 만족하지 않는다면 i보다 큰 값들은 당연히 만족하지 않는다.<br />
따라서 j는 홀로 탈출해야하므로 j의 answer을 더한다.<br />
j–는 while문 안에 넣을 수 없다. j–가 while문 안에 있다면 i+j&lt;=limit인 경우에는 해당 것에 대해 answer++을 한 후 j가 앞으로 인덱스 조정이 일어나지 않기 때문이다.</li>
  <li>while문을 탈출한 경우는 i에 만족하는 j가 있거나, 없을 경우이다. 있다면 i+j것을, 없다면 i 홀로 탈출하므로 answer++이다.</li>
</ul>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191125_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>그래도 나름 처음 접근은 좋았다! 오름차순으로 정렬해 인덱스를 앞뒤로 순회하면서 문제를 해결한다는 것은 맞았다. 이를 간단하고 효율적으로 코딩하는 것에서 헤맸지만..</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 탐욕법(Greedy)_체육복</title>
	  <link>/blog//algo-prog42862</link>
	  <author></author>
	  <pubDate>2019-11-20T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42862</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42862">https://programmers.co.kr/learn/courses/30/lessons/42862</a></p>

<h2 id="-첫-번째-도전"><span style="color:navy">👊 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>학생 n을 가지는 배열을 생성, 1로 초기화한다.</li>
  <li>도난당한 학생은 0의 값을 가지고, 여벌이 있는 학생은 2를 가진다.</li>
  <li>학생들을 순회하며 도난당한 학생이 있으면 앞 뒤 학생이 여벌이 있을 경우 하나 준다.</li>
  <li>최종적으로 옷을 가지고 있는 학생 수를 세서 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">lost</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">reserve</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">student</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">l:</span><span class="n">lost</span><span class="o">){</span>
             <span class="n">student</span><span class="o">[</span><span class="n">l</span><span class="o">-</span><span class="mi">1</span><span class="o">]--;</span>
         <span class="o">}</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">r:</span><span class="n">reserve</span><span class="o">){</span>
             <span class="n">student</span><span class="o">[</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="o">]++;</span>
         <span class="o">}</span>

         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]==</span><span class="mi">2</span><span class="o">){</span>
                     <span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]++;</span>
                     <span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">]--;</span>                    
                 <span class="o">}</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">&lt;</span><span class="n">n</span><span class="o">&amp;&amp;</span><span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]==</span><span class="mi">2</span><span class="o">){</span>
                     <span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]++;</span>
                     <span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]--;</span>
                 <span class="o">}</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">1</span><span class="o">||</span><span class="n">student</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">2</span><span class="o">){</span>
                 <span class="n">answer</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<h3 id="3-코드-설명">3. 코드 설명</h3>
<ul>
  <li>학생 수(n)만큼의 크기를 가지는 배열을 생성, 1로 초기화한다. 옷이 없으면 0, 여벌이 있으면 2로 저장한다.</li>
  <li>배열을 순회하면서 현재 학생이 옷이 없을 경우, 앞뒤 학생이 여벌을 가지고 있는지 확인한다. 이때 인덱스가 배열의 범위를 벗어나지 않도록 체크한다. 옷이 있다면 준다.</li>
  <li>순회가 끝나면 배열을 다시 순회하며 옷이 있는 학생(여벌 포함)의 수를 세서 리턴한다.</li>
</ul>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191120_1.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>쉬운 문제였지만 효율적으로 푼 것 같지는 않다.</p>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 완전탐색_모의고사</title>
	  <link>/blog//algo-prog42840</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42840</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42840">https://programmers.co.kr/learn/courses/30/lessons/42840</a></p>

<h2 id="-첫-번째-도전"><span style="color:navy">👊 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>이차원 배열을 생성하여 3명의 정답 패턴을 저장한다.</li>
  <li>이중 for문으로 학생 수 만큼, 패턴이 가장 큰 학생(3번 학생)기준으로 돌린다.</li>
  <li>맞은 문제 갯수를 세어 cntArray에 저장한다.</li>
  <li>3명의 정답수를 모두 계산했으면, 가장 많이 맞힌 학생을 찾아 max에 저장한다.</li>
  <li>공동 1등이 있는지 for문으로 판별한다.</li>
  <li>공동이 있을 경우 오름차순으로 정렬하여 리턴한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span><span class="c1">//1,2번은 5,8개가 끝나면 다시 처음부터 반복</span>
                     <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                     <span class="k">continue</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_3.PNG" alt="실행결과" />
실패. 테스트 2, 3, 4를 제외하고는 모두 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>1, 2번 학생은 자신의 패턴(j)순회가 끝나면 다시 처음으로 돌아가 반복하지만, 3번째 학생은 반복하는 코드가 없다.</p>

<h2 id="-두-번째-도전"><span style="color:navy">👊 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>두번째 for문에서 패턴 최댓값인 10으로 제한하는 것이 아니라 person[i].length로 자신의 패턴 길이만큼 반복하게 한다.</li>
  <li>마지막 문제가 아닌데 패턴 순회(j)가 마지막에 도달했을 경우 다시 처음부터 순회하게 한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
 <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
     <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">answers</span><span class="o">)</span> <span class="o">{</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
         <span class="kt">int</span><span class="o">[][]</span> <span class="n">person</span><span class="o">={{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">5</span><span class="o">},</span>
                         <span class="o">{</span><span class="mi">3</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">5</span><span class="o">}</span>
                       <span class="o">};</span><span class="c1">//제일 긴 3번이 10개임</span>
         <span class="kt">int</span><span class="o">[]</span> <span class="n">cntArray</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
         <span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">person</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]==</span><span class="n">answers</span><span class="o">[</span><span class="n">q</span><span class="o">]){</span><span class="c1">//맞았으면</span>
                     <span class="n">cnt</span><span class="o">++;</span>
                 <span class="o">}</span>
                 <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">==</span><span class="n">answers</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제이면</span>
                     <span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">cnt</span><span class="o">;</span>
                     <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                     <span class="k">break</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">j</span><span class="o">==</span><span class="n">person</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//마지막 문제가 아닌데 j가 끝났을 경우 다시 처음부터</span>
                    <span class="n">j</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                 <span class="o">}</span>
                 <span class="n">q</span><span class="o">++;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="kt">int</span> <span class="n">max</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">max</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">=</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">cntArray</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
             <span class="k">if</span><span class="o">(</span><span class="n">cntArray</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="n">cntArray</span><span class="o">[</span><span class="n">max</span><span class="o">]){</span>
                 <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
             <span class="o">}</span>
         <span class="o">}</span>
         <span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
         <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">()];</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++){</span>
             <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">list</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">)+</span><span class="mi">1</span><span class="o">;</span>
         <span class="o">}</span>
         <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
     <span class="o">}</span>
 <span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>int[][] person: 3명의 정답 패턴을 저장한 이차원 배열이다. 처음에는 각 학생별로 일차원배열에 저장할까했는데, 각각 선언하면 for문에서 3명을 호출하기 애매하여 이차원 배열을 이용하였다.</li>
  <li>int[] cntArray: 3명의 학생들의 정답수를 저장한다.</li>
  <li>int q: answers배열을 순회하기 위한 인덱스이다.</li>
  <li>int cnt: 각 학생별 정답수를 세는 변수이다.</li>
  <li>int max: 가장 많이 맞힌 학생의 인덱스 번호를 저장한다.</li>
  <li>ArrayList<Integer> list: 가장 많이 맞힌 학생이 여러명일 경우, 그것이 몇명이 될 지 알 수 없기 떄문에 초기 할당이 필요없는 ArrayList를 이용한다.</Integer></li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>첫번째 for문에서 학생별로 순회할 수 있게 하고, 두번째 for문에서는 그 학생의 패턴을 반복한다.<br />
문제를 맞혔으면 cnt를 증가하고, 마지막 문제까지 풀면 cntArray에 정답수를 넣은 후 다음 학생을 위해 q와 cnt를 초기화한다.<br />
아직 문제가 남았는데 패턴이 끝났다면 j=-1로 초기화하여 다시 반복한다.<br />
3명의 정답수를 모두 세었으면 최댓값을 가진 학생이 누구인지 찾아 max에 학생의 인덱스 번호를 저장한다.<br />
이때 1등이 여러명일 수 있으므로 ArrayList를 이용하여 최댓값을 가진 학생들의 인덱스를 모두 저장한다. 이후 오름차순으로 정렬하여 리턴한다.</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_4.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>학생들의 정답수를 세는 것은 어렵지 않았지만, 의외로 중복되는 1등이 있을 경우 모두 찾아 오름차순으로 정렬하는 것이 고역이었다. 배열만 사용해서 문제를 해결할 수 있을 것 같았는데 마지막에 ArrayList를 쓰니까 어색하다. 무언가 ArrayList는 거하게 써야할 것 같은데^ㅠ^.<br />
다른 사람들은 어떻게 풀었는지 코드를 읽어보았는데, 굳이 이중for문을 돌리지 않고 한번 answers를 읽을 때 3명을 모두 비교하여 푼 사람들이 훨씬 많았다. 나는 사람을 기준으로 코드를 작성했다면, 다른 사람들은 문제를 기준으로 푼 것 같다. 그게 더 훨씬 효율성에서 좋은 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[Programmers/프로그래머스] 모의고사 JAVA <a href="https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664">https://blog.naver.com/PostView.nhn?blogId=yongyos&amp;logNo=221486300664</a></li>
</ul>

	  ]]></description>
	</item>

	<item>
	  <title>[JAVA/프로그래머스] 정렬_H-Index</title>
	  <link>/blog//algo-prog42747</link>
	  <author></author>
	  <pubDate>2019-11-12T09:00:00+09:00</pubDate>
	  <guid>/blog//algo-prog42747</guid>
	  <description><![CDATA[
	     <h2 id="-문제"><span style="color:navy">👀 문제</span></h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42747">https://programmers.co.kr/learn/courses/30/lessons/42747</a></p>

<h3 id="테스트케이스-추가">테스트케이스 추가</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: center">citations(int[])</th>
      <th style="text-align: center">return</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">[22,42]</td>
      <td style="text-align: center">2</td>
    </tr>
    <tr>
      <td style="text-align: center">[20,19,18,1]</td>
      <td style="text-align: center">3</td>
    </tr>
    <tr>
      <td style="text-align: center">[2,2,2]</td>
      <td style="text-align: center">2</td>
    </tr>
  </tbody>
</table>

<h2 id="-첫-번째-도전"><span style="color:navy">👊 첫 번째 도전</span></h2>

<h3 id="1-설계">1. 설계</h3>
<ol>
  <li>배열을 내림차순으로 정렬한다.</li>
  <li>h는 배열 원소 갯수부터 시작해서 하나씩 줄어든다.</li>
  <li>배열을 처음부터 순회하면서 원소가 h보다 같거나 크면 cnt++.</li>
  <li>작으면 멈추고 cnt==h인지 체크, 같으면 h를 리턴한다.</li>
  <li>다르면 h–하고 다시 처음부터 순회한다.</li>
</ol>

<h3 id="2-구현">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">h</span><span class="o">=</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span><span class="o">[]</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">h</span><span class="o">){</span><span class="c1">//원소가 h이상이면</span>
                <span class="n">cnt</span><span class="o">++;</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">cnt</span><span class="o">==</span><span class="n">h</span><span class="o">){</span>
                    <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span><span class="c1">//h--하고 처음부터 다시 시작</span>
                    <span class="n">h</span><span class="o">--;</span>
                    <span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
                    <span class="n">i</span><span class="o">=-</span><span class="mi">1</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">h</span><span class="o">;</span>
            <span class="o">}</span>   
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="3-결과">3. 결과</h3>
<p><img src="./assets/images/191112_1.PNG" alt="실행결과" />
실패. 테스트11에서 틀렸다.</p>

<h3 id="4-문제점">4. 문제점</h3>
<p>잘 모르겠다. 문제 이해도 잘 안되서 다른 풀이 코드를 참고하였다.</p>

<h2 id="-두-번째-도전"><span style="color:navy">👊 두 번째 도전</span></h2>

<h3 id="1-설계-1">1. 설계</h3>
<ol>
  <li>인용된 논문 수(h)가 배열 순회 인덱스(i+1)보다 작아지면 i를 리턴한다.</li>
</ol>

<h3 id="2-구현-1">2. 구현</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="cm">/**
 *
 * @author HEESOO
 *
 */</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">citations</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">Integer</span> <span class="n">array</span><span class="o">=</span><span class="k">new</span> <span class="n">Integer</span><span class="o">[</span><span class="n">citations</span><span class="o">.</span><span class="na">length</span><span class="o">];</span>
        <span class="n">array</span><span class="o">=</span><span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">citations</span><span class="o">).</span><span class="na">boxed</span><span class="o">().</span><span class="na">toArray</span><span class="o">(</span><span class="n">Integer</span><span class="o">[]::</span><span class="k">new</span><span class="o">);</span>
        <span class="n">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">array</span><span class="o">,</span> <span class="n">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">if</span><span class="o">(</span><span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">){</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>  
            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">array</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="c1">//[22,42] 2 경우</span>
                <span class="n">answer</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>Integer[] array: int형 배열은 Collections.reverseOrder()를 사용할 수 없으므로 Integer배열로 변환하여 저장한다.</li>
</ul>

<h3 id="3-코드-설명">3. 코드 설명</h3>
<p>내림차순으로 정렬된 배열과 i를 비교한다.<br />
h   i
6 &gt; 0<br />
5 &gt; 1<br />
3 &gt; 2<strong>__</strong>_이때가 i의 최댓값이므로 횟수(i+1, 횟수는 1부터 시작)을 리턴한다.<br />
1 &lt; 3<br />
0 &lt; 4</p>

<h3 id="4-결과">4. 결과</h3>
<p><img src="./assets/images/191112_2.PNG" alt="실행결과" />
🤟 성공 🤟</p>

<h2 id="-해결-완료"><span style="color:navy">👏 해결 완료!</span></h2>
<p>사실 아직도 내가 문제를 잘못 이해하고 있는 것 같다. 뭔가 알고리즘 문제를 푸는 것은 문제를 얼마나 잘 이해하느냐인 것 같다.</p>

<h3 id="참고">참고</h3>
<ul>
  <li>[프로그래머스/코딩테스트 고득점 Kit/정렬#3] H-Index (Java) <a href="https://developerdk.tistory.com/27">https://developerdk.tistory.com/27</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
